function pokemon_stats(slot) {
//The following arrays are just for Pok√©mon's stats, and are labeled as such

    var PKMN = [];
    //Nat Dex Number = Type1, Type2, HP, ATK, DEF, SPATK, SPDEF, SPD, EXP, KG, Habitat, Catch Rate
PKMN[1]=[10,14,45,49,49,65,65,45,3,6.9,11,45] //BULBASAUR
PKMN[2]=[10,14,60,62,63,80,80,60,6,13,11,45] //IVYSAUR
PKMN[3]=[10,14,80,82,83,100,100,80,9,100,11,45] //VENUSAUR
PKMN[4]=[7,1,39,52,43,60,50,65,3,8.5,16,45] //CHARMANDER
PKMN[5]=[7,1,58,64,58,80,65,80,6,19,16,45] //CHARMELEON
PKMN[6]=[7,8,78,84,78,109,85,100,9,90.5,16,45] //CHARIZARD
PKMN[7]=[18,1,44,48,65,50,64,43,3,9,13,45] //SQUIRTLE
PKMN[8]=[18,1,59,63,80,65,80,58,6,22.5,13,45] //WARTORTLE
PKMN[9]=[18,1,79,83,100,85,105,78,9,85.5,13,45] //BLASTOISE
PKMN[10]=[2,1,45,30,35,20,20,45,3,2.9,12,255] //CATERPIE
PKMN[11]=[2,1,50,20,55,25,25,30,6,9.9,12,120] //METAPOD
PKMN[12]=[2,8,60,45,50,90,80,70,9,32,12,45] //BUTTERFREE
PKMN[13]=[2,14,40,35,30,20,20,50,3,3.2,12,255] //WEEDLE
PKMN[14]=[2,14,45,25,50,25,25,35,6,10,12,120] //KAKUNA
PKMN[15]=[2,14,65,90,40,45,80,75,9,29.5,12,45] //BEEDRILL
PKMN[16]=[13,8,40,45,40,35,35,56,3,1.8,12,255] //PIDGEY
PKMN[17]=[13,8,63,60,55,50,50,71,6,30,12,120] //PIDGEOTTO
PKMN[18]=[13,8,83,80,75,70,70,101,9,39.5,12,45] //PIDGEOT
PKMN[19]=[13,1,30,56,35,25,35,72,4,3.5,11,255] //RATTATA
PKMN[20]=[13,1,55,81,60,50,70,97,7,18.5,11,127] //RATICATE
PKMN[21]=[13,8,40,60,30,31,31,70,4,2,17,255] //SPEAROW
PKMN[22]=[13,8,65,90,65,61,61,100,7,38,17,90] //FEAROW
PKMN[23]=[14,1,35,60,44,40,54,55,4,6.9,11,255] //EKANS
PKMN[24]=[14,1,60,85,69,65,79,80,7,65,11,90] //ARBOK
PKMN[25]=[5,1,35,55,40,50,50,90,6,6,12,190] //PIKACHU
PKMN[26]=[5,1,60,90,55,90,80,110,9,30,12,75] //RAICHU
PKMN[27]=[11,1,50,75,85,20,30,40,4,12,17,255] //SANDSHREW
PKMN[28]=[11,1,75,100,110,45,55,65,7,29.5,17,90] //SANDSLASH
PKMN[29]=[14,1,55,47,52,40,40,41,3,7,11,235] //NIDORAN-F
PKMN[30]=[14,1,70,62,67,55,55,56,6,20,11,120] //NIDORINA
PKMN[31]=[14,11,90,92,87,75,85,76,9,60,11,45] //NIDOQUEEN
PKMN[32]=[14,1,46,57,40,40,40,50,3,9,11,235] //NIDORAN-M
PKMN[33]=[14,1,61,72,57,55,55,65,6,19.5,11,120] //NIDORINO
PKMN[34]=[14,11,81,102,77,85,75,85,9,62,11,45] //NIDOKING
PKMN[35]=[14,1,70,45,48,60,65,35,6,7.5,16,150] //CLE19
PKMN[36]=[14,1,95,70,73,95,90,60,7,40,16,25] //CLEFABLE
PKMN[37]=[7,1,38,41,40,50,65,65,4,9.9,11,190] //VULPIX
PKMN[38]=[7,1,73,76,75,81,100,100,7,19.9,11,75] //NINETALES
PKMN[39]=[13,19,115,45,20,45,25,20,6,5.5,11,170] //JIGGLYPUFF
PKMN[40]=[13,19,140,70,45,85,50,45,7,12,11,50] //WIGGLYTUFF
PKMN[41]=[14,8,40,45,35,30,40,55,3,7.5,15,255] //ZUBAT
PKMN[42]=[14,8,75,80,70,65,75,90,6,55,15,90] //GOLBAT
PKMN[43]=[10,14,45,50,55,75,65,30,3,5.4,11,255] //ODDISH
PKMN[44]=[10,14,60,65,70,85,75,40,6,8.6,11,120] //GLOOM
PKMN[45]=[10,14,75,80,85,110,90,50,9,18.6,11,45] //VILEPLUME
PKMN[46]=[2,10,35,70,55,45,55,25,4,5.4,12,190] //PARAS
PKMN[47]=[2,10,60,95,80,60,80,30,7,29.5,12,75] //PARASECT
PKMN[48]=[2,14,60,55,50,40,55,45,4,30,12,190] //VENONAT
PKMN[49]=[2,14,70,65,60,90,75,90,7,12.5,12,75] //VENOMOTH
PKMN[50]=[11,1,10,55,25,35,45,95,4,0.8,15,255] //DIGLETT
PKMN[51]=[11,1,35,80,50,50,70,120,7,33.3,15,50] //DUGTRIO
PKMN[52]=[13,1,40,45,35,40,40,90,4,4.2,18,255] //MEOWTH
PKMN[53]=[13,1,65,70,60,65,65,115,7,32,18,90] //PERSIAN
PKMN[54]=[18,1,50,52,48,65,50,55,4,19.6,13,190] //PSYDUCK
PKMN[55]=[18,1,80,82,78,95,80,85,7,76.6,13,75] //GOLDUCK
PKMN[56]=[6,1,40,80,35,35,45,70,4,28,16,190] //MANKEY
PKMN[57]=[6,1,65,105,60,60,70,95,7,32,16,75] //PRIMEAPE
PKMN[58]=[7,1,55,70,45,70,50,60,4,19,11,190] //GROWLITHE
PKMN[59]=[7,1,90,110,80,100,80,95,7,155,11,75] //ARCANINE
PKMN[60]=[18,1,40,50,40,40,40,90,3,12.4,13,255] //POLIWAG
PKMN[61]=[18,1,65,65,65,50,50,90,6,20,13,120] //POLIWHIRL
PKMN[62]=[18,6,90,95,95,70,90,70,9,54,13,45] //POLIWRATH
PKMN[63]=[15,1,25,20,15,105,55,90,3,19.5,18,200] //ABRA
PKMN[64]=[15,1,40,35,30,120,70,105,6,56.5,18,100] //KADABRA
PKMN[65]=[15,1,55,50,45,135,95,120,9,48,18,50] //ALAKAZAM
PKMN[66]=[6,1,70,80,50,35,35,35,3,19.5,16,180] //MACHOP
PKMN[67]=[6,1,80,100,70,50,60,45,6,70.5,16,90] //MACHOKE
PKMN[68]=[6,1,90,130,80,65,85,55,9,130,16,45] //MACHAMP
PKMN[69]=[10,14,50,75,35,70,30,40,3,4,12,255] //BELLSPROUT
PKMN[70]=[10,14,65,90,50,85,45,55,6,6.4,12,120] //WEEPINBELL
PKMN[71]=[10,14,80,105,65,100,70,70,9,15.5,12,45] //VICTREEBEL
PKMN[72]=[18,14,40,40,35,50,100,70,4,45.5,14,190] //TENTACOOL
PKMN[73]=[18,14,80,70,65,80,120,100,7,55,14,60] //TENTACRUEL
PKMN[74]=[16,11,40,80,100,30,30,20,3,20,16,255] //GEODUDE
PKMN[75]=[16,11,55,95,115,45,45,35,6,105,16,120] //GRAVELER
PKMN[76]=[16,11,80,120,130,55,65,45,9,300,16,45] //GOLEM
PKMN[77]=[7,1,50,85,55,65,65,90,4,30,11,190] //PONYTA
PKMN[78]=[7,1,65,100,70,80,80,105,7,95,11,60] //RAPIDASH
PKMN[79]=[18,15,90,65,65,40,40,15,4,36,13,190] //SLOWPOKE
PKMN[80]=[18,15,95,75,110,100,80,30,7,78.5,13,75] //SLOWBRO
PKMN[81]=[5,17,25,35,70,95,55,45,3,6,17,190] //MAGNEMITE
PKMN[82]=[5,17,50,60,95,120,70,70,6,60,17,60] //MAGNETON
PKMN[83]=[13,8,52,65,55,58,62,60,8,15,11,45] //FARFETCH'D
PKMN[84]=[13,8,35,85,45,35,35,75,4,39.2,11,190] //DODUO
PKMN[85]=[13,8,60,110,70,60,60,100,7,85.2,11,45] //DODRIO
PKMN[86]=[18,1,65,45,55,45,70,45,4,90,14,190] //SEEL
PKMN[87]=[18,12,90,70,80,70,95,70,7,120,14,75] //DEWGONG
PKMN[88]=[14,1,80,80,50,40,50,25,4,30,18,190] //GRIMER
PKMN[89]=[14,1,105,105,75,65,100,50,7,30,18,75] //MUK
PKMN[90]=[18,1,30,65,100,45,25,40,4,4,14,190] //SHELLDER
PKMN[91]=[18,12,50,95,180,85,45,70,7,132.5,14,60] //CLOYSTER
PKMN[92]=[9,14,30,35,30,100,35,80,3,0.1,15,190] //GASTLY
PKMN[93]=[9,14,45,50,45,115,55,95,6,0.1,15,90] //HAUNTER
PKMN[94]=[9,14,60,65,60,130,75,110,9,40.5,15,45] //GENGAR
PKMN[95]=[16,11,35,45,160,30,45,70,4,210,15,45] //ONIX
PKMN[96]=[15,1,60,48,45,43,90,42,4,32.4,11,190] //DROWZEE
PKMN[97]=[15,1,85,73,70,73,115,67,7,75.6,11,75] //HYPNO
PKMN[98]=[18,1,30,105,90,25,25,50,4,6.5,13,225] //KRABBY
PKMN[99]=[18,1,55,130,115,50,50,75,7,60,13,60] //KINGLER
PKMN[100]=[5,1,40,30,50,55,55,100,4,10.4,18,190] //VOLTORB
PKMN[101]=[5,1,60,50,70,80,80,140,7,66.6,18,60] //ELECTRODE
PKMN[102]=[10,15,60,40,80,60,45,40,4,2.5,12,90] //EXEGGCUTE
PKMN[103]=[10,15,95,95,85,125,65,55,7,120,12,45] //EXEGGUTOR
PKMN[104]=[11,1,50,50,95,40,50,35,4,6.5,16,190] //CUBONE
PKMN[105]=[11,1,60,80,110,50,80,45,7,45,16,75] //MAROWAK
PKMN[106]=[6,1,50,120,53,35,110,87,7,49.8,18,45] //HITMONLESS
PKMN[107]=[6,1,50,105,79,35,110,76,7,50.2,18,45] //HITMONCHAN
PKMN[108]=[13,1,90,55,75,60,75,30,4,65.5,11,45] //LICKITUNG
PKMN[109]=[14,1,40,65,95,60,45,35,4,1,18,190] //KOFFING
PKMN[110]=[14,1,65,90,120,85,70,60,7,9.5,18,60] //WEEZING
PKMN[111]=[11,16,80,85,95,30,30,25,3,115,17,120] //RHYHORN
PKMN[112]=[11,16,105,130,120,45,45,40,6,120,17,60] //RHYDON
PKMN[113]=[13,1,250,5,5,35,105,50,6,34.6,18,30] //CHANSEY
PKMN[114]=[10,1,65,55,115,100,40,60,4,35,11,45] //TANGELA
PKMN[115]=[13,1,105,95,80,40,80,90,8,80,11,45] //KANGASKHAN
PKMN[116]=[18,1,30,40,70,70,25,60,4,8,14,225] //HORSEA
PKMN[117]=[18,1,55,65,95,95,45,85,6,25,14,75] //SEADRA
PKMN[118]=[18,1,45,67,60,35,50,63,4,15,13,225] //GOLDEEN
PKMN[119]=[18,1,80,92,65,65,80,68,7,39,13,60] //SEAKING
PKMN[120]=[18,1,30,45,55,70,55,85,4,34.5,14,225] //STARYU
PKMN[121]=[18,15,60,75,85,100,85,115,7,80,14,60] //STARMIE
PKMN[122]=[15,19,40,45,65,100,120,90,7,54.5,18,45] //MR.MIME
PKMN[123]=[2,8,70,110,80,55,80,105,4,56,11,45] //SCYTHER
PKMN[124]=[12,15,65,50,35,115,95,95,7,40.6,18,45] //JYNX
PKMN[125]=[5,1,65,83,57,95,85,105,6,30,11,45] //ELECTABUZZ
PKMN[126]=[7,1,65,95,57,100,85,93,6,44.5,16,45] //MAGMAR
PKMN[127]=[2,1,65,125,100,55,70,85,8,55,12,45] //PINSIR
PKMN[128]=[13,1,75,100,95,40,70,110,8,88.4,11,45] //TAUROS
PKMN[129]=[18,1,20,10,55,15,20,80,4,10,13,255] //MAGIKARP
PKMN[130]=[18,8,95,125,79,60,100,81,7,235,13,45] //GYARADOS
PKMN[131]=[18,12,130,85,80,85,95,60,8,220,14,45] //LAPRAS
PKMN[132]=[13,1,48,48,48,48,48,48,8,4,18,35] //DITTO
PKMN[133]=[13,1,55,55,50,45,65,55,4,6.5,18,45] //EEVEE
PKMN[134]=[18,1,130,65,60,110,95,65,7,29,18,45] //VAPOREON
PKMN[135]=[5,1,65,65,60,110,95,130,7,24.5,18,45] //JOLTEON
PKMN[136]=[7,1,65,130,60,95,110,65,7,25,18,45] //FLAREON
PKMN[137]=[13,1,65,60,70,85,75,40,3,36.5,18,45] //PORYGON
PKMN[138]=[16,18,35,40,100,90,55,35,4,7.5,14,45] //OMANYTE
PKMN[139]=[16,18,70,60,125,115,70,55,7,35,14,45] //OMASTAR
PKMN[140]=[16,18,30,80,90,55,45,55,4,11.5,14,45] //KABUTO
PKMN[141]=[16,18,60,115,105,65,70,80,7,40.5,14,45] //KABUTOPS
PKMN[142]=[16,8,80,105,65,60,75,130,8,59,16,45] //AERODACTYL
PKMN[143]=[13,1,160,110,65,65,110,30,7,460,16,25] //SNORLAX
PKMN[144]=[12,8,90,85,100,95,125,85,8,55.4,15,3] //ARTICUNO
PKMN[145]=[5,8,90,90,85,125,90,100,8,52.6,18,3] //ZAPDOS
PKMN[146]=[7,8,90,100,90,125,85,90,8,60,17,3] //MOLTRES
PKMN[147]=[4,1,41,64,45,50,50,50,3,3.3,13,45] //DRATINI
PKMN[148]=[4,1,61,84,65,70,70,70,6,16.5,13,45] //DRAGONAIR
PKMN[149]=[4,8,91,134,95,100,100,80,9,210,13,45] //DRAGONITE
PKMN[150]=[15,1,106,110,90,154,90,130,8,122,15,3] //MEWTWO
PKMN[151]=[15,1,100,100,100,100,100,100,8,4,12,45] //MEW
PKMN[152]=[10,1,45,49,65,49,65,45,3,6.4,11,45] //CHIKORITA
PKMN[153]=[10,1,60,62,80,63,80,60,6,15.8,11,45] //BAYLEEF
PKMN[154]=[10,1,80,82,100,83,100,80,9,100.5,11,45] //MEGANIUM
PKMN[155]=[7,1,39,52,43,60,50,65,3,7.9,11,45] //CYNDAQUIL
PKMN[156]=[7,1,58,64,58,80,65,80,6,19,11,45] //QUILAVA
PKMN[157]=[7,1,78,84,78,109,85,100,9,79.5,11,45] //TYPHLOSION
PKMN[158]=[18,1,50,65,64,44,48,43,3,9.5,13,45] //TOTODILE
PKMN[159]=[18,1,65,80,80,59,63,58,6,25,13,45] //CROCONAW
PKMN[160]=[18,1,85,105,100,79,83,78,9,88.8,13,45] //FERALIGATR
PKMN[161]=[13,1,35,46,34,35,45,20,4,6,11,255] //SENTRET
PKMN[162]=[13,1,85,76,64,45,55,90,7,32.5,11,90] //FURRET
PKMN[163]=[13,8,60,30,30,36,56,50,4,21.2,12,255] //HOOTHOOT
PKMN[164]=[13,8,100,50,50,76,96,70,7,40.8,12,90] //NOCTOWL
PKMN[165]=[2,8,40,20,30,40,80,55,4,10.8,12,255] //LEDYBA
PKMN[166]=[2,8,55,35,50,55,110,85,7,35.6,12,90] //LEDIAN
PKMN[167]=[2,14,40,60,40,40,40,30,4,8.5,12,255] //SPINARAK
PKMN[168]=[2,14,70,90,70,60,60,40,7,33.5,12,90] //ARIADOS
PKMN[169]=[14,8,85,90,80,70,80,130,9,75,15,90] //CROBAT
PKMN[170]=[18,5,75,38,38,56,56,67,4,12,14,190] //CHINCHOU
PKMN[171]=[18,5,125,58,58,76,76,67,7,22.5,14,75] //LANTURN
PKMN[172]=[5,1,20,40,15,35,35,60,2,2,12,190] //PICHU
PKMN[173]=[19,1,50,25,28,45,55,15,2,3,16,150] //CLEFFA
PKMN[174]=[13,19,90,30,15,40,20,15,2,1,11,170] //IGGLYBUFF
PKMN[175]=[19,1,35,20,65,40,65,20,2,1.5,12,190] //TOGEPI
PKMN[176]=[19,8,55,40,85,80,105,40,6,3.2,12,75] //TOGETIC
PKMN[177]=[15,8,40,50,45,70,45,70,4,2,12,190] //NATU
PKMN[178]=[15,8,65,75,70,95,70,95,7,15,12,75] //XATU
PKMN[179]=[5,1,55,40,40,65,45,35,3,7.8,11,235] //MAREEP
PKMN[180]=[5,1,70,55,55,80,60,45,6,13.3,11,120] //FLAAFFY
PKMN[181]=[5,1,90,75,85,115,90,55,9,61.5,11,45] //AMPHAROS
PKMN[182]=[10,1,75,80,95,90,100,50,9,5.8,11,45] //BELLOSSOM
PKMN[183]=[18,19,70,20,50,20,50,40,6,8.5,13,190] //MARILL
PKMN[184]=[18,19,100,50,80,60,80,50,9,28.5,13,75] //AZUMARILL
PKMN[185]=[16,1,70,100,115,30,65,30,7,38,12,65] //SUDOWOODO
PKMN[186]=[18,1,90,75,75,90,100,70,9,33.9,13,45] //POLITOED
PKMN[187]=[10,8,35,35,40,35,55,50,3,0.5,11,255] //HOPPIP
PKMN[188]=[10,8,55,45,50,45,65,80,6,1,11,120] //SKIPLOOM
PKMN[189]=[10,8,75,55,70,55,95,110,9,3,11,45] //JUMPLUFF
PKMN[190]=[13,1,55,70,55,40,55,85,4,11.5,12,45] //AIPOM
PKMN[191]=[10,1,30,30,30,30,30,30,4,1.8,11,235] //SUNKERN
PKMN[192]=[10,1,75,75,55,105,85,30,7,8.5,11,120] //SUNFLORA
PKMN[193]=[2,8,65,65,45,75,45,95,4,38,12,75] //YANMA
PKMN[194]=[18,11,55,45,45,25,25,15,4,8.5,13,255] //WOOPER
PKMN[195]=[18,11,95,85,85,65,65,35,7,75,13,90] //QUAGSIRE
PKMN[196]=[15,1,65,65,60,130,95,110,7,26.5,18,45] //ESPEON
PKMN[197]=[3,1,95,65,110,60,130,65,7,27,18,45] //UMBREON
PKMN[198]=[3,8,60,85,42,85,42,91,4,2.1,12,30] //MURKROW
PKMN[199]=[18,15,95,75,80,100,110,30,7,79.5,13,70] //SLOWKING
PKMN[200]=[9,1,60,60,60,85,85,85,4,1,15,45] //MISDREAVUS
PKMN[201]=[15,1,48,72,48,72,48,48,8,5,18,225] //UNOWN
PKMN[202]=[15,1,190,33,58,33,58,33,7,28.5,15,45] //WOBBUFFET
PKMN[203]=[13,15,70,80,65,90,65,85,8,41.5,11,60] //GIRAFARIG
PKMN[204]=[2,1,50,65,90,35,35,15,4,7.2,12,190] //PINECO
PKMN[205]=[2,17,75,90,140,60,60,40,7,125.8,12,75] //FORRETRESS
PKMN[206]=[13,1,100,70,70,65,65,45,8,14,15,190] //DUNSPARCE
PKMN[207]=[11,8,65,75,105,35,65,85,4,64.8,16,60] //GLIGAR
PKMN[208]=[17,11,75,85,200,55,65,30,7,400,15,25] //17IX
PKMN[209]=[19,1,60,80,50,40,40,30,4,7.8,18,190] //SNUBBULL
PKMN[210]=[19,1,90,120,75,60,60,45,7,48.7,18,75] //GRANBULL
PKMN[211]=[18,14,65,95,75,55,55,85,8,3.9,14,45] //QWILFISH
PKMN[212]=[2,17,70,130,100,55,80,65,7,118,11,25] //SCIZOR
PKMN[213]=[2,16,20,10,230,10,230,5,8,20.5,16,190] //SHUCKLE
PKMN[214]=[2,6,80,125,75,40,95,85,8,54,12,45] //HERACROSS
PKMN[215]=[3,12,55,95,55,35,75,115,4,28,12,60] //SNEASEL
PKMN[216]=[13,1,60,80,50,50,50,40,4,8.8,16,120] //TEDDIURSA
PKMN[217]=[13,1,90,130,75,75,75,55,7,125.8,16,60] //URSARING
PKMN[218]=[7,1,40,40,40,70,40,20,4,35,16,190] //SLUGMA
PKMN[219]=[7,16,50,50,120,80,80,30,7,55,16,75] //MAGCARGO
PKMN[220]=[12,11,50,50,40,30,30,50,4,6.5,15,225] //SWINUB
PKMN[221]=[12,11,100,100,80,60,60,50,6,55.8,15,75] //PILOSWINE
PKMN[222]=[18,16,55,55,85,65,85,35,8,5,14,60] //CORSOLA
PKMN[223]=[18,1,35,65,35,65,35,65,4,12,14,190] //REMORAID
PKMN[224]=[18,1,75,105,75,105,75,45,7,28.5,14,75] //OCTILLERY
PKMN[225]=[12,8,45,55,45,65,45,75,8,16,16,45] //DELIBIRD
PKMN[226]=[18,8,65,40,70,80,140,70,7,220,14,25] //MANTINE
PKMN[227]=[17,8,65,80,140,40,70,70,8,50.5,17,25] //SKARMORY
PKMN[228]=[3,7,45,60,30,80,50,65,4,10.8,17,120] //HOUNDOUR
PKMN[229]=[3,7,75,90,50,110,80,95,7,35,17,45] //HOUNDOOM
PKMN[230]=[18,4,75,95,95,95,95,85,9,152,14,45] //KINGDRA
PKMN[231]=[11,1,90,60,60,40,40,40,4,33.5,17,120] //PHANPY
PKMN[232]=[11,1,90,120,120,60,60,50,7,120,17,60] //DONPHAN
PKMN[233]=[13,1,85,80,90,105,95,60,6,32.5,18,45] //PORYGON2
PKMN[234]=[13,1,73,95,62,85,65,85,8,71.2,12,45] //STANTLER
PKMN[235]=[13,1,55,20,35,20,45,75,8,58,18,45] //SMEARGLE
PKMN[236]=[6,1,35,35,35,35,35,35,2,21,18,75] //TYROGUE
PKMN[237]=[6,1,50,95,95,35,110,70,7,48,18,45] //HITMONTOP
PKMN[238]=[12,15,45,30,15,85,65,65,2,6,18,45] //SMOOCHUM
PKMN[239]=[5,1,45,63,37,65,55,95,2,23.5,11,45] //ELEKID
PKMN[240]=[7,1,45,75,37,70,55,83,2,21.4,16,45] //MAGBY
PKMN[241]=[13,1,95,80,105,40,70,100,8,75.5,11,45] //MILTANK
PKMN[242]=[13,1,255,10,10,75,135,55,7,46.8,18,30] //BLISSEY
PKMN[243]=[5,1,90,85,75,115,100,115,8,178,11,3] //RAIKOU
PKMN[244]=[7,1,115,115,85,90,75,100,8,198,11,3] //ENTEI
PKMN[245]=[18,1,100,75,115,90,115,85,8,187,11,3] //SUICUNE
PKMN[246]=[16,11,50,64,50,45,50,41,3,72,16,45] //LARVITAR
PKMN[247]=[16,11,70,84,70,65,70,51,6,152,16,45] //PUPITAR
PKMN[248]=[16,3,100,134,110,95,100,61,9,202,16,45] //TYRANITAR
PKMN[249]=[15,8,106,90,130,90,154,110,8,216,14,3] //LUGIA
PKMN[250]=[7,8,106,130,90,110,154,90,8,199,16,3] //HO-OH
PKMN[251]=[15,10,100,100,100,100,100,100,8,5,12,45] //CELEBI
PKMN[252]=[10,1,40,45,35,65,55,70,3,5,12,45] //TREECKO
PKMN[253]=[10,1,50,65,45,85,65,95,6,21.6,12,45] //GROVYLE
PKMN[254]=[10,1,70,85,65,105,85,120,9,52.2,12,45] //SCEPTILE
PKMN[255]=[7,1,45,60,40,70,50,45,3,2.5,11,45] //TORCHIC
PKMN[256]=[7,6,60,85,60,85,60,55,6,19.5,11,45] //COMBUSKEN
PKMN[257]=[7,6,80,120,70,110,70,80,9,52,11,45] //BLAZIKEN
PKMN[258]=[18,1,50,70,50,50,50,40,3,7.6,13,45] //MUDKIP
PKMN[259]=[18,11,70,85,70,60,70,50,6,28,13,45] //MARSHTOMP
PKMN[260]=[18,11,100,110,90,85,90,60,9,81.9,13,45] //SWAMPERT
PKMN[261]=[3,1,35,55,35,30,30,35,4,13.6,11,255] //POOCHYENA
PKMN[262]=[3,1,70,90,70,60,60,70,7,37,11,127] //MIGHTYENA
PKMN[263]=[13,1,38,30,41,30,41,60,4,17.5,11,255] //ZIGZAGOON
PKMN[264]=[13,1,78,70,61,50,61,100,7,32.5,11,90] //LINOONE
PKMN[265]=[2,1,45,45,35,20,30,20,3,3.6,12,255] //WURMPLE
PKMN[266]=[2,1,50,35,55,25,25,15,6,10,12,120] //SILCOON
PKMN[267]=[2,8,60,70,50,100,50,65,9,28.4,12,45] //BEAUTIFLY
PKMN[268]=[2,1,50,35,55,25,25,15,6,11.5,12,120] //CASCOON
PKMN[269]=[2,14,60,50,70,50,90,65,9,31.6,12,45] //DUSTOX
PKMN[270]=[18,10,40,30,30,40,50,30,3,2.6,13,255] //LOTAD
PKMN[271]=[18,10,60,50,50,60,70,50,6,32.5,13,120] //LOMBRE
PKMN[272]=[18,10,80,70,70,90,100,70,9,55,13,45] //LUDICOLO
PKMN[273]=[10,1,40,40,50,30,30,30,3,4,12,255] //SEEDOT
PKMN[274]=[10,3,70,70,40,60,40,60,6,28,12,120] //NUZLEAF
PKMN[275]=[10,3,90,100,60,90,60,80,9,59.6,12,45] //SHIFTRY
PKMN[276]=[13,8,40,55,30,30,30,85,4,2.3,11,200] //TAILLOW
PKMN[277]=[13,8,60,85,60,50,50,125,7,19.8,11,45] //SWELLOW
PKMN[278]=[18,8,40,30,30,55,30,85,4,9.5,14,190] //WINGULL
PKMN[279]=[18,8,60,50,100,85,70,65,7,28,14,45] //PELIPPER
PKMN[280]=[15,19,28,25,25,45,35,40,3,6.6,18,235] //RALTS
PKMN[281]=[15,19,38,35,35,65,55,50,6,20.2,18,120] //KIRLIA
PKMN[282]=[15,19,68,65,65,125,115,80,9,48.4,18,45] //GARDEVOIR
PKMN[283]=[2,18,40,30,32,50,52,65,4,1.7,13,200] //SURSKIT
PKMN[284]=[2,8,70,60,62,80,82,60,7,3.6,13,75] //MASQUERAIN
PKMN[285]=[10,1,60,40,60,40,60,35,4,4.5,12,255] //SHROOMISH
PKMN[286]=[10,6,60,130,80,60,60,70,7,39.2,12,90] //BRELOOM
PKMN[287]=[13,1,60,60,60,35,35,30,3,24,12,255] //SLAKOTH
PKMN[288]=[13,1,80,80,80,55,55,90,6,46.5,12,120] //VIGOROTH
PKMN[289]=[13,1,150,160,100,95,65,100,9,130.5,12,45] //SLAKING
PKMN[290]=[2,11,31,45,90,30,30,40,4,5.5,12,255] //NINCADA
PKMN[291]=[2,8,61,90,45,50,50,160,7,12,12,120] //NINJASK
PKMN[292]=[2,9,1,90,45,30,30,40,7,1.2,12,45] //SHEDINJA
PKMN[293]=[13,1,64,51,23,51,23,28,3,16.3,15,190] //WHISMUR
PKMN[294]=[13,1,84,71,43,71,43,48,6,40.5,15,120] //LOUDRED
PKMN[295]=[13,1,104,91,63,91,73,68,9,84,15,45] //EXPLOUD
PKMN[296]=[6,1,72,60,30,20,30,25,4,86.4,16,180] //MAKUHITA
PKMN[297]=[6,1,144,120,60,40,60,50,7,253.8,16,200] //HARIYAMA
PKMN[298]=[13,19,50,20,40,20,40,20,2,2,13,150] //AZURILL
PKMN[299]=[16,1,30,45,135,45,90,30,4,97,15,255] //NOSEPASS
PKMN[300]=[13,1,50,45,45,35,35,50,4,11,12,255] //SKITTY
PKMN[301]=[13,1,70,65,65,55,55,70,7,32.6,12,60] //DELCATTY
PKMN[302]=[3,9,50,75,75,65,65,50,8,11,15,45] //SABLEYE
PKMN[303]=[17,19,50,85,85,55,55,50,8,11.5,15,45] //MAWILE
PKMN[304]=[17,16,50,70,100,40,40,30,3,60,16,180] //ARON
PKMN[305]=[17,16,60,90,140,50,50,40,6,120,16,90] //LAIRON
PKMN[306]=[17,16,70,110,180,60,60,50,9,360,16,45] //AGGRON
PKMN[307]=[6,15,30,40,55,40,55,60,4,11.2,16,180] //MEDITITE
PKMN[308]=[6,15,60,60,75,60,75,80,7,31.5,16,90] //MEDICHAM
PKMN[309]=[5,1,40,45,40,65,40,65,4,15.2,11,120] //ELECTRIKE
PKMN[310]=[5,1,70,75,60,105,60,105,7,40.2,11,45] //MANECTRIC
PKMN[311]=[5,1,60,50,40,85,75,95,8,4.2,11,200] //PLUSLE
PKMN[312]=[5,1,60,40,50,75,85,95,8,4.2,11,200] //MINUN
PKMN[313]=[2,1,65,73,55,47,75,85,8,17.7,12,150] //VOLBEAT
PKMN[314]=[2,1,65,47,55,73,75,85,8,17.7,12,150] //ILLUMISE
PKMN[315]=[10,1,50,60,45,100,80,65,6,2,11,150] //ROSELIA
PKMN[316]=[14,1,70,43,53,43,53,40,4,10.3,11,225] //GULPIN
PKMN[317]=[14,1,100,73,83,73,83,55,7,80,11,75] //SWALOT
PKMN[318]=[18,3,45,90,20,65,20,65,4,20.8,14,225] //CARVANHA
PKMN[319]=[18,3,70,120,40,95,40,95,7,88.8,14,60] //SHARPEDO
PKMN[320]=[18,1,130,70,35,70,35,60,4,130,14,125] //WAILMER
PKMN[321]=[18,1,170,90,45,90,45,60,7,398,14,60] //WAILORD
PKMN[322]=[7,11,60,60,40,65,45,35,4,24,16,255] //NUMEL
PKMN[323]=[7,11,70,100,70,105,75,40,7,220,16,150] //CAMERUPT
PKMN[324]=[7,1,70,85,140,85,70,20,8,80.4,16,90] //TORKOAL
PKMN[325]=[15,1,60,25,35,70,80,60,4,30.6,16,255] //SPOINK
PKMN[326]=[15,1,80,45,65,90,110,80,7,71.5,16,60] //GRUMPIG
PKMN[327]=[13,1,60,60,60,60,60,60,8,5,16,255] //SPINDA
PKMN[328]=[11,1,45,100,45,45,45,10,3,15,17,255] //TRAPINCH
PKMN[329]=[11,4,50,70,50,50,50,70,6,15.3,17,120] //VIBRAVA
PKMN[330]=[11,4,80,100,80,80,80,100,9,82,17,45] //FLYGON
PKMN[331]=[10,1,50,85,40,85,40,35,4,51.3,17,190] //CACNEA
PKMN[332]=[10,3,70,115,60,115,60,55,7,77.4,17,60] //CACTURNE
PKMN[333]=[13,8,45,40,60,40,75,50,4,1.2,12,255] //SWABLU
PKMN[334]=[4,8,75,70,90,70,105,80,7,20.6,12,45] //ALTARIA
PKMN[335]=[13,1,73,115,60,60,60,90,8,40.3,11,90] //ZANGOOSE
PKMN[336]=[14,1,73,100,60,100,60,65,8,52.5,11,90] //SEVIPER
PKMN[337]=[16,15,70,55,65,95,85,70,8,168,15,45] //LUNATONE
PKMN[338]=[16,15,70,95,85,55,65,70,8,154,15,45] //SOLROCK
PKMN[339]=[18,11,50,48,43,46,41,60,4,1.9,13,190] //BARBOACH
PKMN[340]=[18,11,110,78,73,76,71,60,7,23.6,13,75] //WHISCASH
PKMN[341]=[18,1,43,80,65,50,35,35,4,11.5,13,205] //CORPHISH
PKMN[342]=[18,3,63,120,85,90,55,55,7,32.8,13,155] //CRAWDAUNT
PKMN[343]=[11,15,40,40,55,40,70,55,4,21.5,17,255] //BALTOY
PKMN[344]=[11,15,60,70,105,70,120,75,7,108,17,90] //CLAYDOL
PKMN[345]=[16,10,66,41,77,61,87,23,4,23.8,14,45] //LILEEP
PKMN[346]=[16,10,86,81,97,81,107,43,7,60.4,14,45] //CRADILY
PKMN[347]=[16,2,45,95,50,40,50,75,4,12.5,13,45] //ANORITH
PKMN[348]=[16,2,75,125,100,70,80,45,7,68.2,13,45] //ARMALDO
PKMN[349]=[18,1,20,15,20,10,55,80,4,7.4,13,255] //FEEBAS
PKMN[350]=[18,1,95,60,79,100,125,81,7,162,13,60] //MILOTIC
PKMN[351]=[13,1,70,70,70,70,70,70,8,0.8,11,45] //CASTFORM
PKMN[352]=[13,1,60,90,70,60,120,40,8,22,12,200] //KECLEON
PKMN[353]=[9,1,44,75,35,63,33,45,4,2.3,18,225] //SHUPPET
PKMN[354]=[9,1,64,115,65,83,63,65,7,12.5,18,45] //BANETTE
PKMN[355]=[9,1,20,40,90,30,90,25,3,15,12,190] //DUSKULL
PKMN[356]=[9,1,40,70,130,60,130,25,6,30.6,12,90] //DUSCLOPS
PKMN[357]=[10,8,99,68,83,72,87,51,8,100,12,200] //TROPIUS
PKMN[358]=[15,1,65,50,70,95,80,65,7,1,11,45] //CHIMECHO
PKMN[359]=[3,1,65,130,60,75,60,75,8,47,16,30] //ABSOL
PKMN[360]=[15,1,95,23,48,23,48,23,2,14,15,125] //WYNAUT
PKMN[361]=[12,1,50,50,50,50,50,50,4,16.8,15,190] //SNORUNT
PKMN[362]=[12,1,80,80,80,80,80,80,7,256.5,15,75] //GLALIE
PKMN[363]=[12,18,70,40,50,55,50,25,3,39.5,14,255] //SPHEAL
PKMN[364]=[12,18,90,60,70,75,70,45,6,87.6,14,120] //SEALEO
PKMN[365]=[12,18,110,80,90,95,90,65,9,150.6,14,45] //WALREIN
PKMN[366]=[18,1,35,64,85,74,55,32,4,52.5,14,255] //CLAMPERL
PKMN[367]=[18,1,55,104,105,94,75,52,7,27,14,60] //HUNTAIL
PKMN[368]=[18,1,55,84,105,114,75,52,7,22.6,14,60] //GOREBYSS
PKMN[369]=[18,16,100,90,130,45,65,55,8,23.4,14,25] //RELICANTH
PKMN[370]=[18,1,43,30,55,40,65,97,8,8.7,14,225] //LUVDISC
PKMN[371]=[4,1,45,75,60,40,30,50,3,42.1,17,45] //BAGON
PKMN[372]=[4,1,65,95,100,60,50,50,6,110.5,17,45] //SHELGON
PKMN[373]=[4,8,95,135,80,110,80,100,9,102.6,17,45] //SALAMENCE
PKMN[374]=[17,15,40,55,80,35,60,30,3,95.2,17,3] //BELDUM
PKMN[375]=[17,15,60,75,100,55,80,50,6,202.5,17,3] //METANG
PKMN[376]=[17,15,80,135,130,95,90,70,9,550,17,3] //METAGROSS
PKMN[377]=[16,1,80,100,200,50,100,50,8,230,15,3] //REGIROCK
PKMN[378]=[12,1,80,50,100,100,200,50,8,175,15,3] //REGICE
PKMN[379]=[17,1,80,75,150,75,150,50,8,205,15,3] //REGISTEEL
PKMN[380]=[4,15,80,80,90,110,130,110,8,40,13,3] //LATIAS
PKMN[381]=[4,15,80,90,80,130,110,110,8,60,13,3] //LATIOS
PKMN[382]=[18,1,100,100,90,150,140,90,8,352,14,5] //KYOGRE
PKMN[383]=[11,1,100,150,140,100,90,90,8,950,17,5] //GROUDON
PKMN[384]=[4,8,105,150,90,150,90,95,8,206.5,17,3] //RAYQUAZA
PKMN[385]=[17,15,100,100,100,100,100,100,8,1.1,16,3] //JIRACHI
PKMN[386]=[15,1,50,150,50,150,50,150,8,60.8,16,3] //DEOXYS
PKMN[387]=[10,1,55,68,64,45,55,31,3,10.2,12,45] //TURTWIG
PKMN[388]=[10,1,75,89,85,55,65,36,6,97,12,45] //GROTLE
PKMN[389]=[10,11,95,109,105,75,85,56,9,310,12,45] //TORTERRA
PKMN[390]=[7,1,44,58,44,58,44,61,3,6.2,16,45] //CHIMCHAR
PKMN[391]=[7,6,64,78,52,78,52,81,6,22,16,45] //MONFERNO
PKMN[392]=[7,6,76,104,71,104,71,108,9,55,16,45] //INFERNAPE
PKMN[393]=[18,1,53,51,53,61,56,40,3,5.2,14,45] //PIPLUP
PKMN[394]=[18,1,64,66,68,81,76,50,6,23,14,45] //PRINPLUP
PKMN[395]=[18,17,84,86,88,111,101,60,9,84.5,14,45] //EMPOLEON
PKMN[396]=[13,8,40,55,30,30,30,60,3,2,11,255] //STARLY
PKMN[397]=[13,8,55,75,50,40,40,80,6,15.5,11,120] //STARAVIA
PKMN[398]=[13,8,85,120,70,50,60,100,9,24.9,11,45] //STARAPTOR
PKMN[399]=[13,1,59,45,40,35,40,31,4,20,13,255] //BIDOOF
PKMN[400]=[13,18,79,85,60,55,60,71,7,31.5,13,127] //BIBAREL
PKMN[401]=[2,1,37,25,41,25,41,25,4,2.2,12,255] //KRICKETOT
PKMN[402]=[2,1,77,85,51,55,51,65,7,25.5,12,45] //KRICKETUNE
PKMN[403]=[5,1,45,65,34,40,34,45,3,9.5,11,235] //SHINX
PKMN[404]=[5,1,60,85,49,60,49,60,6,30.5,11,120] //LUXIO
PKMN[405]=[5,1,80,120,79,95,79,70,9,42,11,45] //LUXRAY
PKMN[406]=[10,14,40,30,35,50,70,55,2,1.2,11,255] //BUDEW
PKMN[407]=[10,14,60,70,65,125,105,90,9,14.5,11,75] //ROSERADE
PKMN[408]=[16,1,67,125,40,30,30,58,4,31.5,16,45] //CRANIDOS
PKMN[409]=[16,1,97,165,60,65,50,58,7,102.5,16,45] //RAMPARDOS
PKMN[410]=[16,17,30,42,118,42,88,30,4,57,15,45] //SHIELDON
PKMN[411]=[16,17,60,52,168,47,138,30,7,149.5,15,45] //BASTIODON
PKMN[412]=[2,1,40,29,45,29,45,36,4,3.4,12,120] //BURMY
PKMN[413]=[2,17,60,59,85,79,105,36,7,6.5,12,45] //WORMADAM-P
PKMN[414]=[2,8,70,94,50,94,50,66,7,23.3,12,45] //MOTHIM
PKMN[415]=[2,8,30,30,42,30,42,70,4,5.5,12,120] //COMBEE
PKMN[416]=[2,8,70,80,102,80,102,40,7,38.5,12,45] //VESPIQUEN
PKMN[417]=[5,1,60,45,70,45,90,95,8,3.9,11,200] //PACHIRISU
PKMN[418]=[18,1,55,65,35,60,30,85,4,29.5,13,190] //BUIZEL
PKMN[419]=[18,1,85,105,55,85,50,115,7,33.5,13,75] //FLOATZEL
PKMN[420]=[10,1,45,35,45,62,53,35,4,3.3,11,190] //CHERUBI
PKMN[421]=[10,1,70,60,70,87,78,85,7,9.3,11,75] //CHERRIM
PKMN[422]=[18,1,76,48,48,57,62,34,4,6.3,14,190] //SHELLOS
PKMN[423]=[18,11,111,83,68,92,82,39,7,29.9,14,75] //GASTRODON
PKMN[424]=[13,1,75,100,66,60,66,115,7,20.3,12,45] //AMBIPOM
PKMN[425]=[9,8,90,50,34,60,44,70,4,1.2,18,125] //DRIFLOON
PKMN[426]=[9,8,150,80,44,90,54,80,7,15,18,60] //DRIFBLIM
PKMN[427]=[13,1,55,66,44,44,56,85,4,5.5,18,190] //BUNEARY
PKMN[428]=[13,1,65,76,84,54,96,105,7,33.3,18,60] //LOPUNNY
PKMN[429]=[9,1,60,60,60,105,105,105,7,4.4,15,45] //MISMAGIUS
PKMN[430]=[3,8,100,125,52,105,52,71,7,27.3,12,30] //HONCHKROW
PKMN[431]=[13,1,49,55,42,42,37,85,4,3.9,18,190] //GLAMEOW
PKMN[432]=[13,1,71,82,64,64,59,112,7,43.8,18,75] //PURUGLY
PKMN[433]=[15,1,45,30,50,65,50,45,2,0.6,11,120] //CHINGLING
PKMN[434]=[14,3,63,63,47,41,41,74,4,19.2,18,225] //STUNKY
PKMN[435]=[14,3,103,93,67,71,61,84,7,38,18,60] //SKUNTANK
PKMN[436]=[17,15,57,24,86,24,86,23,4,60.5,15,255] //BRONZOR
PKMN[437]=[17,15,67,89,116,79,116,33,7,187,15,90] //BRONZONG
PKMN[438]=[16,1,50,80,95,10,45,10,2,15,12,255] //BONSLY
PKMN[439]=[15,19,20,25,45,70,90,60,2,13,18,145] //MIME JR.
PKMN[440]=[13,1,100,5,5,15,65,30,2,24.4,18,130] //HAPPINY
PKMN[441]=[13,8,76,65,45,92,42,91,8,1.9,12,30] //CHATOT
PKMN[442]=[9,3,50,92,108,92,108,35,8,108,12,100] //SPIRITOMB
PKMN[443]=[4,11,58,70,45,40,45,42,3,20.5,17,45] //GIBLE
PKMN[444]=[4,11,68,90,65,50,55,82,6,56,17,45] //GABITE
PKMN[445]=[4,11,108,130,95,80,85,102,9,95,17,45] //GARCHOMP
PKMN[446]=[13,1,135,85,40,40,85,5,2,105,16,50] //MUNCHLAX
PKMN[447]=[6,1,40,70,40,35,40,60,2,20.2,16,75] //RIOLU
PKMN[448]=[6,17,70,110,70,115,70,90,7,54,16,45] //LUCARIO
PKMN[449]=[11,1,68,72,78,38,42,32,4,49.5,17,140] //HIPPOPOTAS
PKMN[450]=[11,1,108,112,118,68,72,47,7,300,17,60] //HIPPOWDON
PKMN[451]=[14,2,40,50,90,30,55,65,4,12,17,120] //SKORUPI
PKMN[452]=[14,3,70,90,110,60,75,95,7,61.5,17,45] //DRAPION
PKMN[453]=[14,6,48,61,40,61,40,50,4,23,13,140] //CROAGUNK
PKMN[454]=[14,6,83,106,65,86,65,85,7,44.4,13,75] //TOXICROAK
PKMN[455]=[10,1,74,100,72,90,72,46,8,27,12,200] //CARNIVINE
PKMN[456]=[18,1,49,49,56,49,61,66,4,7,14,190] //FINNEON
PKMN[457]=[18,1,69,69,76,69,86,91,7,24,14,75] //LUMINEON
PKMN[458]=[18,8,45,20,50,60,120,50,2,65,14,25] //MANTYKE
PKMN[459]=[10,12,60,62,50,62,60,40,4,50.5,16,120] //SNOVER
PKMN[460]=[10,12,90,92,75,92,85,60,7,135.5,16,60] //ABOMASNOW
PKMN[461]=[3,12,70,120,65,45,85,125,7,34,12,45] //WEAVILE
PKMN[462]=[5,17,70,70,115,130,90,60,9,180,17,30] //MAGNEZONE
PKMN[463]=[13,1,110,85,95,80,95,50,7,140,11,30] //LICKILICKY
PKMN[464]=[11,16,115,140,130,55,55,40,9,282.8,17,30] //RHYPERIOR
PKMN[465]=[10,1,100,100,125,110,50,50,7,128.6,11,30] //TANGROWTH
PKMN[466]=[5,1,75,123,67,95,85,95,9,138.6,11,30] //ELECTIVIRE
PKMN[467]=[7,1,75,95,67,125,95,83,9,68,16,30] //MAGMORTAR
PKMN[468]=[19,8,85,50,95,120,115,80,9,38,12,30] //TOGEKISS
PKMN[469]=[2,8,86,76,86,116,56,95,7,51.5,12,30] //YANMEGA
PKMN[470]=[10,1,65,110,130,60,65,95,7,25.5,18,45] //LEAFEON
PKMN[471]=[12,1,65,60,110,130,95,65,7,25.9,18,45] //GLACEON
PKMN[472]=[11,8,75,95,125,45,75,95,7,42.5,16,30] //GLISCOR
PKMN[473]=[12,11,110,130,80,70,60,80,9,291,15,50] //MAMOSWINE
PKMN[474]=[13,1,85,80,70,135,75,90,9,34,18,30] //PORYGON-Z
PKMN[475]=[15,6,68,125,65,65,115,80,9,52,18,45] //GALLADE
PKMN[476]=[16,17,60,55,145,75,150,40,7,340,15,60] //PROBOPASS
PKMN[477]=[9,1,45,100,135,65,135,45,9,106.6,12,45] //DUSKNOIR
PKMN[478]=[12,9,70,80,70,80,70,110,7,26.6,15,75] //FROSLASS
PKMN[479]=[5,9,50,50,77,95,77,91,8,0.3,18,45] //ROTOM
PKMN[480]=[15,1,75,75,130,75,130,95,8,0.3,18,3] //UXIE
PKMN[481]=[15,1,80,105,105,105,105,80,8,0.3,18,3] //MESPRIT
PKMN[482]=[15,1,75,125,70,125,70,115,8,0.3,18,3] //AZELF
PKMN[483]=[17,4,100,120,120,150,100,90,8,683,16,30] //DIALGA
PKMN[484]=[18,4,90,120,100,150,120,100,8,336,16,30] //PALKIA
PKMN[485]=[7,17,91,90,106,130,106,77,8,430,17,3] //HEATRAN
PKMN[486]=[13,1,110,160,110,80,110,100,8,420,15,3] //REGIGIGAS
PKMN[487]=[9,4,150,100,120,100,120,90,8,750,16,3] //GIRATINA
PKMN[488]=[15,1,120,70,120,75,130,85,8,85.6,13,3] //CRESSELIA
PKMN[489]=[18,1,80,80,80,80,80,80,8,3.1,14,30] //PHIONE
PKMN[490]=[18,1,100,100,100,100,100,100,8,1.4,14,3] //MANAPHY
PKMN[491]=[3,1,70,90,90,135,90,125,8,50.5,18,3] //DARKRAI
PKMN[492]=[10,1,100,100,100,100,100,100,8,2.1,11,45] //SHAYMIN
PKMN[493]=[13,1,120,120,120,120,120,120,8,320,16,3] //ARCEUS
PKMN[494]=[15,7,100,100,100,100,100,100,8,4,18,3] //VICTINI
PKMN[495]=[10,1,45,45,55,45,55,63,3,8.1,12,45] //SNIVY
PKMN[496]=[10,1,60,60,75,60,75,83,6,16,12,45] //SERVINE
PKMN[497]=[10,1,75,75,95,75,95,113,9,63,12,45] //SERPERIOR
PKMN[498]=[7,1,65,63,45,45,45,45,3,9.9,17,45] //TEPIG
PKMN[499]=[7,6,90,93,55,70,55,55,6,55.5,17,45] //PIGNITE
PKMN[500]=[7,6,110,123,65,100,65,65,9,150,17,45] //EMBOAR
PKMN[501]=[18,1,55,55,45,63,45,45,3,5.9,13,45] //OSHAWOTT
PKMN[502]=[18,1,75,75,60,83,60,60,6,24.5,13,45] //DEWOTT
PKMN[503]=[18,1,95,100,85,108,70,70,9,94.6,13,45] //SAMUROTT
PKMN[504]=[13,1,45,55,39,35,39,42,4,11.6,12,255] //PATRAT
PKMN[505]=[13,1,60,85,69,60,69,77,7,27,12,255] //WATCHOG
PKMN[506]=[13,1,45,60,45,25,45,55,3,4.1,18,255] //LILLIPUP
PKMN[507]=[13,1,65,80,65,35,65,60,6,14.7,18,120] //HERDIER
PKMN[508]=[13,1,85,110,90,45,90,80,9,61,18,45] //STOUTLAND
PKMN[509]=[3,1,41,50,37,50,37,66,4,10.1,18,255] //PURRLOIN
PKMN[510]=[3,1,64,88,50,88,50,106,7,37.5,18,90] //LIEPARD
PKMN[511]=[10,1,50,53,48,53,48,64,4,10.5,12,65] //PANSAGE
PKMN[512]=[10,1,75,98,63,98,63,101,7,30.5,12,65] //SIMISAGE
PKMN[513]=[7,1,50,53,48,53,48,64,4,11,12,65] //PANSEAR
PKMN[514]=[7,1,75,98,63,98,63,101,7,28,12,65] //SIMISEAR
PKMN[515]=[18,1,50,53,48,53,48,64,4,13.5,12,65] //PANPOUR
PKMN[516]=[18,1,75,98,63,98,63,101,7,29,12,65] //SIMIPOUR
PKMN[517]=[15,1,76,25,45,67,55,24,4,23.3,18,190] //MUNNA
PKMN[518]=[15,1,116,55,85,107,95,29,7,60.5,18,75] //MUSHARNA
PKMN[519]=[13,8,50,55,50,36,30,43,3,2.1,18,255] //PIDOVE
PKMN[520]=[13,8,62,77,62,50,42,65,6,15,18,120] //TRANQUILL
PKMN[521]=[13,8,80,115,80,65,55,93,9,29,18,45] //UNFEZANT
PKMN[522]=[5,1,45,60,32,50,32,76,4,29.8,17,190] //BLITZLE
PKMN[523]=[5,1,75,100,63,80,63,116,7,79.5,17,75] //ZEBSTRIKA
PKMN[524]=[16,1,55,75,85,25,25,15,3,18,15,255] //ROGGENROLA
PKMN[525]=[16,1,70,105,105,50,40,20,6,102,15,120] //BOLDORE
PKMN[526]=[16,1,85,135,130,60,80,25,9,260,15,45] //GIGALITH
PKMN[527]=[15,8,55,45,43,55,43,72,4,2.1,12,190] //WOOBAT
PKMN[528]=[15,8,67,57,55,77,55,114,7,10.5,12,45] //SWOOBAT
PKMN[529]=[11,1,60,85,40,30,45,68,4,8.5,15,120] //DRILBUR
PKMN[530]=[11,17,110,135,60,50,65,88,7,40.4,15,60] //EXCADRILL
PKMN[531]=[13,1,103,60,86,60,86,50,8,31,11,255] //AUDINO
PKMN[532]=[6,1,75,80,55,25,35,35,3,12.5,17,180] //TIMBURR
PKMN[533]=[6,1,85,105,85,40,50,40,6,40,17,90] //GURDURR
PKMN[534]=[6,1,105,140,95,55,65,45,9,87,17,45] //CONKELDURR
PKMN[535]=[18,1,50,50,40,50,40,64,3,4.5,13,255] //TYMPOLE
PKMN[536]=[18,11,75,65,55,65,55,69,6,17,13,120] //PALPITOAD
PKMN[537]=[18,11,105,95,75,85,75,74,9,62,13,45] //SEISMITOAD
PKMN[538]=[6,1,120,100,85,30,85,45,8,55.5,17,45] //THROH
PKMN[539]=[6,1,75,125,75,30,75,85,8,51,17,45] //SAWK
PKMN[540]=[2,10,45,53,70,40,60,42,3,2.5,12,255] //SEWADDLE
PKMN[541]=[2,10,55,63,90,50,80,42,6,7.3,12,120] //SWADLOON
PKMN[542]=[2,10,75,103,80,70,80,92,9,20.5,12,45] //LEAVANNY
PKMN[543]=[2,14,30,45,59,30,39,57,3,5.3,12,255] //VENIPEDE
PKMN[544]=[2,14,40,55,99,40,79,47,6,58.5,12,120] //WHIRLIPEDE
PKMN[545]=[2,14,60,100,89,55,69,112,9,200.5,12,45] //SCOLIPEDE
PKMN[546]=[10,14,40,27,60,37,50,66,4,0.6,11,190] //COTTONEE
PKMN[547]=[10,14,60,67,85,77,75,116,7,6.6,11,75] //WHIMSICOTT
PKMN[548]=[10,1,45,35,50,70,50,30,4,6.6,11,190] //PETILIL
PKMN[549]=[10,1,70,60,75,110,75,90,7,16.3,11,75] //LILLIGANT
PKMN[550]=[18,1,70,92,65,80,55,98,8,18,14,25] //BASCULIN
PKMN[551]=[11,3,50,72,35,35,35,65,3,15.2,17,180] //SANDILE
PKMN[552]=[11,3,60,82,45,45,45,74,6,33.4,17,90] //KROKOROK
PKMN[553]=[11,3,95,117,80,65,70,92,9,96.3,17,45] //KROOKODILE
PKMN[554]=[7,1,70,90,45,15,45,50,4,37.5,17,120] //DARUMAKA
PKMN[555]=[7,1,105,140,55,30,55,95,7,92.9,17,60] //DARMANITAN-S
PKMN[556]=[10,1,75,86,67,106,67,60,8,28,17,255] //MARACTUS
PKMN[557]=[2,16,50,65,85,35,35,55,4,14.5,13,190] //DWEBBLE
PKMN[558]=[2,16,70,95,125,65,75,45,7,200,13,75] //CRUSTLE
PKMN[559]=[3,6,50,75,70,35,70,48,4,11.8,17,180] //SCRAGGY
PKMN[560]=[3,6,65,90,115,45,115,58,7,30,17,90] //SCRAFTY
PKMN[561]=[15,8,72,58,80,103,80,97,8,14,12,45] //SIGILYPH
PKMN[562]=[9,1,38,30,85,55,65,30,4,1.5,15,190] //YAMASK
PKMN[563]=[9,1,58,50,145,95,105,30,7,76.5,15,90] //COFAGRIGUS
PKMN[564]=[18,16,54,78,103,53,45,22,4,16.5,14,45] //TIRTOUGA
PKMN[565]=[18,16,74,108,133,83,65,32,7,81,14,45] //CARRACOSTA
PKMN[566]=[16,8,55,112,45,74,45,70,4,9.5,16,45] //ARCHEN
PKMN[567]=[16,8,75,140,65,112,65,110,7,32,16,45] //ARCHEOPS
PKMN[568]=[14,1,50,50,62,40,62,65,4,31,18,190] //TRUBBISH
PKMN[569]=[14,1,80,95,82,60,82,75,7,107.3,18,60] //GARBODOR
PKMN[570]=[3,1,40,65,40,80,40,65,4,12.5,18,75] //ZORUA
PKMN[571]=[3,1,60,105,60,120,60,105,7,81.1,18,45] //ZOROARK
PKMN[572]=[13,1,55,50,40,40,40,75,4,5.8,18,255] //MINCCINO
PKMN[573]=[13,1,75,95,60,65,60,115,7,7.5,18,60] //CINCCINO
PKMN[574]=[15,1,45,30,50,55,65,45,3,5.8,12,200] //GOTHITA
PKMN[575]=[15,1,60,45,70,75,85,55,6,18,12,100] //GOTHORITA
PKMN[576]=[15,1,70,55,95,95,110,65,9,44,12,50] //GOTHITELLE
PKMN[577]=[15,1,45,30,40,105,50,20,3,1,12,200] //SOLOSIS
PKMN[578]=[15,1,65,40,50,125,60,30,6,8,12,100] //DUOSION
PKMN[579]=[15,1,110,65,75,125,85,30,9,20.1,12,50] //REUNICLUS
PKMN[580]=[18,8,62,44,50,44,50,55,4,5.5,13,190] //DUCKLETT
PKMN[581]=[18,8,75,87,63,87,63,98,7,24.2,13,45] //SWANNA
PKMN[582]=[12,1,36,50,50,65,60,44,3,5.7,15,255] //VANILLITE
PKMN[583]=[12,1,51,65,65,80,75,59,6,41,15,120] //VANILLISH
PKMN[584]=[12,1,71,95,85,110,95,79,9,57.5,15,45] //VANILLUXE
PKMN[585]=[13,10,60,60,50,40,50,75,4,19.5,12,190] //DEERLING
PKMN[586]=[13,10,80,100,70,60,70,95,7,92.5,12,75] //SAWSBUCK
PKMN[587]=[5,8,55,75,60,75,60,103,8,5,12,200] //EMOLGA
PKMN[588]=[2,1,50,75,45,40,45,60,4,5.9,17,200] //KARRABLAST
PKMN[589]=[2,17,70,135,105,60,105,20,7,33,17,75] //ESCAVALIER
PKMN[590]=[10,14,69,55,45,55,55,15,4,1,12,190] //FOONGUS
PKMN[591]=[10,14,114,85,70,85,80,30,7,10.5,12,75] //AMOONGUSS
PKMN[592]=[18,9,55,40,50,65,85,1,4,33,14,190] //FRILLISH
PKMN[593]=[18,9,100,60,70,85,105,60,7,135,14,60] //JELL12NT
PKMN[594]=[18,1,165,75,80,40,45,65,8,31.6,14,75] //ALOMOMOLA
PKMN[595]=[2,5,50,47,50,57,50,65,4,0.6,18,190] //JOLTIK
PKMN[596]=[2,5,70,77,60,97,60,108,7,14.3,18,75] //GALVANTULA
PKMN[597]=[10,17,44,50,91,24,86,10,4,18.8,15,255] //FERROSEED
PKMN[598]=[10,17,74,94,131,54,116,20,7,110,15,90] //FERROTHORN
PKMN[599]=[17,1,40,55,70,45,60,30,3,21,15,130] //KLINK
PKMN[600]=[17,1,60,80,95,70,85,50,6,51,15,60] //KLANG
PKMN[601]=[17,1,60,100,115,70,85,90,9,81,15,30] //KLINKLANG
PKMN[602]=[5,1,35,55,40,45,40,60,3,0.3,14,190] //TYNAMO
PKMN[603]=[5,1,65,85,70,75,70,40,6,22,14,60] //EELEKTRIK
PKMN[604]=[5,1,85,115,80,105,80,50,9,80.5,14,30] //EELEKTROSS
PKMN[605]=[15,1,55,55,55,85,55,30,4,9,17,255] //ELGYEM
PKMN[606]=[15,1,75,75,75,125,95,40,7,34.5,17,90] //BEHEEYEM
PKMN[607]=[9,7,50,30,55,65,55,20,3,3.1,15,190] //LITWICK
PKMN[608]=[9,7,60,40,60,95,60,55,6,13,15,90] //LAMPENT
PKMN[609]=[9,7,60,55,90,145,90,80,9,34.3,15,45] //CHANDELURE
PKMN[610]=[4,1,46,87,60,30,40,57,3,18,12,75] //AXEW
PKMN[611]=[4,1,66,117,70,40,50,67,6,36,12,60] //FRAXURE
PKMN[612]=[4,1,76,147,90,60,70,97,9,105.5,12,45] //HAXORUS
PKMN[613]=[12,1,55,70,40,60,40,40,4,8.5,15,120] //CUBCHOO
PKMN[614]=[12,1,95,110,80,70,80,50,7,260,15,60] //BEARTIC
PKMN[615]=[12,1,70,50,30,95,135,105,8,148,15,25] //CRYOGONAL
PKMN[616]=[2,1,50,40,85,40,65,25,4,7.7,13,200] //SHELMET
PKMN[617]=[2,1,80,70,40,100,60,145,7,25.3,13,75] //ACCELGOR
PKMN[618]=[11,5,109,66,84,81,99,32,8,11,14,75] //STUNFISK
PKMN[619]=[6,1,45,85,50,55,50,65,4,20,13,180] //MIENFOO
PKMN[620]=[6,1,65,125,60,95,60,105,7,35.5,13,45] //MIENSHAO
PKMN[621]=[4,1,77,120,90,60,90,48,8,139,17,45] //DRUDDIGON
PKMN[622]=[11,9,59,74,50,35,50,35,4,92,15,190] //GOLETT
PKMN[623]=[11,9,89,124,80,55,80,55,7,330,15,90] //GOLURK
PKMN[624]=[3,17,45,85,70,40,40,60,4,10.2,16,120] //PAWNIARD
PKMN[625]=[3,17,65,125,100,60,70,70,7,70,16,45] //BISHARP
PKMN[626]=[13,1,95,110,95,40,95,55,8,94.6,11,45] //BOUFFALANT
PKMN[627]=[13,8,70,83,50,37,50,60,4,10.5,17,190] //RUFFLET
PKMN[628]=[13,8,100,123,75,57,75,80,7,41,17,60] //BRAVIARY
PKMN[629]=[3,8,70,55,75,45,65,60,4,9,17,190] //VULLABY
PKMN[630]=[3,8,110,65,105,55,95,80,7,39.5,17,60] //MANDIBUZZ
PKMN[631]=[7,1,85,97,66,105,66,65,8,58,16,90] //HEATMOR
PKMN[632]=[2,17,58,109,112,48,48,109,8,33,16,90] //DURANT
PKMN[633]=[3,4,52,65,50,45,50,38,3,17.3,16,45] //DEINO
PKMN[634]=[3,4,72,85,70,65,70,58,6,50,16,45] //ZWEILOUS
PKMN[635]=[3,4,92,105,90,125,90,98,9,160,16,45] //HYDREIGON
PKMN[636]=[2,7,55,85,55,50,55,60,4,28.8,16,45] //LARVESTA
PKMN[637]=[2,7,85,60,65,135,105,100,7,46,16,15] //VOLCARONA
PKMN[638]=[17,6,91,90,129,90,72,108,8,250,15,3] //COBALION
PKMN[639]=[16,6,91,129,90,72,90,108,8,260,15,3] //TERRAKION
PKMN[640]=[10,6,91,90,72,90,129,108,8,200,12,3] //VIRIZION
PKMN[641]=[8,1,79,115,70,125,80,111,8,63,18,3] //TORNADUS
PKMN[642]=[5,8,79,115,70,125,80,111,8,61,18,3] //THUNDURUS
PKMN[643]=[4,7,100,120,100,150,120,90,8,330,16,45] //RESHIRAM
PKMN[644]=[4,5,100,150,120,120,100,90,8,345,16,45] //ZEKROM
PKMN[645]=[11,8,89,125,90,115,80,101,8,68,18,3] //LANDORUS
PKMN[646]=[4,12,125,130,90,130,90,95,8,325,15,3] //KYUREM
PKMN[647]=[18,6,91,72,90,129,90,108,8,48.5,12,3] //KELDEO
PKMN[648]=[13,15,100,77,77,128,128,90,8,6.5,18,3] //MELOETTA-A
PKMN[649]=[2,17,71,120,95,120,95,99,8,82.5,18,3] //GENESECT
PKMN[650]=[10,1,56,61,65,48,45,38,3,9,17,45] //CHESPIN
PKMN[651]=[10,1,61,78,95,56,58,57,6,29,17,45] //QUILLADIN
PKMN[652]=[10,6,88,107,122,74,75,64,9,90,17,45] //CHESNAUGHT
PKMN[653]=[7,1,40,45,40,62,60,60,3,9.4,11,45] //FENNEKIN
PKMN[654]=[7,1,59,59,58,90,70,73,6,14.5,11,45] //BRAIXEN
PKMN[655]=[7,15,75,69,72,114,100,104,9,39,11,45] //DELPHOX
PKMN[656]=[18,1,41,56,40,62,44,71,3,7,13,45] //FROAKIE
PKMN[657]=[18,1,54,63,52,83,56,97,6,10.9,13,45] //FROGADIER
PKMN[658]=[18,3,72,95,67,103,71,122,9,40,13,45] //GRENINJA
PKMN[659]=[13,1,38,36,38,32,36,57,4,5,11,255] //BUNNELBY
PKMN[660]=[13,11,85,56,77,50,77,78,7,42.4,11,255] //DIGGERSBY
PKMN[661]=[13,8,45,50,43,40,38,62,3,1.7,12,255] //FLETCHLING
PKMN[662]=[7,8,62,73,55,56,52,84,6,16,12,255] //FLETCHINDER
PKMN[663]=[7,8,78,81,71,74,69,126,9,24.5,12,255] //TALONFLAME
PKMN[664]=[2,1,38,35,40,27,25,35,3,2.5,12,255] //SCATTER2
PKMN[665]=[2,1,45,22,60,27,30,29,6,8.4,12,255] //SPEWPA
PKMN[666]=[2,8,80,52,50,90,50,89,9,17,12,255] //VIVILLON
PKMN[667]=[7,13,62,50,58,73,54,72,4,13.5,11,200] //LITLEO
PKMN[668]=[7,13,86,68,72,109,66,106,7,81.5,11,200] //PYROAR
PKMN[669]=[19,1,44,38,39,61,79,42,3,0.1,11,255] //FLAB√âB√â
PKMN[670]=[19,1,54,45,47,75,98,52,6,0.9,11,255] //FLOETTE
PKMN[671]=[19,1,78,65,68,112,154,75,9,10,11,255] //FLORGES
PKMN[672]=[10,1,66,65,48,62,57,52,4,31,11,160] //SKIDDO
PKMN[673]=[10,1,123,100,62,97,81,68,7,91,11,160] //GOGOAT
PKMN[674]=[6,1,67,82,62,46,48,43,4,8,17,128] //PANCHAM
PKMN[675]=[6,3,95,124,78,69,71,58,7,136,17,128] //PANGORO
PKMN[676]=[13,1,75,80,60,65,90,102,8,28,18,120] //FURFROU
PKMN[677]=[15,1,62,48,54,63,60,68,4,3.5,11,228] //ESPURR
PKMN[678]=[15,1,74,48,76,83,81,104,7,8.5,11,228] //MEOWSTIC
PKMN[679]=[17,9,45,80,100,35,37,28,3,2,11,222] //HONEDGE
PKMN[680]=[17,9,59,110,150,45,49,35,6,4.5,11,222] //DOUBLADE
PKMN[681]=[17,9,60,50,150,50,150,60,9,53,11,222] //AEGISLASH
PKMN[682]=[19,1,78,52,60,63,65,23,4,0.5,18,200] //SPRITZEE
PKMN[683]=[19,1,101,72,72,99,89,29,7,15.5,18,200] //AROMATISSE
PKMN[684]=[19,1,62,48,66,59,57,49,4,3.5,18,200] //SWIRLIX
PKMN[685]=[19,1,82,80,86,85,75,72,7,5,18,200] //SLURPUFF
PKMN[686]=[3,15,53,54,37,46,45,45,4,3.5,13,120] //INKAY
PKMN[687]=[3,15,86,92,88,68,75,73,7,47,13,120] //MALAMAR
PKMN[688]=[16,18,42,52,67,39,56,50,4,31,14,255] //BINACLE
PKMN[689]=[16,18,72,105,115,54,86,68,7,96,14,255] //BARBARACLE
PKMN[690]=[14,18,50,60,60,60,60,30,4,7.3,14,225] //SKRELP
PKMN[691]=[14,4,65,75,90,97,123,44,7,81.5,14,225] //DRAGALGE
PKMN[692]=[18,1,50,53,62,58,63,44,4,8.3,14,155] //CLAUNCHER
PKMN[693]=[18,1,71,73,88,120,89,59,7,35.3,14,155] //CLAWITZER
PKMN[694]=[5,13,44,38,33,61,43,70,4,6,17,90] //HELIOPTILE
PKMN[695]=[5,13,62,55,52,109,94,109,7,21,17,90] //HELIOLISK
PKMN[696]=[16,4,58,89,77,45,45,48,4,26,16,45] //TYRUNT
PKMN[697]=[16,4,82,121,119,69,59,71,7,270,16,45] //TYRANTRUM
PKMN[698]=[16,12,77,59,50,67,63,46,4,25.2,16,45] //AMAURA
PKMN[699]=[16,12,123,77,72,99,92,58,7,225,16,45] //AURORUS
PKMN[700]=[19,1,95,65,65,110,130,60,7,23.5,18,45] //SYLVEON
PKMN[701]=[6,8,78,92,75,74,63,118,8,21.5,17,128] //HAWLUCHA
PKMN[702]=[5,19,67,58,57,81,67,101,8,2.2,17,200] //DEDENNE
PKMN[703]=[16,19,50,50,150,50,150,50,8,5.7,15,30] //CARBINK
PKMN[704]=[4,1,45,50,35,55,75,40,3,2.8,12,20] //GOOMY
PKMN[705]=[4,1,68,75,53,83,113,60,6,17.5,12,20] //SLIGGOO
PKMN[706]=[4,1,90,100,70,110,150,80,9,150.5,12,20] //GOODRA
PKMN[707]=[17,19,57,80,91,80,87,75,8,3,18,60] //KLEFKI
PKMN[708]=[9,10,43,70,48,50,60,38,4,7,12,150] //PHANTUMP
PKMN[709]=[9,10,85,110,76,65,82,56,7,71,12,150] //TREVENANT
PKMN[710]=[9,10,44,66,70,44,55,56,4,3.5,12,190] //PUMPKABOO-S
PKMN[711]=[9,10,55,85,122,58,75,99,7,9.5,12,190] //GOURGEIST-S
PKMN[712]=[12,1,55,69,85,32,35,28,4,99.5,15,255] //BERGMITE
PKMN[713]=[12,1,95,117,184,44,46,28,7,505,15,255] //AVALUGG
PKMN[714]=[8,4,40,30,35,45,40,55,4,8,15,200] //NOIBAT
PKMN[715]=[8,4,85,70,80,97,80,123,7,85,15,200] //NOIVERN
PKMN[716]=[19,1,126,131,95,131,98,99,8,215,11,70] //XERNEAS
PKMN[717]=[3,8,126,131,95,131,98,99,8,203,16,70] //YVELTAL
PKMN[718]=[4,11,108,100,121,81,95,95,8,305,15,3] //ZYGARDE
//PKMN[719]=[16,19,1,,1,,1,,8,1,,]  //  DIANCIE
//PKMN[720]=[7,18,1,,1,,1,,8,1,,]  //   VOLCANION
//PKMN[721]=[15,9,1,,1,,1,,8,1,,]  //   HOOPA
PKMN[10001]=[15,1,50,180,20,180,20,150,8,60.8,17,3] //DEOXYS-A
PKMN[10002]=[15,1,50,70,160,70,160,90,8,60.8,15,3] //DEOXYS-D
PKMN[10003]=[15,1,50,95,90,95,90,180,8,60.8,11,3] //DEOXYS-S
PKMN[10004]=[2,11,60,79,105,59,85,36,7,6.5,15,45] //WORMADAM-S
PKMN[10005]=[2,17,60,69,95,69,95,36,7,6.5,18,45] //WORMADAM-T
PKMN[10006]=[5,-1,50,65,107,105,107,86,8,0.3,18,45] //ROTOM-A
PKMN[10007]=[9,4,150,120,100,120,100,90,8,650,16,3] //GIRATINA-O
PKMN[10008]=[10,8,100,103,75,120,75,127,8,5.2,11,45] //SHAYMIN-S
PKMN[10009]=[7,15,105,30,105,140,105,55,7,92.9,17,60] //DARMANITAN-Z
PKMN[10010]=[13,1,100,1,90,77,77,128,8,6.5,18,3] //MELOETTA-P
PKMN[10011]=[4,12,125,170,100,120,90,95,8,325,1,3] //KYUREM-B
PKMN[10012]=[4,12,125,120,90,170,100,95,8,325,1,3] //KYUREM-W
PKMN[10013]=[17,9,60,150,50,150,50,60,9,53,1,222] //AEGISLASH-B
PKMN[10014]=[9,10,49,66,70,44,55,51,4,5,12,190] //PUMPKABOO-A
PKMN[10015]=[9,10,54,66,70,44,55,46,4,7.5,12,190] //PUMPKABOO-L
PKMN[10016]=[9,10,59,66,70,44,55,41,4,15,12,190] //PUMPKABOO-U
PKMN[10017]=[9,10,65,90,122,58,75,84,7,12.5,12,190] //GOURGEIST-A
PKMN[10018]=[9,10,75,95,122,58,75,69,7,14,12,190] //GOURGEIST-L
PKMN[10019]=[9,10,85,100,122,58,75,54,7,39,12,190] //GOURGEIST-U
PKMN[90000]=[10,14,80,100,123,122,120,80,9,155.5,1,1] //VENUSAUR-M
PKMN[90001]=[7,4,78,130,111,130,85,100,9,110.5,1,1] //CHARIZARD-X
PKMN[90002]=[7,8,78,104,78,159,115,100,9,100.5,1,1] //CHARIZARD-Y
PKMN[90003]=[18,1,79,103,120,135,115,78,9,101.1,1,1] //BLASTOISE-M
PKMN[90004]=[15,1,55,50,65,175,95,150,9,48,1,1] //ALAKAZAM-M
PKMN[90005]=[9,14,60,65,80,170,95,130,9,40.5,1,1] //GENGAR-M
PKMN[90006]=[13,1,105,125,100,60,100,100,8,100,1,1] //KANGKASKHAN-M
PKMN[90007]=[2,8,65,155,120,65,90,105,8,59,1,1] //PINSIR-M
PKMN[90008]=[18,3,95,155,109,70,130,81,7,305,1,1] //GYARADOS-M
PKMN[90009]=[16,8,80,135,85,70,95,105,8,79,1,1] //AERODACTYL-M
PKMN[90010]=[15,6,106,190,100,154,100,130,8,127,1,1] //MEWTWO-X
PKMN[90011]=[15,1,106,150,70,194,120,140,8,33,1,1] //MEWTWO-Y
PKMN[90012]=[5,4,90,95,105,165,110,45,9,61.5,1,1] //AMPHAROS-M
PKMN[90013]=[2,17,70,150,140,65,100,75,7,125,1,1] //SCIZOR-M
PKMN[90014]=[2,6,90,185,115,40,105,75,8,62.5,1,1] //HERACROSS-M
PKMN[90015]=[3,7,75,90,90,140,90,115,7,49.5,1,1] //HOUNDOOM-M
PKMN[90016]=[16,3,100,164,150,95,120,71,9,255,1,1] //TYRANITAR-M
PKMN[90017]=[7,6,80,160,80,130,80,100,9,52,1,1] //BLAZIKEN-M
PKMN[90018]=[15,19,68,85,65,165,135,100,9,48.4,1,1] //GARDEVOIR-M
PKMN[90019]=[17,19,50,105,125,55,95,50,8,23.5,1,1] //MAWILE-M
PKMN[90020]=[17,1,70,140,230,60,80,50,9,395,1,1] //AGGRON-M
PKMN[90021]=[6,15,60,100,85,80,85,100,7,31.5,1,1] //MEDICHAM-M
PKMN[90022]=[5,1,70,75,80,135,80,135,7,44,1,1] //MANECTRIC-M
PKMN[90023]=[9,1,64,165,75,93,83,75,7,13,1,1] //BANETTE-M
PKMN[90024]=[3,1,65,150,60,115,60,115,8,49,1,1] //ABSOL-M
//PKMN[90025    ]=[,1,,1,,1,,1,,1,,]  //    LATIAS-M
//PKMN[90026    ]=[,1,,1,,1,,1,,1,,]  //    LATIOS-M
PKMN[90027]=[4,11,108,170,115,120,95,92,9,95,1,1] //GARCHOMP-M
PKMN[90028]=[17,6,70,145,88,140,70,112,7,57.5,1,1] //LUCARIO-M
PKMN[90029]=[12,10,90,132,105,132,105,30,7,185,1,1] //ABOMASNOW-M

    //These measure the maximum value that each stat can hold, which is 2x, x being the original stat
    var max_ATK = [], max_DEF = [], max_SPATK = [], max_SPDEF = [], max_EXP = [];
    

    //These arrays store the values of ATK, DEF and so on, after they've been modified by boosts or reductions. These are what are used in damage and energy calculation.
    var mod_ATK = [], mod_DEF = [], mod_SPATK = [], mod_SPDEF = [], mod_EXP = [];

    //This keeps track of positive stat boosts, for the attacks Stored Power and Punishment
    var stat_mod = []

    //CaptureRate and Zone data is loaded for the capture calculator
    var CR, Zone

    //When a Pok√©mon is selected, the follow locations are loaded with their respective stats
    var ctr;

    if (slot == 1) {
        ctr = document.calculator.pokemon_1.value;
        
        document.calculator.Type1_1.value = PKMN[ctr][0];
        document.calculator.Type2_1.value = PKMN[ctr][1];
        document.calculator.ATK_1.value = Math.ceil((PKMN[ctr][3])/15);
        document.calculator.DEF_1.value = Math.ceil(((PKMN[ctr][4])+(PKMN[ctr][2]))/2/13);
        document.calculator.SPATK_1.value = Math.ceil((PKMN[ctr][5])/15);
        document.calculator.SPDEF_1.value = Math.ceil(((PKMN[ctr][6])+(PKMN[ctr][2]))/2/13);
        document.calculator.SPD_1.value = PKMN[ctr][7];
        document.calculator.EXP_1.value = PKMN[ctr][8];
        document.calculator.KG_1.value = PKMN[ctr][9];
        document.calculator.CR_1.value = ((Math.ceil((PKMN[ctr][3])/15))+(Math.ceil(((PKMN[ctr][4])+(PKMN[ctr][2]))/2/13))+(Math.ceil((PKMN[ctr][5])/15))+(Math.ceil(((PKMN[ctr][6])+(PKMN[ctr][2]))/2/13))+(Math.ceil((PKMN[ctr][7])/36)));
        document.calculator.Zone_1.value = PKMN[ctr][11];

        max_ATK[1] = (parseFloat(document.calculator.ATK_1.value) * 2);
        max_DEF[1] = (parseFloat(document.calculator.DEF_1.value) * 2);
        max_SPATK[1] = (parseFloat(document.calculator.SPATK_1.value) * 2);
        max_SPDEF[1] = (parseFloat(document.calculator.SPDEF_1.value) * 2);
        max_EXP[1] = (parseFloat(document.calculator.EXP_1.value) * 2);

        mod_ATK[1] = (parseFloat(document.calculator.ATK_1.value) + parseFloat(document.calculator.plusATK_1.value) - parseFloat(document.calculator.minusATK_1.value));
        mod_DEF[1] = (parseFloat(document.calculator.DEF_1.value) + parseFloat(document.calculator.plusDEF_1.value) - parseFloat(document.calculator.minusDEF_1.value));
        mod_SPATK[1] = (parseFloat(document.calculator.SPATK_1.value) + parseFloat(document.calculator.plusSPATK_1.value) - parseFloat(document.calculator.minusSPATK_1.value));
        mod_SPDEF[1] = (parseFloat(document.calculator.SPDEF_1.value) + parseFloat(document.calculator.plusSPDEF_1.value) - parseFloat(document.calculator.minusSPDEF_1.value));
        mod_EXP[1] = (parseFloat(document.calculator.EXP_1.value) + parseFloat(document.calculator.plusEXP_1.value) - parseFloat(document.calculator.minusEXP_1.value));
        stat_mod[1] = parseFloat(document.calculator.plusATK_1.value) - parseFloat(document.calculator.minusATK_1.value) + parseFloat(document.calculator.plusDEF_1.value) - parseFloat(document.calculator.minusDEF_1.value) + parseFloat(document.calculator.plusSPATK_1.value) - parseFloat(document.calculator.minusSPATK_1.value) + parseFloat(document.calculator.plusSPDEF_1.value) - parseFloat(document.calculator.minusSPDEF_1.value) + parseFloat(document.calculator.plusEXP_1.value) - parseFloat(document.calculator.minusEXP_1.value);
        document.calculator.stat_1.value = stat_mod[1];

        document.calculator.ACC_1.value = document.calculator.plusACC_1.value * document.calculator.minusACC_1.value;
        document.calculator.stat_1.value = parseFloat(stat_mod[1]);
        document.calculator.EVA_1.value = document.calculator.plusEVA_1.value * document.calculator.minusEVA_1.value;
        document.calculator.modSPD_1.value = Math.round(document.calculator.SPD_1.value * document.calculator.plusSPD_1.value * document.calculator.minusSPD_1.value);

        //These all check max and mins - if over the max, set to the max. if under the min, set to the min.
        document.calculator.modATK_1.value = mod_ATK[1];
        if (parseFloat(mod_ATK[1]) > parseFloat(max_ATK[1])) {document.calculator.modATK_1.value = max_ATK[1];}
        if (parseFloat(mod_ATK[1]) < 1) {document.calculator.modATK_1.value = 1;}
        
        document.calculator.modDEF_1.value = mod_DEF[1];
        if (parseFloat(mod_DEF[1]) > parseFloat(max_DEF[1])) {document.calculator.modDEF_1.value = max_DEF[1];}
        if (parseFloat(mod_DEF[1]) < 1) {document.calculator.modDEF_1.value = 1;}
        
        document.calculator.modSPATK_1.value = mod_SPATK[1];
        if (parseFloat(mod_SPATK[1]) > parseFloat(max_SPATK[1])) {document.calculator.modSPATK_1.value = max_SPATK[1];}
        if (parseFloat(mod_SPATK[1]) < 1) {document.calculator.modSPATK_1.value = 1;}
        
        document.calculator.modSPDEF_1.value = mod_SPDEF[1];
        if (parseFloat(mod_SPDEF[1]) > parseFloat(max_SPDEF[1])) {document.calculator.modSPDEF_1.value = max_SPDEF[1];}
        if (parseFloat(mod_SPDEF[1]) < 1) {document.calculator.modSPDEF_1.value = 1;}
        
        document.calculator.modEXP_1.value = mod_EXP[1];
        if (parseFloat(mod_EXP[1]) > parseFloat(max_EXP[1])) {document.calculator.modEXP_1.value = max_EXP[1];}
        if (parseFloat(mod_EXP[1]) < 1) {document.calculator.modEXP_1.value = 1;}

    }
    if (slot == 2) {
        ctr = document.calculator.pokemon_2.value;

        document.calculator.Type1_2.value = PKMN[ctr][0];
        document.calculator.Type2_2.value = PKMN[ctr][1];
        document.calculator.ATK_2.value = Math.ceil((PKMN[ctr][3])/15);
        document.calculator.DEF_2.value = Math.ceil(((PKMN[ctr][4])+(PKMN[ctr][2]))/2/13);
        document.calculator.SPATK_2.value = Math.ceil((PKMN[ctr][5])/15);
        document.calculator.SPDEF_2.value = Math.ceil(((PKMN[ctr][6])+(PKMN[ctr][2]))/2/13);
        document.calculator.SPD_2.value = PKMN[ctr][7];
        document.calculator.EXP_2.value = PKMN[ctr][8];
        document.calculator.KG_2.value = PKMN[ctr][9];
        document.calculator.CR_2.value = ((Math.ceil((PKMN[ctr][3])/15))+(Math.ceil(((PKMN[ctr][4])+(PKMN[ctr][2]))/2/13))+(Math.ceil((PKMN[ctr][5])/15))+(Math.ceil(((PKMN[ctr][6])+(PKMN[ctr][2]))/2/13))+(Math.ceil((PKMN[ctr][7])/36)));
        document.calculator.Zone_2.value = PKMN[ctr][11];

        max_ATK[2] = (parseFloat(document.calculator.ATK_2.value) * 2);
        max_DEF[2] = (parseFloat(document.calculator.DEF_2.value) * 2);
        max_SPATK[2] = (parseFloat(document.calculator.SPATK_2.value) * 2);
        max_SPDEF[2] = (parseFloat(document.calculator.SPDEF_2.value) * 2);
        max_EXP[2] = (parseFloat(document.calculator.EXP_2.value) * 2);

        mod_ATK[2] = (parseFloat(document.calculator.ATK_2.value) + parseFloat(document.calculator.plusATK_2.value) - parseFloat(document.calculator.minusATK_2.value));
        mod_DEF[2] = (parseFloat(document.calculator.DEF_2.value) + parseFloat(document.calculator.plusDEF_2.value) - parseFloat(document.calculator.minusDEF_2.value));
        mod_SPATK[2] = (parseFloat(document.calculator.SPATK_2.value) + parseFloat(document.calculator.plusSPATK_2.value) - parseFloat(document.calculator.minusSPATK_2.value));
        mod_SPDEF[2] = (parseFloat(document.calculator.SPDEF_2.value) + parseFloat(document.calculator.plusSPDEF_2.value) - parseFloat(document.calculator.minusSPDEF_2.value));
        mod_EXP[2] = (parseFloat(document.calculator.EXP_2.value) + parseFloat(document.calculator.plusEXP_2.value) - parseFloat(document.calculator.minusEXP_2.value));

        stat_mod[2] = parseFloat(document.calculator.plusATK_2.value) - parseFloat(document.calculator.minusATK_2.value) + parseFloat(document.calculator.plusDEF_2.value) - parseFloat(document.calculator.minusDEF_2.value) + parseFloat(document.calculator.plusSPATK_2.value) - parseFloat(document.calculator.minusSPATK_2.value) + parseFloat(document.calculator.plusSPDEF_2.value) - parseFloat(document.calculator.minusSPDEF_2.value) + parseFloat(document.calculator.plusEXP_2.value) - parseFloat(document.calculator.minusEXP_2.value);
        document.calculator.stat_2.value = stat_mod[2];

        document.calculator.ACC_2.value = document.calculator.plusACC_2.value * document.calculator.minusACC_2.value;
        document.calculator.EVA_2.value = document.calculator.plusEVA_2.value * document.calculator.minusEVA_2.value;
        document.calculator.modSPD_2.value = Math.round(document.calculator.SPD_2.value * document.calculator.plusSPD_2.value * document.calculator.minusSPD_2.value);

        document.calculator.modATK_2.value = mod_ATK[2];
        if (parseFloat(mod_ATK[2]) > parseFloat(max_ATK[2])) {document.calculator.modATK_2.value = max_ATK[2];}
        if (parseFloat(mod_ATK[2]) < 1) {document.calculator.modATK_2.value=1;}

        document.calculator.modDEF_2.value = mod_DEF[2];
        if (parseFloat(mod_DEF[2]) > parseFloat(max_DEF[2])) {document.calculator.modDEF_2.value = max_DEF[2];}
        if (parseFloat(mod_DEF[2]) < 1) {document.calculator.modDEF_2.value=1;}

        document.calculator.modSPATK_2.value = mod_SPATK[2];
        if (parseFloat(mod_SPATK[2]) > parseFloat(max_SPATK[2])) {document.calculator.modSPATK_2.value = max_SPATK[2];}
        if (parseFloat(mod_SPATK[2]) < 1) {document.calculator.modSPATK_2.value=1;}

        document.calculator.modSPDEF_2.value = mod_SPDEF[2];
        if (parseFloat(mod_SPDEF[2]) > parseFloat(max_SPDEF[2])) {document.calculator.modSPDEF_2.value = max_SPDEF[2];}
        if (parseFloat(mod_SPDEF[2]) < 1) {document.calculator.modSPDEF_2.value=1;}

        document.calculator.modEXP_2.value = mod_EXP[2];
        if (parseFloat(mod_EXP[2]) > parseFloat(max_EXP[2])) {document.calculator.modEXP_2.value = max_EXP[2];}
        if (parseFloat(mod_EXP[2]) < 1) {document.calculator.modEXP_2.value=1;}

    }
    if (slot == 3) {
        ctr = document.calculator.pokemon_3.value;
        document.calculator.Type1_3.value = PKMN[ctr][0];
        document.calculator.Type2_3.value = PKMN[ctr][1];
        document.calculator.ATK_3.value = Math.ceil((PKMN[ctr][3])/15);
        document.calculator.DEF_3.value = Math.ceil(((PKMN[ctr][4])+(PKMN[ctr][2]))/2/13);
        document.calculator.SPATK_3.value = Math.ceil((PKMN[ctr][5])/15);
        document.calculator.SPDEF_3.value = Math.ceil(((PKMN[ctr][6])+(PKMN[ctr][2]))/2/13);
        document.calculator.SPD_3.value = PKMN[ctr][7];
        document.calculator.EXP_3.value = PKMN[ctr][8];
        document.calculator.KG_3.value = PKMN[ctr][9];
        document.calculator.CR_3.value = ((Math.ceil((PKMN[ctr][3])/15))+(Math.ceil(((PKMN[ctr][4])+(PKMN[ctr][2]))/2/13))+(Math.ceil((PKMN[ctr][5])/15))+(Math.ceil(((PKMN[ctr][6])+(PKMN[ctr][2]))/2/13))+(Math.ceil((PKMN[ctr][7])/36)));
        document.calculator.Zone_3.value = PKMN[ctr][11];

        max_ATK[3] = (parseFloat(document.calculator.ATK_3.value) * 2);
        max_DEF[3] = (parseFloat(document.calculator.DEF_3.value) * 2);
        max_SPATK[3] = (parseFloat(document.calculator.SPATK_3.value) * 2);
        max_SPDEF[3] = (parseFloat(document.calculator.SPDEF_3.value) * 2);
        max_EXP[3] = (parseFloat(document.calculator.EXP_3.value) * 2);

        mod_ATK[3] = (parseFloat(document.calculator.ATK_3.value) + parseFloat(document.calculator.plusATK_3.value) - parseFloat(document.calculator.minusATK_3.value));
        mod_DEF[3] = (parseFloat(document.calculator.DEF_3.value) + parseFloat(document.calculator.plusDEF_3.value) - parseFloat(document.calculator.minusDEF_3.value));
        mod_SPATK[3] = (parseFloat(document.calculator.SPATK_3.value) + parseFloat(document.calculator.plusSPATK_3.value) - parseFloat(document.calculator.minusSPATK_3.value));
        mod_SPDEF[3] = (parseFloat(document.calculator.SPDEF_3.value) + parseFloat(document.calculator.plusSPDEF_3.value) - parseFloat(document.calculator.minusSPDEF_3.value));
        mod_EXP[3] = (parseFloat(document.calculator.EXP_3.value) + parseFloat(document.calculator.plusEXP_3.value) - parseFloat(document.calculator.minusEXP_3.value));

        stat_mod[3] = parseFloat(document.calculator.plusATK_3.value) - parseFloat(document.calculator.minusATK_3.value) + parseFloat(document.calculator.plusDEF_3.value) - parseFloat(document.calculator.minusDEF_3.value) + parseFloat(document.calculator.plusSPATK_3.value) - parseFloat(document.calculator.minusSPATK_3.value) + parseFloat(document.calculator.plusSPDEF_3.value) - parseFloat(document.calculator.minusSPDEF_3.value) + parseFloat(document.calculator.plusEXP_3.value) - parseFloat(document.calculator.minusEXP_3.value);
        document.calculator.stat_3.value = stat_mod[3];

        document.calculator.ACC_3.value = document.calculator.plusACC_3.value * document.calculator.minusACC_3.value;
        document.calculator.EVA_3.value = document.calculator.plusEVA_3.value * document.calculator.minusEVA_3.value;
        document.calculator.modSPD_3.value = Math.round(document.calculator.SPD_3.value * document.calculator.plusSPD_3.value * document.calculator.minusSPD_3.value);

        document.calculator.modATK_3.value = mod_ATK[3];
        if (parseFloat(mod_ATK[3]) > parseFloat(max_ATK[3])) {document.calculator.modATK_3.value = max_ATK[3];}
        if (parseFloat(mod_ATK[3]) < 1) {document.calculator.modATK_3.value=1;}

        document.calculator.modDEF_3.value = mod_DEF[3];
        if (parseFloat(mod_DEF[3]) > parseFloat(max_DEF[3])) {document.calculator.modDEF_3.value = max_DEF[3];}
        if (parseFloat(mod_DEF[3]) < 1) {document.calculator.modDEF_3.value=1;}

        document.calculator.modSPATK_3.value = mod_SPATK[3];
        if (parseFloat(mod_SPATK[3]) > parseFloat(max_SPATK[3])) {document.calculator.modSPATK_3.value = max_SPATK[3];}
        if (parseFloat(mod_SPATK[3]) < 1) {document.calculator.modSPATK_3.value=1;}

        document.calculator.modSPDEF_3.value = mod_SPDEF[3];
        if (parseFloat(mod_SPDEF[3]) > parseFloat(max_SPDEF[3])) {document.calculator.modSPDEF_3.value = max_SPDEF[3];}
        if (parseFloat(mod_SPDEF[3]) < 1) {document.calculator.modSPDEF_3.value=1;}

        document.calculator.modEXP_3.value = mod_EXP[3];
        if (parseFloat(mod_EXP[3]) > parseFloat(max_EXP[3])) {document.calculator.modEXP_3.value = max_EXP[3];}
        if (parseFloat(mod_EXP[3]) < 1) {document.calculator.modEXP_3.value=1;}
    }
    
    if (slot == 4) {
        ctr = document.calculator.pokemon_4.value;
        document.calculator.Type1_4.value = PKMN[ctr][0];
        document.calculator.Type2_4.value = PKMN[ctr][1];
        document.calculator.ATK_4.value = Math.ceil((PKMN[ctr][3])/15);
        document.calculator.DEF_4.value = Math.ceil(((PKMN[ctr][4])+(PKMN[ctr][2]))/2/13);
        document.calculator.SPATK_4.value = Math.ceil((PKMN[ctr][5])/15);
        document.calculator.SPDEF_4.value = Math.ceil(((PKMN[ctr][6])+(PKMN[ctr][2]))/2/13);
        document.calculator.SPD_4.value = PKMN[ctr][7];
        document.calculator.EXP_4.value = PKMN[ctr][8];
        document.calculator.KG_4.value = PKMN[ctr][9];
        document.calculator.CR_4.value = ((Math.ceil((PKMN[ctr][3])/15))+(Math.ceil(((PKMN[ctr][4])+(PKMN[ctr][2]))/2/13))+(Math.ceil((PKMN[ctr][5])/15))+(Math.ceil(((PKMN[ctr][6])+(PKMN[ctr][2]))/2/13))+(Math.ceil((PKMN[ctr][7])/36)));
        document.calculator.Zone_4.value = PKMN[ctr][11];

        max_ATK[4] = (parseFloat(document.calculator.ATK_4.value) * 2);
        max_DEF[4] = (parseFloat(document.calculator.DEF_4.value) * 2);
        max_SPATK[4] = (parseFloat(document.calculator.SPATK_4.value) * 2);
        max_SPDEF[4] = (parseFloat(document.calculator.SPDEF_4.value) * 2);
        max_EXP[4] = (parseFloat(document.calculator.EXP_4.value) * 2);

        mod_ATK[4] = (parseFloat(document.calculator.ATK_4.value) + parseFloat(document.calculator.plusATK_4.value) - parseFloat(document.calculator.minusATK_4.value));
        mod_DEF[4] = (parseFloat(document.calculator.DEF_4.value) + parseFloat(document.calculator.plusDEF_4.value) - parseFloat(document.calculator.minusDEF_4.value));
        mod_SPATK[4] = (parseFloat(document.calculator.SPATK_4.value) + parseFloat(document.calculator.plusSPATK_4.value) - parseFloat(document.calculator.minusSPATK_4.value));
        mod_SPDEF[4] = (parseFloat(document.calculator.SPDEF_4.value) + parseFloat(document.calculator.plusSPDEF_4.value) - parseFloat(document.calculator.minusSPDEF_4.value));
        mod_EXP[4] = (parseFloat(document.calculator.EXP_4.value) + parseFloat(document.calculator.plusEXP_4.value) - parseFloat(document.calculator.minusEXP_4.value));

        stat_mod[4] = parseFloat(document.calculator.plusATK_4.value) - parseFloat(document.calculator.minusATK_4.value) + parseFloat(document.calculator.plusDEF_4.value) - parseFloat(document.calculator.minusDEF_4.value) + parseFloat(document.calculator.plusSPATK_4.value) - parseFloat(document.calculator.minusSPATK_4.value) + parseFloat(document.calculator.plusSPDEF_4.value) - parseFloat(document.calculator.minusSPDEF_4.value) + parseFloat(document.calculator.plusEXP_4.value) - parseFloat(document.calculator.minusEXP_4.value);
        document.calculator.stat_4.value = stat_mod[4];

        document.calculator.ACC_4.value = document.calculator.plusACC_4.value * document.calculator.minusACC_4.value;
        document.calculator.EVA_4.value = document.calculator.plusEVA_4.value * document.calculator.minusEVA_4.value;
        document.calculator.modSPD_4.value = Math.round(document.calculator.SPD_4.value * document.calculator.plusSPD_4.value * document.calculator.minusSPD_4.value);

        document.calculator.modATK_4.value = mod_ATK[4];
        if (parseFloat(mod_ATK[4]) > parseFloat(max_ATK[4])) {document.calculator.modATK_4.value = max_ATK[4];}
        if (parseFloat(mod_ATK[4]) < 1) {document.calculator.modATK_4.value=1;}

        document.calculator.modDEF_4.value = mod_DEF[4];
        if (parseFloat(mod_DEF[4]) > parseFloat(max_DEF[4])) {document.calculator.modDEF_4.value = max_DEF[4];}
        if (parseFloat(mod_DEF[4]) < 1) {document.calculator.modDEF_4.value=1;}

        document.calculator.modSPATK_4.value = mod_SPATK[4];
        if (parseFloat(mod_SPATK[4]) > parseFloat(max_SPATK[4])) {document.calculator.modSPATK_4.value = max_SPATK[4];}
        if (parseFloat(mod_SPATK[4]) < 1) {document.calculator.modSPATK_4.value=1;}

        document.calculator.modSPDEF_4.value = mod_SPDEF[4];
        if (parseFloat(mod_SPDEF[4]) > parseFloat(max_SPDEF[4])) {document.calculator.modSPDEF_4.value = max_SPDEF[4];}
        if (parseFloat(mod_SPDEF[4]) < 1) {document.calculator.modSPDEF_4.value=1;}

        document.calculator.modEXP_4.value = mod_EXP[4];
        if (parseFloat(mod_EXP[4]) > parseFloat(max_EXP[4])) {document.calculator.modEXP_4.value = max_EXP[4];}
        if (parseFloat(mod_EXP[4]) < 1) {document.calculator.modEXP_4.value=1;}
    }
   
   if (slot == 5) {
        ctr = document.calculator.pokemon_5.value;
        document.calculator.Type1_5.value = PKMN[ctr][0];
        document.calculator.Type2_5.value = PKMN[ctr][1];
        document.calculator.ATK_5.value = Math.ceil((PKMN[ctr][3])/15);
        document.calculator.DEF_5.value = Math.ceil(((PKMN[ctr][4])+(PKMN[ctr][2]))/2/13);
        document.calculator.SPATK_5.value = Math.ceil((PKMN[ctr][5])/15);
        document.calculator.SPDEF_5.value = Math.ceil(((PKMN[ctr][6])+(PKMN[ctr][2]))/2/13);
        document.calculator.SPD_5.value = PKMN[ctr][7];
        document.calculator.EXP_5.value = PKMN[ctr][8];
        document.calculator.KG_5.value = PKMN[ctr][9];
        document.calculator.CR_5.value = ((Math.ceil((PKMN[ctr][3])/15))+(Math.ceil(((PKMN[ctr][4])+(PKMN[ctr][2]))/2/13))+(Math.ceil((PKMN[ctr][5])/15))+(Math.ceil(((PKMN[ctr][6])+(PKMN[ctr][2]))/2/13))+(Math.ceil((PKMN[ctr][7])/36)));
        document.calculator.Zone_5.value = PKMN[ctr][11];

        max_ATK[5] = (parseFloat(document.calculator.ATK_5.value) * 2);
        max_DEF[5] = (parseFloat(document.calculator.DEF_5.value) * 2);
        max_SPATK[5] = (parseFloat(document.calculator.SPATK_5.value) * 2);
        max_SPDEF[5] = (parseFloat(document.calculator.SPDEF_5.value) * 2);
        max_EXP[5] = (parseFloat(document.calculator.EXP_5.value) * 2);

        mod_ATK[5] = (parseFloat(document.calculator.ATK_5.value) + parseFloat(document.calculator.plusATK_5.value) - parseFloat(document.calculator.minusATK_5.value));
        mod_DEF[5] = (parseFloat(document.calculator.DEF_5.value) + parseFloat(document.calculator.plusDEF_5.value) - parseFloat(document.calculator.minusDEF_5.value));
        mod_SPATK[5] = (parseFloat(document.calculator.SPATK_5.value) + parseFloat(document.calculator.plusSPATK_5.value) - parseFloat(document.calculator.minusSPATK_5.value));
        mod_SPDEF[5] = (parseFloat(document.calculator.SPDEF_5.value) + parseFloat(document.calculator.plusSPDEF_5.value) - parseFloat(document.calculator.minusSPDEF_5.value));
        mod_EXP[5] = (parseFloat(document.calculator.EXP_5.value) + parseFloat(document.calculator.plusEXP_5.value) - parseFloat(document.calculator.minusEXP_5.value));

        stat_mod[5] = parseFloat(document.calculator.plusATK_5.value) - parseFloat(document.calculator.minusATK_5.value) + parseFloat(document.calculator.plusDEF_5.value) - parseFloat(document.calculator.minusDEF_5.value) + parseFloat(document.calculator.plusSPATK_5.value) - parseFloat(document.calculator.minusSPATK_5.value) + parseFloat(document.calculator.plusSPDEF_5.value) - parseFloat(document.calculator.minusSPDEF_5.value) + parseFloat(document.calculator.plusEXP_5.value) - parseFloat(document.calculator.minusEXP_5.value);
        document.calculator.stat_5.value = stat_mod[5];

        document.calculator.ACC_5.value = document.calculator.plusACC_5.value * document.calculator.minusACC_5.value;
        document.calculator.EVA_5.value = document.calculator.plusEVA_5.value * document.calculator.minusEVA_5.value;
        document.calculator.modSPD_5.value = Math.round(document.calculator.SPD_5.value * document.calculator.plusSPD_5.value * document.calculator.minusSPD_5.value);

        document.calculator.modATK_5.value = mod_ATK[5];
        if (parseFloat(mod_ATK[5]) > parseFloat(max_ATK[5])) {document.calculator.modATK_5.value = max_ATK[5];}
        if (parseFloat(mod_ATK[5]) < 1) {document.calculator.modATK_5.value=1;}

        document.calculator.modDEF_5.value = mod_DEF[5];
        if (parseFloat(mod_DEF[5]) > parseFloat(max_DEF[5])) {document.calculator.modDEF_5.value = max_DEF[5];}
        if (parseFloat(mod_DEF[5]) < 1) {document.calculator.modDEF_5.value=1;}

        document.calculator.modSPATK_5.value = mod_SPATK[5];
        if (parseFloat(mod_SPATK[5]) > parseFloat(max_SPATK[5])) {document.calculator.modSPATK_5.value = max_SPATK[5];}
        if (parseFloat(mod_SPATK[5]) < 1) {document.calculator.modSPATK_5.value=1;}

        document.calculator.modSPDEF_5.value = mod_SPDEF[5];
        if (parseFloat(mod_SPDEF[5]) > parseFloat(max_SPDEF[5])) {document.calculator.modSPDEF_5.value = max_SPDEF[5];}
        if (parseFloat(mod_SPDEF[5]) < 1) {document.calculator.modSPDEF_5.value=1;}

        document.calculator.modEXP_5.value = mod_EXP[5];
        if (parseFloat(mod_EXP[5]) > parseFloat(max_EXP[5])) {document.calculator.modEXP_5.value = max_EXP[5];}
        if (parseFloat(mod_EXP[5]) < 1) {document.calculator.modEXP_5.value=1;}

    }
    if (slot == 6) {
        ctr = document.calculator.pokemon_6.value;
        document.calculator.Type1_6.value = PKMN[ctr][0];
        document.calculator.Type2_6.value = PKMN[ctr][1];
        document.calculator.ATK_6.value = Math.ceil((PKMN[ctr][3])/15);
        document.calculator.DEF_6.value = Math.ceil(((PKMN[ctr][4])+(PKMN[ctr][2]))/2/13);
        document.calculator.SPATK_6.value = Math.ceil((PKMN[ctr][5])/15);
        document.calculator.SPDEF_6.value = Math.ceil(((PKMN[ctr][6])+(PKMN[ctr][2]))/2/13);
        document.calculator.SPD_6.value = PKMN[ctr][7];
        document.calculator.EXP_6.value = PKMN[ctr][8];
        document.calculator.KG_6.value = PKMN[ctr][9];
        document.calculator.CR_6.value = ((Math.ceil((PKMN[ctr][3])/15))+(Math.ceil(((PKMN[ctr][4])+(PKMN[ctr][2]))/2/13))+(Math.ceil((PKMN[ctr][5])/15))+(Math.ceil(((PKMN[ctr][6])+(PKMN[ctr][2]))/2/13))+(Math.ceil((PKMN[ctr][7])/36)));
        document.calculator.Zone_6.value = PKMN[ctr][11];


        max_ATK[6] = (parseFloat(document.calculator.ATK_6.value) * 2);
        max_DEF[6] = (parseFloat(document.calculator.DEF_6.value) * 2);
        max_SPATK[6] = (parseFloat(document.calculator.SPATK_6.value) * 2);
        max_SPDEF[6] = (parseFloat(document.calculator.SPDEF_6.value) * 2);
        max_EXP[6] = (parseFloat(document.calculator.EXP_6.value) * 2);

        mod_ATK[6] = (parseFloat(document.calculator.ATK_6.value) + parseFloat(document.calculator.plusATK_6.value) - parseFloat(document.calculator.minusATK_6.value));
        mod_DEF[6] = (parseFloat(document.calculator.DEF_6.value) + parseFloat(document.calculator.plusDEF_6.value) - parseFloat(document.calculator.minusDEF_6.value));
        mod_SPATK[6] = (parseFloat(document.calculator.SPATK_6.value) + parseFloat(document.calculator.plusSPATK_6.value) - parseFloat(document.calculator.minusSPATK_6.value));
        mod_SPDEF[6] = (parseFloat(document.calculator.SPDEF_6.value) + parseFloat(document.calculator.plusSPDEF_6.value) - parseFloat(document.calculator.minusSPDEF_6.value));
        mod_EXP[6] = (parseFloat(document.calculator.EXP_6.value) + parseFloat(document.calculator.plusEXP_6.value) - parseFloat(document.calculator.minusEXP_6.value));

        stat_mod[6] = parseFloat(document.calculator.plusATK_6.value) - parseFloat(document.calculator.minusATK_6.value) + parseFloat(document.calculator.plusDEF_6.value) - parseFloat(document.calculator.minusDEF_6.value) + parseFloat(document.calculator.plusSPATK_6.value) - parseFloat(document.calculator.minusSPATK_6.value) + parseFloat(document.calculator.plusSPDEF_6.value) - parseFloat(document.calculator.minusSPDEF_6.value) + parseFloat(document.calculator.plusEXP_6.value) - parseFloat(document.calculator.minusEXP_6.value);
        document.calculator.stat_6.value = stat_mod[6];

        document.calculator.ACC_6.value = document.calculator.plusACC_6.value * document.calculator.minusACC_6.value;
        document.calculator.EVA_6.value = document.calculator.plusEVA_6.value * document.calculator.minusEVA_6.value;
        document.calculator.modSPD_6.value = Math.round(document.calculator.SPD_6.value * document.calculator.plusSPD_6.value * document.calculator.minusSPD_6.value);

        document.calculator.modATK_6.value = mod_ATK[6];
        if (parseFloat(mod_ATK[6]) > parseFloat(max_ATK[6])) {document.calculator.modATK_6.value = max_ATK[6];}
        if (parseFloat(mod_ATK[6]) < 1) {document.calculator.modATK_6.value=1;}

        document.calculator.modDEF_6.value = mod_DEF[6];
        if (parseFloat(mod_DEF[6]) > parseFloat(max_DEF[6])) {document.calculator.modDEF_6.value = max_DEF[6];}
        if (parseFloat(mod_DEF[6]) < 1) {document.calculator.modDEF_6.value=1;}

        document.calculator.modSPATK_6.value = mod_SPATK[6];
        if (parseFloat(mod_SPATK[6]) > parseFloat(max_SPATK[6])) {document.calculator.modSPATK_6.value = max_SPATK[6];}
        if (parseFloat(mod_SPATK[6]) < 1) {document.calculator.modSPATK_6.value=1;}

        document.calculator.modSPDEF_6.value = mod_SPDEF[6];
        if (parseFloat(mod_SPDEF[6]) > parseFloat(max_SPDEF[6])) {document.calculator.modSPDEF_6.value = max_SPDEF[6];}
        if (parseFloat(mod_SPDEF[6]) < 1) {document.calculator.modSPDEF_6.value=1;}

        document.calculator.modEXP_6.value = mod_EXP[6];
        if (parseFloat(mod_EXP[6]) > parseFloat(max_EXP[6])) {document.calculator.modEXP_6.value = max_EXP[6];}
        if (parseFloat(mod_EXP[6]) < 1) {document.calculator.modEXP_6.value=1;}
    }
}

function attackload(){
//This function just loads the attack data when using an existing one.

var PKMNACTION = [];
var atk_val = document.calculator.attacks.value; 

//Name,Base Power, Accuracy, Classification, Type, Energy Mod, Impact, Priority, Description, High Critical, Storm Throw, Roll Value, Special Calculation

PKMNACTION[1]=["Pound",40,100,2,13,0,"Singular target",0,"",2,2,0,0]
PKMNACTION[2]=["Karate Chop",50,100,2,6,0,"Singular target",0,"This attack has a high critical hit ratio.",1,2,0,0]
PKMNACTION[3]=["DoubleSlap",15,85,2,13,3,"Singular target",0,"Roll: 1-8. 1: hits five times | 2: four times | 3,4,5: three times | 6+: two times",2,2,8,0]
PKMNACTION[4]=["Comet Punch",18,85,2,13,3,"Singular target",0,"Roll: 1-8. 1: hits five times | 2: four times | 3,4,5: three times | 6+: two times",2,2,8,0]
PKMNACTION[5]=["Mega Punch",80,85,2,13,0,"Singular target",0,"",2,2,0,0]
PKMNACTION[6]=["Pay Day",40,100,2,13,0,"Singular target",0,"If user's party wins the battle, user receives credits equal to user's EXP level.",2,2,0,0]
PKMNACTION[7]=["Fire Punch",75,100,2,7,0,"Singular target",0,"Roll 1-10. If 1: Target: BRN.",2,2,10,0]
PKMNACTION[8]=["Ice Punch",75,100,2,12,0,"Singular target",0,"Roll 1-10. If 1: Target: FRZ.",2,2,10,0]
PKMNACTION[9]=["ThunderPunch",75,100,2,5,0,"Singular target",0,"Roll 1-10. If 1: Target: PRZ.",2,2,10,0]
PKMNACTION[10]=["Scratch",40,100,2,13,0,"Singular target",0,"",2,2,0,0]
PKMNACTION[11]=["ViceGrip",55,100,2,13,0,"Singular target",0,"",2,2,0,0]
PKMNACTION[12]=["Guillotine",1,30,2,13,25,"Singular target",0,"Target: -999 HP. Fails if: User's EXP < 7.",2,2,0,0]
PKMNACTION[13]=["Razor Wind",80,100,1,13,0,"All opposing Pok√©mon",0,"This attack has a high critical hit ratio.",1,2,0,0]
PKMNACTION[14]=["Swords Dance",0,0,3,13,3,"User",0,"User: +2 ATK",2,2,0,0]
PKMNACTION[15]=["Cut",50,95,2,13,0,"Singular target",0,"",2,2,0,0]
PKMNACTION[16]=["Gust",40,100,1,8,0,"Singular target",0,"If the target is airbourne when this action is successfully used, multiply this action's damage by 2.",2,2,0,0]
PKMNACTION[17]=["Wing Attack",60,100,2,8,0,"Singular target",0,"",2,2,0,0]
PKMNACTION[18]=["Whirlwind",0,0,3,13,5,"Singular target",-6,"Target is sent back to party and replaced with another Pok√©mon from party. Fails if: no other Pok√©mon in party, target has Suction Cups, or target has used Ingrain.",2,2,0,0]
PKMNACTION[19]=["Fly",90,95,2,8,0,"Singular target",0,"",2,2,0,0]
PKMNACTION[20]=["Bind",15,85,2,13,0,"Singular target",0,"Roll: 1-8. 1: hits five rounds | 2: four rounds | 3,4,5: three rounds | 6+: two rounds. At the end of every round, target loses 6 HP. Target can not leave the field through switching or fleeing while the user and target are both still on the field. This effect does not apply to Ghost-type Pokemon.",2,2,8,0]
PKMNACTION[21]=["Slam",80,75,2,13,0,"Singular target",0,"",2,2,0,0]
PKMNACTION[22]=["Vine Whip",45,100,2,10,0,"Singular target",0,"",2,2,0,0]
PKMNACTION[23]=["Stomp",65,100,2,13,0,"Singular target",0,"Roll 1-10. If 1,2,3: Target will flinch next action.",2,2,10,0]
PKMNACTION[24]=["Double Kick",30,100,2,6,0,"Singular target",0,"Hits twice. Each hit is calculated separately.",2,2,0,0]
PKMNACTION[25]=["Mega Kick",120,75,2,13,0,"Singular target",0,"",2,2,0,0]
PKMNACTION[26]=["Jump Kick",100,95,2,6,0,"Singular target",0,"User: If this action does not deal damage for whatever reason, -X HP, where X is how much damage this action would have dealt if successful multiplied by .5. X cannot exceed 50.",2,2,0,0]
PKMNACTION[27]=["Rolling Kick",60,85,2,6,0,"Singular target",0,"Roll 1-10. If 1,2,3: Target will flinch next action.",2,2,10,0]
PKMNACTION[28]=["Sand-Attack",0,100,3,11,2,"Singular target",0,"Target: -1 ACC",2,2,0,0]
PKMNACTION[29]=["Headbutt",70,100,2,13,0,"Singular target",0,"Roll 1-10. If 1,2,3: Target will flinch next action.",2,2,10,0]
PKMNACTION[30]=["Horn Attack",65,100,2,13,0,"Singular target",0,"",2,2,0,0]
PKMNACTION[31]=["Fury Attack",15,85,2,13,3,"Singular target",0,"Roll: 1-8. 1: hits five times | 2: four times | 3,4,5: three times | 6+: two times",2,2,8,0]
PKMNACTION[32]=["Horn Drill",1,30,2,13,25,"Singular target",0,"Target: -999 HP. Fails if: User's EXP < 7.",2,2,0,0]
PKMNACTION[33]=["Tackle",50,100,2,13,0,"Singular target",0,"",2,2,0,0]
PKMNACTION[34]=["Body Slam",85,100,2,13,0,"Singular target",0,"Roll 1-10. If 1,2,3: Target: PRZ.",2,2,10,0]
PKMNACTION[35]=["Wrap",15,90,2,13,0,"Singular target",0,"Roll: 1-8. 1: hits five rounds | 2: four rounds | 3,4,5: three rounds | 6+: two rounds. At the end of every round, target loses 6 HP. Target can not leave the field through switching or fleeing while the user and target are both still on the field. This effect does not apply to Ghost-type Pokemon.",2,2,8,0]
PKMNACTION[36]=["Take Down",90,85,2,13,0,"Singular target",0,"User: -X HP, where X is the damage dealt by this action multiplied by .25. This is recoil damage.",2,2,0,0]
PKMNACTION[37]=["Thrash",120,100,2,13,0,"Random Opponent",0,"User: Next two actions will repeat this action. After third consecutive use, User: CFS. If for whatever reason, user does not repeat this action during its effect, the effect ends.",2,2,0,0]
PKMNACTION[38]=["Double-Edge",120,100,2,13,0,"Singular target",0,"User: -X HP, where X is the damage dealt by this action multiplied by .33. This is recoil damage.",2,2,0,0]
PKMNACTION[39]=["Tail Whip",0,100,3,13,2,"All opposing Pok√©mon",0,"Target: -1 DEF",2,2,0,0]
PKMNACTION[40]=["Poison Sting",15,100,2,14,0,"Singular target",0,"Roll 1-10. If 1,2,3: Target: PSN.",2,2,10,0]
PKMNACTION[41]=["Twineedle",25,100,2,2,0,"Singular target",0,"Hits twice. Each hit is calculated separately. Roll 1-10. 1: Target: PSN.",2,2,10,0]
PKMNACTION[42]=["Pin Missile",25,95,2,2,3,"Singular target",0,"Roll: 1-8. 1: hits five times | 2: four times | 3,4,5: three times | 6+: two times",2,2,8,0]
PKMNACTION[43]=["Leer",0,100,3,13,2,"All opposing Pok√©mon",0,"Target: -1 DEF",2,2,0,0]
PKMNACTION[44]=["Bite",60,100,2,3,0,"Singular target",0,"Roll 1-10. If 1,2,3: Target will flinch next action.",2,2,10,0]
PKMNACTION[45]=["Growl",0,100,3,13,2,"All opposing Pok√©mon",0,"Target: -1 ATK",2,2,0,0]
PKMNACTION[46]=["Roar",0,0,3,13,5,"Singular target",-6,"Target is sent back to party and replaced with another Pok√©mon from party. Fails if: no other Pok√©mon in party, target has Suction Cups, or target has used Ingrain.",2,2,0,0]
PKMNACTION[47]=["Sing",0,55,3,13,4,"Singular target",0,"Target: SLP.",2,2,0,0]
PKMNACTION[48]=["Supersonic",0,55,3,13,3,"Singular target",0,"Target: CFS",2,2,0,0]
PKMNACTION[49]=["SonicBoom",1,90,1,13,1,"Singular target",0,"Target: -5 HP. This amount cannot for any reason, increase or decrease.",2,2,0,0]
PKMNACTION[50]=["Disable",0,100,3,13,7,"Singular target",0,"Roll 1-4. For X+3 actions, including the current round, attempts by target to use the last move used by target will fail. During effect, this action fails against target. Effect ends when target is replaced.",2,2,4,0]
PKMNACTION[51]=["Acid",40,100,1,14,0,"All opposing Pok√©mon",0,"Roll 1-10. If 1: Target: -1 SPDEF.",2,2,10,0]
PKMNACTION[52]=["Ember",40,100,1,7,0,"Singular target",0,"Roll 1-10. If 1: Target: BRN.",2,2,10,0]
PKMNACTION[53]=["Flamethrower",90,100,1,7,0,"Singular target",0,"Roll 1-10. If 1: Target: BRN.",2,2,10,0]
PKMNACTION[54]=["Mist",0,0,3,12,7,"Users's Field",0,"For two rounds, including the current round, actions and abilities can't reduce the stat stages of each active Pok√©mon on the user's side if they are used by other Pok√©mon. During effect, this action fails for user's party.",2,2,0,0]
PKMNACTION[55]=["Water Gun",40,100,1,18,0,"Singular target",0,"",2,2,0,0]
PKMNACTION[56]=["Hydro Pump",110,80,1,18,0,"Singular target",0,"",2,2,0,0]
PKMNACTION[57]=["Surf",90,100,1,18,0,"All Pok√©mon in Battle except User",0,"If the target is completely underwater when this action is successfully used, multiply this action's damage by 2.",2,2,0,0]
PKMNACTION[58]=["Ice Beam",90,100,1,12,0,"Singular target",0,"Roll 1-10. If 1: Target: FRZ.",2,2,10,0]
PKMNACTION[59]=["Blizzard",110,70,1,12,0,"All opposing Pok√©mon",0,"Roll 1-10. If 1: Target: FRZ. During Hail, this action always hits.",2,2,10,0]
PKMNACTION[60]=["Psybeam",65,100,1,15,0,"Singular target",0,"Roll 1-10. If 1: Target: CFS.",2,2,10,0]
PKMNACTION[61]=["BubbleBeam",65,100,1,18,0,"Singular target",0,"Roll 1-10. If 1: Target: -1 SPD.",2,2,10,0]
PKMNACTION[62]=["Aurora Beam",65,100,1,12,0,"Singular target",0,"Roll 1-10. If 1: Target: -1 ATK.",2,2,10,0]
PKMNACTION[63]=["Hyper Beam",150,90,1,13,0,"Singular target",0,"User: The energy used for the next action will be multiplied by 2.",2,2,0,0]
PKMNACTION[64]=["Peck",35,100,2,8,0,"Singular target",0,"",2,2,0,0]
PKMNACTION[65]=["Drill Peck",80,100,2,8,0,"Singular target",0,"",2,2,0,0]
PKMNACTION[66]=["Submission",80,80,2,6,0,"Singular target",0,"User: -X HP, where X is the damage dealt by this action multiplied by .25. This is recoil damage.",2,2,0,0]
PKMNACTION[67]=["Low Kick",1,100,2,6,0,"Singular target",0,"This action's BP is 20 if the weight of the target's original species is 10 kilograms (kg) or less [or less than 10 kg], else 40 if 25 kg or less, else 60 if 50 kg or less, else 80 if 100 kg or less, else 100 if 200 kg or less, else 120.",2,2,0,"LK"]
PKMNACTION[68]=["Counter",1,100,2,6,"damage dealt to target / 3","see description",-5,"The last Pok√©mon to deal physical damage to this Pok√©mon during this round is dealt damage equal to 2 times damage dealt by target to user. Can not be used in the same conditional as Mirror Coat or Metal Burst.",2,2,0,0]
PKMNACTION[69]=["Seismic Toss",1,100,2,6,"BP / 3","Singular target",0,"BP = User's EXP level * 10",2,2,0,"ST"]
PKMNACTION[70]=["Strength",80,100,2,13,0,"Singular target",0,"",2,2,0,0]
PKMNACTION[71]=["Absorb",20,100,1,10,0,"Singular target",0,"User: +X HP and +X Energy, where X is the damage dealt by this attack multiplied by .5.",2,2,0,0]
PKMNACTION[72]=["Mega Drain",40,100,1,10,0,"Singular target",0,"User: +X HP and +X Energy, where X is the damage dealt by this attack multiplied by .5.",2,2,0,0]
PKMNACTION[73]=["Leech Seed",0,90,3,10,6,"Singular target",0,"Target: At the end of every round, -4 HP and -4 Energy. User (or party member in user's place): +4 HP and +4 Energy at the end of every round, unless target's ability is Liquid Ooze. If target's Ability is Liquid Ooze, User (or party member in user's place): -4 HP and -4 Energy at the end of every round . Fails if: target is Grass-type.",2,2,0,0]
PKMNACTION[74]=["Growth",0,0,3,13,4,"User",0,"User: +1 ATK, +1 SPATK. Weather: Sunny, +2 ATK, +2 SPATK.",2,2,0,0]
PKMNACTION[75]=["Razor Leaf",55,95,2,10,0,"All opposing Pok√©mon",0,"This attack has a high critical hit ratio.",1,2,0,0]
PKMNACTION[76]=["SolarBeam",120,100,1,10,0,"Singular target",0,"If there is no source of sun available when this action is used, this action's Energy will be multiplied by 2.",2,2,0,0]
PKMNACTION[77]=["PoisonPowder",0,75,3,14,0,"Singular target",0,"Target: PSN. This action fails if the existing target is a Grass-type Pokemon.",2,2,0,0]
PKMNACTION[78]=["Stun Spore",0,75,3,10,3,"Singular target",0,"Target: PRZ. This action fails if the existing target is a Grass-type Pokemon.",2,2,0,0]
PKMNACTION[79]=["Sleep Powder",0,75,3,10,4,"Singular target",0,"Target: SLP. This action fails if the existing target is a Grass-type Pokemon.",2,2,0,0]
PKMNACTION[80]=["Petal Dance",120,100,1,10,0,"Random Opponent",0,"User: Next two actions will repeat this action. After third consecutive use, User: CFS. If for whatever reason, user does not repeat this action during its effect, the effect ends.",2,2,0,0]
PKMNACTION[81]=["String Shot",0,95,3,2,2,"All opposing Pok√©mon",0,"Target: -1 SPD",2,2,0,0]
PKMNACTION[82]=["Dragon Rage",1,100,1,4,1,"Singular target",0,"Target: -5 HP. This amount cannot for any reason, increase or decrease.",2,2,0,0]
PKMNACTION[83]=["Fire Spin",35,85,1,7,0,"Singular target",0,"Roll: 1-8. 1: hits five rounds | 2: four rounds | 3,4,5: three rounds | 6+: two rounds. At the end of every round, target loses 6 HP. Target can not leave the field through switching or fleeing while the user and target are both still on the field. This effect does not apply to Ghost-type Pokemon.",2,2,8,0]
PKMNACTION[84]=["ThunderShock",40,100,1,5,0,"Singular target",0,"Roll 1-10. If 1: Target: PRZ.",2,2,10,0]
PKMNACTION[85]=["Thunderbolt",90,100,1,5,0,"Singular target",0,"Roll 1-10. If 1: Target: PRZ.",2,2,10,0]
PKMNACTION[86]=["Thunder Wave",0,100,3,5,4,"Singular target",0,"Target: PRZ.",2,2,0,0]
PKMNACTION[87]=["Thunder",110,70,1,5,0,"Singular target",0,"Roll 1-10. If 1,2,3: Target: PRZ. When raining, this action will always strike regardless of ACC and EVA. When sun is shining brightly, ACC is 50. Can hit targets that are airborne.",2,2,10,0]
PKMNACTION[88]=["Rock Throw",50,90,2,16,0,"Singular target",0,"",2,2,0,0]
PKMNACTION[89]=["Earthquake",100,100,2,11,0,"All Pok√©mon in Battle except User",0,"If target is completely underground when targeted, multiply this action's damage by 2.",2,2,0,0]
PKMNACTION[90]=["Fissure",1,30,2,11,25,"Singular target",0,"Target: -999 HP. Fails if: User's EXP < 7.",2,2,0,0]
PKMNACTION[91]=["Dig",80,100,2,11,0,"Singular target",0,"",2,2,0,0]
PKMNACTION[92]=["Toxic",0,90,3,14,6,"Singular target",0,"Target: TXC. This move will never miss if used by a Poison type.",2,2,0,0]
PKMNACTION[93]=["Confusion",50,100,1,15,0,"Singular target",0,"Roll 1-10. If 1: Target: CFS.",2,2,10,0]
PKMNACTION[94]=["Psychic",90,100,1,15,0,"Singular target",0,"Roll 1-10. If 1: Target: -1 SPDEF.",2,2,10,0]
PKMNACTION[95]=["Hypnosis",0,60,3,15,3,"Singular target",0,"Target: SLP.",2,2,0,0]
PKMNACTION[96]=["Meditate",0,0,3,15,2,"User",0,"User: +1 ATK",2,2,0,0]
PKMNACTION[97]=["Agility",0,0,3,15,3,"User",0,"User: +2 SPD",2,2,0,0]
PKMNACTION[98]=["Quick Attack",40,100,2,13,0,"Singular target",1,"",2,2,0,0]
PKMNACTION[99]=["Rage",20,100,2,13,0,"Singular target",0,"User: If last action was Rage, +1 ATK when damaged by target's next action. ATK is reset to value prior to Rage if Rage is not used next action.",2,2,0,0]
PKMNACTION[100]=["Teleport",0,0,3,15,0,"User",0,"User: Flees from battle. Fails if: User is in a Trainer Battle.",2,2,0,0]
PKMNACTION[101]=["Night Shade",1,100,1,9,"BP / 3","Singular target",0,"BP = User's EXP level * 10",2,2,0,"ST"]
PKMNACTION[102]=["Mimic",0,0,3,13,4,"Singular target",0,"User learns target's last action for the duration of the battle. User can no longer use Mimic for the duration of the battle.",2,2,0,0]
PKMNACTION[103]=["Screech",0,85,3,13,3,"Singular target",0,"Target: -2 DEF",2,2,0,0]
PKMNACTION[104]=["Double Team",0,0,3,13,"3 * X","User",0,"User: Creates illusionistic copies of self. When user is targeted, roll from 1-X. If 1, user is hit and all clones disappear. Otherwise, clone is hit and disappears. Number of clones = X = User's Speed / 36. Number of clones cannot exceed 4.",2,2,0,0]
PKMNACTION[105]=["Recover",0,0,3,13,10,"User",0,"User: +20 HP",2,2,0,0]
PKMNACTION[106]=["Harden",0,0,3,13,2,"User",0,"User: +1 DEF",2,2,0,0]
PKMNACTION[107]=["Minimize",0,0,3,13,2,"User",0,"User: +1 EVA. Until user is replaced, when user is targeted by Stomp or Steamroller, damage dealt is multiplied by 2.",2,2,0,0]
PKMNACTION[108]=["SmokeScreen",0,100,3,13,2,"Singular target",0,"Target: -1 ACC",2,2,0,0]
PKMNACTION[109]=["Confuse Ray",0,100,3,9,5,"Singular target",0,"Target: CFS",2,2,0,0]
PKMNACTION[110]=["Withdraw",0,0,3,18,2,"User",0,"User: +1 DEF",2,2,0,0]
PKMNACTION[111]=["Defense Curl",0,0,3,13,2,"User",0,"User: +1 DEF. Next Action: Ice Ball and Rollout's damage will be increased by 5.",2,2,0,0]
PKMNACTION[112]=["Barrier",0,0,3,15,3,"User",0,"User: +2 DEF",2,2,0,0]
PKMNACTION[113]=["Light Screen",0,0,3,15,6,"Users's Field",0,"Damage dealt to user's party casued by the SPATK stat will be multiplied by .5 for this round and the next round.",2,2,0,0]
PKMNACTION[114]=["Haze",0,0,3,12,6,"Entire field",0,"Resets all stat stages on all active Pok√©mon to zero.",2,2,0,0]
PKMNACTION[115]=["Reflect",0,0,3,15,6,"Users's Field",0,"Damage dealt to user's party casued by the ATK stat will be multiplied by .5 for this round and the next round.",2,2,0,0]
PKMNACTION[116]=["Focus Energy",0,0,3,13,3,"User",0,"Raises Critical Hit level by 2. This action can not raise the critical hit level if it already has done so.",2,2,0,0]
PKMNACTION[117]=["Bide",1,0,2,13,"damage dealt to target / 3","User",1,"For the user's next two actions, user does not move. On the third action, user unleashes damage equal to twice the amount of damage received by attacks since Bide was used.",2,2,0,0]
PKMNACTION[118]=["Metronome",0,0,3,13,0,"User",0,"Uses a random move other than the following: Metronome, Struggle, Sketch, Mimic, Chatter, Sleep Talk, Assist, Mirror Move, Counter, Mirror Coat, Protect, Detect, Endure, Destiny Bond, Thief, Follow Me, Snatch, Helping Hand, Covet, Trick, Focus Punch, Feint, Copycat, Me First, Switcheroo, or any move user can learn. Energy is used equal to the energy required for action to normally occur.",2,2,0,0]
PKMNACTION[119]=["Mirror Move",0,0,3,8,0,"Singular target",0,"User: Uses the same action target used during their last action. Energy is used equal to the energy required for action to normally occur.",2,2,0,0]
PKMNACTION[120]=["Selfdestruct",200,100,2,13,0,"All Pok√©mon in Battle except User",0,"User: faints as part of this action's use. Target: For the duration of this action, target's DEF is multiplied by .5 Fails if: no target exists (doesn't cause fainting).",2,2,0,0]
PKMNACTION[121]=["Egg Bomb",100,75,2,13,0,"Singular target",0,"",2,2,0,0]
PKMNACTION[122]=["Lick",30,100,2,9,0,"Singular target",0,"Roll 1-10. If 1,2,3: Target: PRZ.",2,2,10,0]
PKMNACTION[123]=["Smog",30,70,1,14,0,"Singular target",0,"Roll 1-5. If 1,2: Target: PSN.",2,2,5,0]
PKMNACTION[124]=["Sludge",65,100,1,14,0,"Singular target",0,"Roll 1-10. If 1,2,3: Target: PSN.",2,2,10,0]
PKMNACTION[125]=["Bone Club",65,85,2,11,0,"Singular target",0,"Roll 1-10. If 1: Target will flinch next action.",2,2,10,0]
PKMNACTION[126]=["Fire Blast",110,85,1,7,0,"Singular target",0,"Roll 1-10. If 1: Target: BRN.",2,2,10,0]
PKMNACTION[127]=["Waterfall",80,100,2,18,0,"Singular target",0,"Roll 1-10. If 1,2: Target will flinch next action.",2,2,10,0]
PKMNACTION[128]=["Clamp",35,85,2,18,0,"Singular target",0,"Roll: 1-8. 1: hits five rounds | 2: four rounds | 3,4,5: three rounds | 6+: two rounds. At the end of every round, target loses 6 HP. Target can not leave the field through switching or fleeing while the user and target are both still on the field. This effect does not apply to Ghost-type Pokemon.",2,2,8,0]
PKMNACTION[129]=["Swift",60,0,1,13,0,"All opposing Pok√©mon",0,"Regardless of accuracy roll, this action will hit target.",2,2,0,0]
PKMNACTION[130]=["Skull Bash",130,100,2,13,0,"Singular target",0,"After this action is performed, User: +1 DEF. At the end of this round, User: -1 DEF.",2,2,0,0]
PKMNACTION[131]=["Spike Cannon",20,100,2,13,3,"Singular target",0,"Roll: 1-8. 1: hits five times | 2: four times | 3,4,5: three times | 6+: two times",2,2,8,0]
PKMNACTION[132]=["Constrict",10,100,2,13,0,"Singular target",0,"Roll 1-10. If 1: Target: -1 SPD.",2,2,10,0]
PKMNACTION[133]=["Amnesia",0,0,3,15,3,"User",0,"User: +2 SPDEF",2,2,0,0]
PKMNACTION[134]=["Kinesis",0,80,3,15,2,"Singular target",0,"Target: -1 ACC",2,2,0,0]
PKMNACTION[135]=["Softboiled",0,0,3,13,10,"User",0,"User: +20 HP",2,2,0,0]
PKMNACTION[136]=["Hi Jump Kick",130,90,2,6,0,"Singular target",0,"User: If this action does not deal damage for whatever reason, -X HP, where X is how much damage this action would have dealt if successful multiplied by .5. X cannot exceed 50.",2,2,0,0]
PKMNACTION[137]=["Glare",0,100,3,13,4,"Singular target",0,"Target: PRZ.",2,2,0,0]
PKMNACTION[138]=["Dream Eater",100,100,1,15,0,"Singular target",0,"User: +X HP and +X Energy, where X is the damage dealt by this attack divided by 4. Fails if: Target is not SLP.",2,2,0,0]
PKMNACTION[139]=["Poison Gas",0,90,3,14,0,"All opposing Pok√©mon",0,"Target: PSN.",2,2,0,0]
PKMNACTION[140]=["Barrage",15,85,2,13,3,"Singular target",0,"Roll: 1-8. 1: hits five times | 2: four times | 3,4,5: three times | 6+: two times",2,2,8,0]
PKMNACTION[141]=["Leech Life",20,100,2,2,0,"Singular target",0,"User: +X HP and +X Energy, where X is the damage dealt by this attack multiplied by .5.",2,2,0,0]
PKMNACTION[142]=["Lovely Kiss",0,75,3,13,4,"Singular target",0,"Target: SLP.",2,2,0,0]
PKMNACTION[143]=["Sky Attack",140,90,2,8,0,"Singular target",0,"This attack has a high critical hit ratio. Roll 1-10. 1,2,3: Target will flinch during their next action. User consumes twice as much energy next action.",1,2,10,0]
PKMNACTION[144]=["Transform",0,0,3,13,10,"Singular target",0,"User: Becomes target and copies all stat changes. Ends effect of Disable for the user. These attributes revert to their originals when user is replaced. During effect, user can use this action, and this action fails against user.",2,2,0,0]
PKMNACTION[145]=["Bubble",40,100,1,18,0,"All opposing Pok√©mon",0,"Roll 1-10. If 1: Target: -1 SPD.",2,2,10,0]
PKMNACTION[146]=["Dizzy Punch",70,100,2,13,0,"Singular target",0,"Roll 1-10. If 1,2: Target: CFS.",2,2,10,0]
PKMNACTION[147]=["Spore",0,100,3,10,6,"Singular target",0,"Target: SLP. This action fails if the existing target is a Grass-type Pokemon.",2,2,0,0]
PKMNACTION[148]=["Flash",0,100,3,13,2,"Singular target",0,"Target: -1 ACC",2,2,0,0]
PKMNACTION[149]=["Psywave",1,80,1,15,0,"Singular target",0,"Roll 1-10. BP = User's EXP level * X, where X is the number rolled.",2,2,10,0]
PKMNACTION[150]=["Splash",0,0,3,13,0,"User",0,"",2,2,0,0]
PKMNACTION[151]=["Acid Armor",0,0,3,14,3,"User",0,"User: +2 DEF",2,2,0,0]
PKMNACTION[152]=["Crabhammer",100,90,2,18,0,"Singular target",0,"This attack has a high critical hit ratio.",1,2,0,0]
PKMNACTION[153]=["Explosion",250,100,2,13,0,"All Pok√©mon in Battle except User",0,"User: faints as part of this action's use. Target: For the duration of this action, target's DEF is multiplied by .5 Fails if: no target exists (doesn't cause fainting).",2,2,0,0]
PKMNACTION[154]=["Fury Swipes",18,80,2,13,3,"Singular target",0,"Roll: 1-8. 1: hits five times | 2: four times | 3,4,5: three times | 6+: two times",2,2,8,0]
PKMNACTION[155]=["Bonemerang",50,90,2,11,0,"Singular target",0,"Hits twice. Each hit is calculated seperately.",2,2,0,0]
PKMNACTION[156]=["Rest",0,0,3,15,8,"User",0,"User: SLP for two rounds. +20 HP every round user is asleep due to Rest. Action will fail if user is already asleep or cannot gain HP.",2,2,0,0]
PKMNACTION[157]=["Rock Slide",75,90,2,16,0,"All opposing Pok√©mon",0,"Roll 1-10. If 1,2,3: Target will flinch next action.",2,2,10,0]
PKMNACTION[158]=["Hyper Fang",80,90,2,13,0,"Singular target",0,"Roll 1-10. If 1: Target will flinch next action.",2,2,10,0]
PKMNACTION[159]=["Sharpen",0,0,3,13,2,"User",0,"User: +1 ATK",2,2,0,0]
PKMNACTION[160]=["Conversion",0,0,3,13,8,"User",0,"User: Type becomes the original type of one of the user's moves, chosen at random. Fails if user has Multitype or if each of user's moves is of either type of the user, since it chooses a type other than one of user's types.",2,2,0,0]
PKMNACTION[161]=["Tri Attack",80,100,1,13,0,"Singular target",0,"Roll 1-10. If 1,2: Roll 1-3. If 1: Target: PRZ. If 2: Target: FRZ. If 3: Target: BRN.",2,2,10,0]
PKMNACTION[162]=["Super Fang",1,90,2,13,0,"Singular target",0,"BP = target's current HP",2,2,0,"SF"]
PKMNACTION[163]=["Slash",70,100,2,13,0,"Singular target",0,"This attack has a high critical hit ratio.",1,2,0,0]
PKMNACTION[164]=["Substitute",0,0,3,13,6,"User",0,"User declares HP amount (up to 25). User loses HP equal to declared amount. User creates a Substitute doll for themselves. This doll has the same amount of HP as the declared amount, and mirrors the stats of the user. This action will fail if the user already has a doll. The following is from Veekun: The doll takes damage as normal, using the user's stats and types, and will break when its HP reaches zero. Self-inflicted damage from confusion or recoil is not absorbed. Healing effects from targets ignore the doll and heal the user as normal. Moves that work based on the user's HP still do so; the doll's HP does not influence any move. The doll will block major status effects, confusion, and flinching. The effects of SmellingSalt and Wake-Up Slap do not trigger against a doll, even if the Pok√©mon behind the doll has the appropriate major status effect. Multi-turn trapping moves like Wrap will hit the doll for their regular damage, but the multi-turn trapping and damage effects will not activate. Moves blocked or damage absorbed by the doll do not count as hitting the user or inflicting damage for any effects that respond to such, e.g., Avalanche, Counter, or a Rowap Berry. Magic Coat still works as normal, even against moves the doll would block. Opposing Pok√©mon that damage the doll with a leech move like Absorb are healed as normal. It will also block Acupressure, Block, the curse effect of Curse, Dream Eater, Embargo, Flatter, Gastro Acid, Grudge, Heal Block, Leech Seed, Lock-On, Mean Look, Mimic, Mind Reader, Nightmare, Pain Split, Psycho Shift, Spider Web, Sketch, Swagger, Switcheroo, Trick, Worry Seed, and Yawn. A Pok√©mon affected by Yawn before summoning the doll will still fall to sleep. The doll blocks Intimidate, but all other abilities act as though the doll did not exist. If the user has an ability that absorbs moves of a certain type for HP (such as Volt Absorb absorbing Thunder Wave), such moves will not be blocked. The user is still vulnerable to damage inflicted when entering or leaving the field, such as by Pursuit or Spikes; however, the doll will block the poison effect of Toxic Spikes. The doll is passed on by Baton Pass. It keeps its existing HP, but uses the replacement Pok√©mon's stats and types for damage calculation.All other effects work as normal. Sound based moves IGNORE the Substitute as if it were not in play.",2,2,0,0]
PKMNACTION[165]=["Struggle",50,0,2,"None",0,"Singular target",0,"User: -25 HP. All Pokemon can use this move even if it doesn't appear in their Veekun list. This move is successful despite the effects of Torment, Encore, Taunt, or where any other move would likewise fail.",2,2,0,0]
PKMNACTION[166]=["Sketch",0,0,3,13,10,"Singular target",0,"User: If target's last action was an attack listed in Compendium, user permanently gains the move as a Tutored Move, effective immediately.",2,2,0,0]
PKMNACTION[167]=["Triple Kick",10,90,2,6,0,"Singular target",0,"Hits three times in a row. Accuracy is calculated per hit. If hits twice in a row, 2nd's hit damage is multiplied by 2. If hit thrice in a row, 3rd hit's damage is multiplied by 3.",2,2,0,0]
PKMNACTION[168]=["Thief",60,100,2,3,0,"Singular target",0,"",2,2,0,0]
PKMNACTION[169]=["Spider Web",0,0,3,2,5,"Singular target",0,"This Pokemon can not leave the field through switching or fleeing while the user and target are both still on the field. This effect does not apply to Ghost-type Pokemon.",2,2,0,0]
PKMNACTION[170]=["Mind Reader",0,0,3,13,5,"Singular target",0,"User: Next action cannot miss target.",2,2,0,0]
PKMNACTION[171]=["Nightmare",0,100,3,9,10,"Singular target",0,"Target loses 10 HP at the end of every round (including the current round). Effect ends when target is replaced or wakes up. Fails if: Target is not SLP.",2,2,0,0]
PKMNACTION[172]=["Flame Wheel",60,100,2,7,0,"Singular target",0,"Roll 1-10. If 1: Target has BRN. If user is frozen and it chose this move for use, it becomes defrosted before this action is used.",2,2,10,0]
PKMNACTION[173]=["Snore",50,100,1,13,0,"Singular target",0,"Roll 1-10. If 1,2,3: Target will flinch next action. Fails if: user is not SLP.",2,2,10,0]
PKMNACTION[174]=["Curse",0,0,3,9,13,"User or Target",0,"If user's current type does not include Ghost or if user has Magic Guard, decreases user's SPD by one stage and increases user's ATK and DEF by one stage and the energy mod for this action is 4. If user's type includes Ghost, user declares X HP (up to 50) and loses X HP (even if HP reduced would faint user). At the end of every round, target loses X/2 HP. This effect ends when target is switched. During effect, this action fails against target. Fails either way if no target exists. If HP is not declared, assume 50 HP.",2,2,0,0]
PKMNACTION[175]=["Flail",1,100,2,13,0,"Singular target",0,"If user's HP is 1, BP is 200. If user's HP is 2-20, BP is 150. If user's HP is 21-40, BP is 100. If user's HP is 41-60, BP is 80. If user's HP is 61-80, BP is 40. If user's HP is 81-100, BP is 20.",2,2,0,"FR"]
PKMNACTION[176]=["Conversion 2",0,0,3,13,10,"Singular target",0,"User's type changes to one random type that is resistant to the last action that damaged user.",2,2,0,0]
PKMNACTION[177]=["Aeroblast",100,95,1,8,0,"Singular target",0,"This attack has a high critical hit ratio.",1,2,0,0]
PKMNACTION[178]=["Cotton Spore",0,100,3,10,3,"Singular target",0,"Target: -1 SPD. This action fails if the existing target is a Grass-type Pokemon.",2,2,0,0]
PKMNACTION[179]=["Reversal",1,100,2,6,0,"Singular target",0,"If user's HP is 1, BP is 200. If user's HP is 2-20, BP is 150. If user's HP is 21-40, BP is 100. If user's HP is 41-60, BP is 80. If user's HP is 61-80, BP is 40. If user's HP is 81-100, BP is 20.",2,2,0,"FR"]
PKMNACTION[180]=["Spite",0,100,3,9,6,"Singular target",0,"Target: Loses Energy equal to the Energy used in target's last action, multiplied by .5.",2,2,0,0]
PKMNACTION[181]=["Powder Snow",40,100,1,12,0,"All opposing Pok√©mon",0,"Roll 1-10. If 1: Target: FRZ.",2,2,10,0]
PKMNACTION[182]=["Protect",0,0,3,13,8,"User",4,"During the action following this action, user is protected from harm of any kind from an action. Attempts to use this after Protect, Wide Guard, Detect, Quick Guard or Endure have successfully been used will fail.",2,2,0,0]
PKMNACTION[183]=["Mach Punch",40,100,2,6,0,"Singular target",1,"",2,2,0,0]
PKMNACTION[184]=["Scary Face",0,90,3,13,3,"Singular target",0,"Target: -2 SPD",2,2,0,0]
PKMNACTION[185]=["Feint Attack",60,0,2,3,0,"Singular target",0,"Regardless of accuracy roll, this action will hit target.",2,2,0,0]
PKMNACTION[186]=["Sweet Kiss",0,75,3,19,3,"Singular target",0,"Target: CFS",2,2,0,0]
PKMNACTION[187]=["Belly Drum",0,0,3,13,4,"User",0,"User: -50 HP. +3 ATK. Fails if user's HP is less than 51, or if user's ATK is greater than +3.",2,2,0,0]
PKMNACTION[188]=["Sludge Bomb",90,100,1,14,0,"Singular target",0,"Roll 1-10. If 1,2,3: Target: PSN.",2,2,10,0]
PKMNACTION[189]=["Mud-Slap",20,100,1,11,0,"Singular target",0,"Target: -1 ACC.",2,2,0,0]
PKMNACTION[190]=["Octazooka",65,85,1,18,0,"Singular target",0,"Roll 1-2. If 1: Target: -1 ACC.",2,2,2,0]
PKMNACTION[191]=["Spikes",0,0,3,11,2,"Opponent's Field",0,"Applies Spikes to a target's party.",2,2,0,0]
PKMNACTION[192]=["Zap Cannon",120,50,1,5,0,"Singular target",0,"Target: PRZ.",2,2,0,0]
PKMNACTION[193]=["Foresight",0,0,3,13,4,"Singular target",0,"Target: EVA is now reset to +/- 0. Double Team clones disappear. If target is ethereal, it is now solid. Normal and Fighting-type actions now deal normal effectiveness if target is Ghost-type. Effect lasts for 4 actions.",2,2,0,0]
PKMNACTION[194]=["Destiny Bond",0,0,3,9,15,"User",0,"Until the end of the round, if an action by non-users would reduce user's HP to zero, the responsible Pok√©mon will faint.",2,2,0,0]
PKMNACTION[195]=["Perish Song",0,0,3,13,15,"Entire field",0,"Each active Pok√©mon without a perish count receives a perish count of 4. At the end of every round (including the current round), the perish count of each active Pok√©mon is reduced by 1 and all Pok√©mon with a perish count of 0 faint simultaneously. A Pok√©mon's perish count is removed when it is switched.",2,2,0,0]
PKMNACTION[196]=["Icy Wind",55,95,1,12,0,"All opposing Pok√©mon",0,"Target: -1 SPD",2,2,0,0]
PKMNACTION[197]=["Detect",0,0,3,6,8,"User",4,"During the action following this action, user is protected from harm of any kind from an action. Attempts to use this after Protect, Wide Guard, Detect, Quick Guard or Endure have successfully been used will fail.",2,2,0,0]
PKMNACTION[198]=["Bone Rush",25,90,2,11,3,"Singular target",0,"Roll: 1-8. 1: hits five times | 2: four times | 3,4,5: three times | 6+: two times",2,2,8,0]
PKMNACTION[199]=["Lock-On",0,0,3,13,5,"Singular target",0,"User: Next action cannot miss target.",2,2,0,0]
PKMNACTION[200]=["Outrage",120,100,2,4,0,"Random Opponent",0,"User: Next two actions will repeat this action. After third consecutive use, User: CFS. If for whatever reason, user does not repeat this action during its effect, the effect ends.",2,2,0,0]
PKMNACTION[201]=["Sandstorm",0,0,3,16,7,"Entire field",0,"Applies Sandstorm for current round and following round.",2,2,0,0]
PKMNACTION[202]=["Giga Drain",75,100,1,10,0,"Singular target",0,"User: +X HP and +X Energy, where X is the damage dealt by this attack multiplied by .5.",2,2,0,0]
PKMNACTION[203]=["Endure",0,0,3,13,7,"User",4,"Until the end of the round, if an action by non-users would reduce user's HP to less than 1, its damage is changed so that it reduces user's HP to 1 instead. Attempts to use this after Protect, Wide Guard, Detect, Quick Guard or Endure have successfully been used will fail.",2,2,0,0]
PKMNACTION[204]=["Charm",0,100,3,13,3,"Singular target",0,"Target: -2 ATK",2,2,0,0]
PKMNACTION[205]=["Rollout",30,90,2,16,0,"Singular target",0,"User uses this action for four actions in a row, including this one. This effect ends if the action misses or fails. BP gains 10 every consecutive time (within the streak of five) the action is succesful.",2,2,0,0]
PKMNACTION[206]=["False Swipe",40,100,2,13,0,"Singular target",0,"This action cannot reduce target's HP lower than 1.",2,2,0,0]
PKMNACTION[207]=["Swagger",0,90,3,13,5,"Singular target",0,"Target: +2 ATK, CFS.",2,2,0,0]
PKMNACTION[208]=["Milk Drink",0,0,3,13,10,"User",0,"User: +20 HP",2,2,0,0]
PKMNACTION[209]=["Spark",65,100,2,5,0,"Singular target",0,"Roll 1-10. If 1,2,3: Target: PRZ.",2,2,10,0]
PKMNACTION[210]=["Fury Cutter",40,95,2,2,0,"Singular target",0,"BP increases with each consecutive use. 1st use= 20. 2nd use= 40. 3rd use = 60. 4th use = 80. 5th use = 160.",2,2,0,0]
PKMNACTION[211]=["Steel Wing",70,90,2,17,0,"Singular target",0,"Roll 1-10. If 1: User: +1 DEF.",2,2,10,0]
PKMNACTION[212]=["Mean Look",0,0,3,13,5,"Singular target",0,"This Pokemon can not leave the field through switching or fleeing while the user and target are both still on the field. This effect does not apply to Ghost-type Pokemon.",2,2,0,0]
PKMNACTION[213]=["Attract",0,100,3,13,4,"Singular target",0,"Target: Infatuated. Fails if target and user share a gender or if target or user are genderless.",2,2,0,0]
PKMNACTION[214]=["Sleep Talk",0,0,3,13,0,"User",0,"Roll from 1-X, where X is the number of moves listed in Compendium. If the user is capable of succesfully using the rolled move, user performs the move. If the user cannot use the rolled move, or chooses Sleep Talk, Copycat, Assist, Me First, Metronome, Mirror Move, Focus Punch, Uproar, Chatter, Bide, or any two-turn move, roll again. Energy used is equal to the energy required for action to normally occur. The rolled move has 0 priority. Fails unless user is asleep.",2,2,0,0]
PKMNACTION[215]=["Heal Bell",0,0,3,13,7,"Users's Field",0,"Each Pok√©mon in user's party is cured of its status problem. Does not impact Pok√©mon with Soundproof.",2,2,0,0]
PKMNACTION[216]=["Return",102,100,2,13,0,"Singular target",0,"",2,2,0,0]
PKMNACTION[217]=["Present",1,90,2,13,5,"Singular target",0,"Roll 1-10. 1: BP = 120 | 2,3,4: BP = 80 | 5,6,7,8: BP: 40 | 9+: Heals target for 5 HP.",2,2,10,0]
PKMNACTION[218]=["Frustration",102,100,2,13,0,"Singular target",0,"If target is or has Water type, this action is Super Effective.",2,2,0,0]
PKMNACTION[219]=["Safeguard",0,0,3,13,8,"Users's Field",0,"User's party is protected from status ailments and effects from targets for five actions including current.",2,2,0,0]
PKMNACTION[220]=["Pain Split",0,0,3,13,9,"Singular target",0,"Target and User: HP becomes (target HP + user HP) / 2.",2,2,0,0]
PKMNACTION[221]=["Sacred Fire",100,95,2,7,0,"Singular target",0,"Roll 1-10. If 1: Target has BRN. If user is frozen and it chose this move for use, it becomes defrosted before this action is used.",2,2,10,0]
PKMNACTION[222]=["Magnitude",1,100,2,11,0,"All Pok√©mon in Battle except User",0,"Roll 1-100. If 1-5: BP = 10. If 5-10: BP = 150. If 10-20: BP = 30. If 21-30: BP = 110. If 31-50: BP = 50. If 51-80: BP = 70. If 81-100: BP = 90.",2,2,100,0]
PKMNACTION[223]=["DynamicPunch",100,50,2,6,0,"Singular target",0,"Target: CFS.",2,2,0,0]
PKMNACTION[224]=["Megahorn",120,85,2,2,0,"Singular target",0,"",2,2,0,0]
PKMNACTION[225]=["DragonBreath",60,100,1,4,0,"Singular target",0,"Roll 1-10. If 1,2,3: Target: PRZ.",2,2,10,0]
PKMNACTION[226]=["Baton Pass",0,0,3,13,6,"User",0,"Replaces user's Pok√©mon with a different non-active Pok√©mon in user's party of user's choice. Incoming Pok√©mon inherits stat changes, confusion, Aqua Ring, Block, Mean Look, Spider Web, Curse, Focus Energy, Gastro Acid, Ingain, Leech Seed, Lock-On, Mind Reader, Magnet Rise, Perish Song's counter, Power Trick, Substitute (with same HP) from predecessor. Pok√©mon switching in does not activate effects related to switching in (Spikes, Stealth Rock).",2,2,0,0]
PKMNACTION[227]=["Encore",0,100,3,13,10,"Singular target",0,"Target must use the action used after this move for the next 3 actions. Target can switch out to cancel effect.",2,2,4,0]
PKMNACTION[228]=["Pursuit",40,100,2,3,0,"Singular target",0,"If target is about to switch, this action's BP is 80 and strikes directly before the target's Pok√©mon is switched. This action's priority becomes 7 if the above condition is met.",2,2,0,0]
PKMNACTION[229]=["Rapid Spin",20,100,2,13,0,"Singular target",0,"User: If this action deals damage, Leech Seed, Bind, Fire Spin, Clamp, Magma Storm, Sand Tomb, Whirlpool, Wrap, Spikes, Stealth Rock and Toxic Spikes are immediately cancelled out and removed.",2,2,0,0]
PKMNACTION[230]=["Sweet Scent",0,100,3,13,2,"All opposing Pok√©mon",0,"Target: -1 EVA",2,2,0,0]
PKMNACTION[231]=["Iron Tail",100,75,2,17,0,"Singular target",0,"Roll 1-10. If 1,2,3: Target: -1 DEF.",2,2,10,0]
PKMNACTION[232]=["Metal Claw",50,95,2,17,0,"Singular target",0,"Roll 1-10. If 1: User: +1 ATK.",2,2,10,0]
PKMNACTION[233]=["Vital Throw",70,0,2,6,0,"Singular target",-1,"Regardless of accuracy roll, this action will hit target. Priority is -1.",2,2,0,0]
PKMNACTION[234]=["Morning Sun",0,0,3,13,10,"User",0,"User: +35 HP during Sunny Day; otherwise, +10 HP during Rain Dance, Hail, fog, or Sandstorm; otherwise, +20 HP.",2,2,0,0]
PKMNACTION[235]=["Synthesis",0,0,3,10,10,"User",0,"User: +35 HP during Sunny Day; otherwise, +10 HP during Rain Dance, Hail, fog, or Sandstorm; otherwise, +20 HP.",2,2,0,0]
PKMNACTION[236]=["Moonlight",0,0,3,13,10,"User",0,"User: +35 HP during Sunny Day; otherwise, +10 HP during Rain Dance, Hail, fog, or Sandstorm; otherwise, +20 HP.",2,2,0,0]
PKMNACTION[237]=["Hidden Power",60,100,1,13,0,"Singular target",0,"",2,2,0,0]
PKMNACTION[238]=["Cross Chop",90,80,2,6,0,"Singular target",0,"This attack has a high critical hit ratio.",1,2,0,0]
PKMNACTION[239]=["Twister",40,100,1,4,0,"All opposing Pok√©mon",0,"Roll 1-10. If 1,2: Target will flinch next action. If the target is airbourne when this action is successfully used, multiply this action's damage by 2.",2,2,10,0]
PKMNACTION[240]=["Rain Dance",0,0,3,18,7,"Entire field",0,"Applies Rain for current round and following round.",2,2,0,0]
PKMNACTION[241]=["Sunny Day",0,0,3,7,7,"Entire field",0,"Weather. Lasts for two rounds including the current round. BP of all Fire type actions is multiplied by 1.5 BP of all Water type actions is multiplied by .5 Pok√©mon can not be frozen.",2,2,0,0]
PKMNACTION[242]=["Crunch",80,100,2,3,0,"Singular target",0,"Roll 1-5. If 1: Target: -1 DEF.",2,2,5,0]
PKMNACTION[243]=["Mirror Coat",1,100,1,15,"damage dealt to target / 3","see description",-5,"The last Pok√©mon to deal special damage to this Pok√©mon during this round is dealt damage equal to 2 times damage dealt by target to user. Can not be used in the same conditional as Counter or Metal Burst.",2,2,0,0]
PKMNACTION[244]=["Psych Up",0,0,3,13,"1 per every level modification and 1 per stat changed","Singular target",0,"User: Copies all stat changes of target.",2,2,0,0]
PKMNACTION[245]=["ExtremeSpeed",80,100,2,13,0,"Singular target",2,"",2,2,0,0]
PKMNACTION[246]=["AncientPower",60,100,1,16,0,"Singular target",0,"Roll 1-10. If 1: User: +1 ATK, +1 DEF, +1 SPD, +1 SPATK, +1 SPDEF.",2,2,10,0]
PKMNACTION[247]=["Shadow Ball",80,100,1,9,0,"Singular target",0,"Roll 1-5. If 1: Target: -1 SPDEF.",2,2,5,0]
PKMNACTION[248]=["Future Sight",120,100,1,15,0,"Singular target",0,"User designates target. Damage is calculated normally, the type of this action is typeless and this action is never critical. Damage is not applied until after the end of the next round. Damage does not change from original calculation.",2,2,0,0]
PKMNACTION[249]=["Rock Smash",40,100,2,6,0,"Singular target",0,"Roll 1-2. If 1: Target: -1 DEF.",2,2,2,0]
PKMNACTION[250]=["Whirlpool",35,85,1,18,0,"Singular target",0,"Roll: 1-8. 1: hits five rounds | 2: four rounds | 3,4,5: three rounds | 6+: two rounds. At the end of every round, target loses 6 HP. Target can not leave the field through switching or fleeing while the user and target are both still on the field. This effect does not apply to Ghost-type Pokemon. If the target is completely underwater when this action is successfully used, multiply this action's damage by 2.",2,2,8,0]
PKMNACTION[251]=["Beat Up",1,100,2,3,0,"Singular target",0,"BP = combined EXP levels of user's healthy (not fainted/status aliments) party members that have been used in THIS battle.",2,2,0,0]
PKMNACTION[252]=["Fake Out",40,100,2,13,0,"Singular target",3,"Target will flinch next action. Fails if: this action is not the first action since the user beame active.",2,2,0,0]
PKMNACTION[253]=["Uproar",90,100,1,13,0,"Random Opponent",0,"Roll 1-5. User must use Uproar for the next X actions. No Pok√©mon can sleep at all during this time.",2,2,5,0]
PKMNACTION[254]=["Stockpile",0,0,3,13,5,"User",0,"Increases user's Stockpile count by 1, and increases user's Defense and Special Defense by 1 stage. Fails if user's Stockpile count is 3 or greater. The Stockpile count is reset when user is replaced.",2,2,0,0]
PKMNACTION[255]=["Spit Up",1,100,1,13,0,"Singular target",0,"This action's BP is equal to 33 times the user's Stockpile count. Even if this action misses or becomes ineffective, resets user's Stockpile count to 0 and decreases user's Defense and Special Defense by the amount the user gained with Stockpile. (That amount is also reset to 0.)",2,2,0,"SU"]
PKMNACTION[256]=["Swallow",0,0,3,13,4,"User",0,"User:HP according to the user's Stockpile count: 10 HP if it's 1; 30 HP if it's 2; and 50 HP if it's 3. Even if user's HP is full, resets user's Stockpile count to 0 and decreases user's Defense and Special Defense by the amount the user gained with Stockpile. (That amount is also reset to 0.)",2,2,0,0]
PKMNACTION[257]=["Heat Wave",95,90,1,7,0,"All opposing Pok√©mon",0,"Roll 1-10. If 1: Target: BRN.",2,2,10,0]
PKMNACTION[258]=["Hail",0,0,3,12,7,"Entire field",0,"Applies Hail for current round and following round.",2,2,0,0]
PKMNACTION[259]=["Torment",0,100,3,3,8,"Singular target",0,"During effect, target's attempts to perform actions consecutively will fail. Effect ends when target is switched.",2,2,0,0]
PKMNACTION[260]=["Flatter",0,100,3,3,5,"Singular target",0,"Target: +2 SPATK, CFS.",2,2,0,0]
PKMNACTION[261]=["Will-O-Wisp",0,85,3,7,3,"Singular target",0,"Target: BRN.",2,2,0,0]
PKMNACTION[262]=["Memento",0,100,3,3,0,"Singular target",0,"User: Faints. Target: -2 ATK, -2 SPATK. Fails if there is no target (doesn't cause fainting).",2,2,0,0]
PKMNACTION[263]=["Facade",70,100,2,13,0,"Singular target",0,"If user is: PSN, TXC, BRN, or PRZ, this attack's damage is multiplied by 2.",2,2,0,0]
PKMNACTION[264]=["Focus Punch",150,100,2,6,0,"Singular target",-3,"Fails if: user lost HP due to a damaging action by a non-user this round.",2,2,0,0]
PKMNACTION[265]=["SmellingSalt",70,100,2,13,0,"Singular target",0,"If target: PRZ, this attack's damage is multiplied by 2 and target is no longer PRZ.",2,2,0,0]
PKMNACTION[266]=["Follow Me",0,0,3,13,4,"User",3,"User is now the target of all actions for this round and the next round.",2,2,0,0]
PKMNACTION[267]=["Nature Power",0,0,3,13,"see: move used","Varies",0,"In tall grass, very tall grass, or puddles, uses Seed Bomb. In caves or on rocky ground, uses Rock Slide. On snow, uses Blizzard. On sand or other outdoor ground, uses Earthquake. On water, uses Hydro Pump. On ice, uses Ice Beam. Elsewhere, uses Tri Attack.",2,2,0,0]
PKMNACTION[268]=["Charge",0,0,3,5,7,"User",0,"User: +1 SPDEF. Until the end of the next round and until user is replaced, BP of Electric-type moves the user uses is doubled. User can use this action during effect.",2,2,0,0]
PKMNACTION[269]=["Taunt",0,100,3,3,6,"Singular target",0,"For 3 actions, including the current action, attempts by target to perform actions that do not deal damage will fail. Effect ends when target is replaced.",2,2,3,0]
PKMNACTION[270]=["Helping Hand",0,0,3,13,5,"Ally",5,"Next Action: Ally's moves damage will be multiplied by 1.5.",2,2,0,0]
PKMNACTION[271]=["Trick",0,100,3,15,"1 per every level modification and 1 per stat changed","Singular target",0,"For an opponent's stat modification, roll from 1-7.  1 represents the stat ATK, 2 represents the stat DEF, 3 represents the stat SPATK, 4 represents the stat SPDEF, 5 represents the stat SPD, 6 represents the stat ACC, and 7 represents the stat EVA.  Move the stat modification to the rolled stat.  Repeat this process for every stat modification.  Stats can land back on the original, and if more than one stat lands on a new one, they combine.",2,2,0,0]
PKMNACTION[272]=["Role Play",0,0,3,15,8,"Singular target",0,"User: Copies target's ability. Fails if target's ability is Multitype.",2,2,0,0]
PKMNACTION[273]=["Wish",0,0,3,13,15,"User",0,"End of Next Round: Individual in user's place: +15 HP.",2,2,0,0]
PKMNACTION[274]=["Assist",0,0,3,13,0,"User",0,"Uses a random move from a random Pok√©mon in user's party, other than the user and eggs. Does not use the following moves: Metronome, Struggle, Sketch, Mimic, Chatter, Sleep Talk, Assist, Mirror Move, Counter, Mirror Coat, Protect, Detect, Endure, Destiny Bond, Thief, Follow Me, Snatch, Helping Hand, Covet, Trick, Focus Punch, Feint, Copycat, Me First, or Switcheroo. Energy is used equal to the energy required for action to normally occur.",2,2,0,0]
PKMNACTION[275]=["Ingrain",0,0,3,10,7,"User",0,"During effect, user's attempts to swtich, flee, or perform actions that require movement will fail. User: +6 HP at the end of every round. If user's Ability is Levitate, its effects no longer apply. If user's type includes Flying, that type is removed. Pok√©mon with Flying as their only type will become Normal type.",2,2,0,0]
PKMNACTION[276]=["Superpower",120,100,2,6,0,"Singular target",0,"User: -1 ATK, -1 DEF.",2,2,0,0]
PKMNACTION[277]=["Magic Coat",0,0,3,15,"Equal to energy of move reflected","User",4,"If user is the target of one of inflictions of status ailments of any kind, stat changes, or trapping effects by non-users, instead user uses that action against that non-user (includes Attract, Flatter, Gastro Acid, Leech Seed, Swagger, Worry Seed, and Yawn). Effect ends at the end of the round.",2,2,0,0]
PKMNACTION[278]=["Recycle",0,0,3,13,0,"User",0,"This attack will always fail and has no effect.",2,2,0,0]
PKMNACTION[279]=["Revenge",60,100,2,6,0,"Singular target",-4,"If user was damaged by target last action, BP is 120.",2,2,0,0]
PKMNACTION[280]=["Brick Break",75,100,2,6,0,"Singular target",0,"Unless this action misses, this action ends the effects of Reflect and Light Screen on the target's side before dealing damage.",2,2,0,0]
PKMNACTION[281]=["Yawn",0,0,3,13,2,"Singular target",0,"Target: SLP in two actions, provided it is still active.",2,2,0,0]
PKMNACTION[282]=["Knock Off",65,100,2,3,0,"Singular target",0,"",2,2,0,0]
PKMNACTION[283]=["Endeavor",1,100,2,13,10,"Singular target",0,"If target has greater HP than user, target's HP is reduced until it equals user's HP./td>",2,2,0,0]
PKMNACTION[284]=["Eruption",150,100,1,7,0,"All opposing Pok√©mon",0,"Damage dealt by this attack is multiplied by (User's HP/100).",2,2,0,0]
PKMNACTION[285]=["Skill Swap",0,0,3,15,7,"Singular target",0,"Simultaneously, user adopts target's ability, and target adopts user's ability. Fails if either or both abilities are Multitype or if neither have an ability.",2,2,0,0]
PKMNACTION[286]=["Imprison",0,0,3,15,10,"User",0,"User: declares the names of three actions that user can use.Target: Party cannot use these three actions, and any and all attempts will fail. Effect ends when user leaves the field.",2,2,0,0]
PKMNACTION[287]=["Refresh",0,0,3,13,8,"User",0,"User is no longer BRN, PSN or PRZ.",2,2,0,0]
PKMNACTION[288]=["Grudge",0,0,3,9,15,"User",0,"Until the end of the round, if an action by non-users would reduce user's HP to zero, the responsible Pok√©mon will lose 20 Energy.",2,2,0,0]
PKMNACTION[289]=["Snatch",0,0,3,3,"Equal to energy of move stolen as if user had used the move","User",4,"During the next action, if the target uses a Snatchable move (veekun.com/dex/moves/search?flag_snatch=yes), user steals the move for itself.",2,2,0,0]
PKMNACTION[290]=["Secret Power",70,100,2,13,0,"Singular target",0,"Roll 1-10. If 1,2,3: In tall grass, very tall grass, or puddles, Target: SLP. In caves or on rocky ground, target will flinch during next action. On snow and ice, Target: FRZ. On sand and other outdoor ground, Target: -1 ACC. On mud, Target: -1 SPD. On water, Target: -1 ATK. Elsewhere, Target: PRZ.",2,2,10,0]
PKMNACTION[291]=["Dive",80,100,2,18,0,"Singular target",0,"",2,2,0,0]
PKMNACTION[292]=["Arm Thrust",15,100,2,6,3,"Singular target",0,"Roll: 1-8. 1: hits five times | 2: four times | 3,4,5: three times | 6+: two times",2,2,8,0]
PKMNACTION[293]=["Camouflage",0,0,3,13,8,"User",0,"On and under water, user's type becomes Water. In caves and on rocky ground, user's type becomes Rock. On tall grass, very tall grass, and puddles, user's type becomes Grass. On sand, mud, and other outdoor ground, user's type becomes Ground. On snow and ice, user's type becomes Ice. Elsewhere, user's type becomes Normal. Fails if user has Multitype or if determined type is the same as one of the user's types.",2,2,0,0]
PKMNACTION[294]=["Tail Glow",0,0,3,2,4,"User",0,"User: +3 SPATK",2,2,0,0]
PKMNACTION[295]=["Luster Purge",70,100,1,15,0,"Singular target",0,"Roll 1-2. If 1: Target: -1 SPDEF",2,2,2,0]
PKMNACTION[296]=["Mist Ball",70,100,1,15,0,"Singular target",0,"Roll 1-2. If 1: Target: -1 SPATK.",2,2,2,0]
PKMNACTION[297]=["FeatherDance",0,100,3,8,3,"Singular target",0,"Target: -2 ATK",2,2,0,0]
PKMNACTION[298]=["Teeter Dance",0,100,3,13,5,"All Pok√©mon in Battle except User",0,"Target: CFS",2,2,0,0]
PKMNACTION[299]=["Blaze Kick",85,90,2,7,0,"Singular target",0,"This attack has a high critical hit ratio., Roll 1-10. 1: BRN",1,2,10,0]
PKMNACTION[300]=["Mud Sport",0,0,3,11,3,"Entire field",0,"Applies Mud Sport to target's party.",2,2,0,0]
PKMNACTION[301]=["Ice Ball",30,90,2,12,0,"Singular target",0,"User uses this action for four actions in a row, including this one. This effect ends if the action misses or fails. BP gains 10 every consecutive time (within the streak of five) the action is succesful.",2,2,0,0]
PKMNACTION[302]=["Needle Arm",60,100,2,10,0,"Singular target",0,"Roll 1-10. If 1,2,3: Target will flinch next action.",2,2,10,0]
PKMNACTION[303]=["Slack Off",0,0,3,13,10,"User",0,"User: +20 HP",2,2,0,0]
PKMNACTION[304]=["Hyper Voice",90,100,1,13,0,"All opposing Pok√©mon",0,"",2,2,0,0]
PKMNACTION[305]=["Poison Fang",50,100,2,14,0,"Singular target",0,"Roll 1-10. If 1,2,3: Target: TXC.",2,2,10,0]
PKMNACTION[306]=["Crush Claw",75,95,2,13,0,"Singular target",0,"Roll 1-2. If 1: Target: -1 DEF.",2,2,2,0]
PKMNACTION[307]=["Blast Burn",150,90,1,7,0,"Singular target",0,"User: The energy used for the next action will be multiplied by 2.",2,2,0,0]
PKMNACTION[308]=["Hydro Cannon",150,90,1,18,0,"Singular target",0,"User: The energy used for the next action will be multiplied by 2.",2,2,0,0]
PKMNACTION[309]=["Meteor Mash",90,90,2,17,0,"Singular target",0,"Roll 1-5. If 1: User: +1 ATK.",2,2,5,0]
PKMNACTION[310]=["Astonish",30,100,2,9,0,"Singular target",0,"Roll 1-10. If 1,2,3: Target will flinch next action.",2,2,10,0]
PKMNACTION[311]=["Weather Ball",50,100,1,13,0,"Singular target",0,"If weather is sunny, this attack's type is Fire, and damage dealt by this attack is multiplied by 2. If weather is rainy, this attack's type is Water, and damage dealt by this attack is multiplied by 2. If weather is hailing, this attack's type is Ice, and damage dealt by this attack is multiplied by 2. If weather is a sandstorm, this attack's type is Rock, and damage dealt by this attack is multiplied by 2. If weather is foggy this attack's type is Normal, and damage dealt by this attack is multiplied by 2.",2,2,0,0]
PKMNACTION[312]=["Aromatherapy",0,0,3,10,7,"Users's Field",0,"Each Pok√©mon in user's party is cured of its status problem.",2,2,0,0]
PKMNACTION[313]=["Fake Tears",0,100,3,3,3,"Singular target",0,"Target: -2 SPDEF",2,2,0,0]
PKMNACTION[314]=["Air Cutter",60,95,1,8,0,"All opposing Pok√©mon",0,"This attack has a high critical hit ratio.",1,2,0,0]
PKMNACTION[315]=["Overheat",130,90,1,7,0,"Singular target",0,"User: -2 SPATK",2,2,0,0]
PKMNACTION[316]=["Odor Sleuth",0,0,3,13,4,"Singular target",0,"Target: EVA is now reset to +/- 0. Double Team clones disappear. If target is ethereal, it is now solid. Normal and Fighting-type actions now deal normal effectiveness if target is Ghost-type. Effect lasts for 4 actions.",2,2,0,0]
PKMNACTION[317]=["Rock Tomb",60,95,2,16,0,"Singular target",0,"Target: -1 SPD",2,2,0,0]
PKMNACTION[318]=["Silver Wind",60,100,1,2,0,"Singular target",0,"Roll 1-10. If 1: User: +1 ATK, +1 DEF, +1 SPD, +1 SPATK, +1 SPDEF.",2,2,10,0]
PKMNACTION[319]=["Metal Sound",0,85,3,17,3,"Singular target",0,"Target: -2 SPDEF",2,2,0,0]
PKMNACTION[320]=["GrassWhistle",0,55,3,10,3,"Singular target",0,"Target: SLP.",2,2,0,0]
PKMNACTION[321]=["Tickle",0,100,3,13,4,"Singular target",0,"Target: -1 ATK, -1 DEF",2,2,0,0]
PKMNACTION[322]=["Cosmic Power",0,0,3,15,4,"User",0,"User: +1 DEF, +1 SPDEF.",2,2,0,0]
PKMNACTION[323]=["Water Spout",150,100,1,18,0,"All opposing Pok√©mon",0,"Damage dealt by this attack is multiplied by (User's HP/100).",2,2,0,0]
PKMNACTION[324]=["Signal Beam",75,100,1,2,0,"Singular target",0,"Roll 1-10. If 1: Target: CFS.",2,2,10,0]
PKMNACTION[325]=["Shadow Punch",60,0,2,9,0,"Singular target",0,"Regardless of accuracy roll, this action will hit target.",2,2,0,0]
PKMNACTION[326]=["Extrasensory",80,100,1,15,0,"Singular target",0,"Roll 1-10. If 1: Target will flinch next action.",2,2,10,0]
PKMNACTION[327]=["Sky Uppercut",85,90,2,6,0,"Singular target",0,"Can hit airborne targets.",2,2,0,0]
PKMNACTION[328]=["Sand Tomb",35,85,2,11,0,"Singular target",0,"Roll: 1-8. 1: hits five rounds | 2: four rounds | 3,4,5: three rounds | 6+: two rounds. At the end of every round, target loses 6 HP. Target can not leave the field through switching or fleeing while the user and target are both still on the field. This effect does not apply to Ghost-type Pokemon.",2,2,8,0]
PKMNACTION[329]=["Sheer Cold",1,30,1,12,25,"Singular target",0,"Target: -999 HP. Fails if: User's EXP < 7.",2,2,0,0]
PKMNACTION[330]=["Muddy Water",90,85,1,18,0,"All opposing Pok√©mon",0,"Roll 1-10. If 1,2,3: Target: -1 ACC.",2,2,10,0]
PKMNACTION[331]=["Bullet Seed",25,100,2,10,3,"Singular target",0,"Roll: 1-8. 1: hits five times | 2: four times | 3,4,5: three times | 6+: two times",2,2,8,0]
PKMNACTION[332]=["Aerial Ace",60,0,2,8,0,"Singular target",0,"Regardless of accuracy roll, this action will hit target.",2,2,0,0]
PKMNACTION[333]=["Icicle Spear",25,100,2,12,3,"Singular target",0,"Roll: 1-8. 1: hits five times | 2: four times | 3,4,5: three times | 6+: two times",2,2,8,0]
PKMNACTION[334]=["Iron Defense",0,0,3,17,3,"User",0,"User: +2 DEF",2,2,0,0]
PKMNACTION[335]=["Block",0,0,3,13,5,"Singular target",0,"This Pokemon can not leave the field through switching or fleeing while the user and target are both still on the field. This effect does not apply to Ghost-type Pokemon.",2,2,0,0]
PKMNACTION[336]=["Howl",0,0,3,13,2,"User",0,"User: +1 ATK",2,2,0,0]
PKMNACTION[337]=["Dragon Claw",80,100,2,4,0,"Singular target",0,"",2,2,0,0]
PKMNACTION[338]=["Frenzy Plant",150,90,1,10,0,"Singular target",0,"User: The energy used for the next action will be multiplied by 2.",2,2,0,0]
PKMNACTION[339]=["Bulk Up",0,0,3,6,4,"User",0,"User: +1 ATK, +1 DEF.",2,2,0,0]
PKMNACTION[340]=["Bounce",85,85,2,8,0,"Singular target",0,"Roll 1-10. If 1,2,3: Target: PRZ.",2,2,10,0]
PKMNACTION[341]=["Mud Shot",55,95,1,11,0,"Singular target",0,"Target: -1 SPD",2,2,0,0]
PKMNACTION[342]=["Poison Tail",50,100,2,14,0,"Singular target",0,"This attack has a high critical hit ratio., Roll 1-10. 1: Target: PSN",1,2,10,0]
PKMNACTION[343]=["Covet",60,100,2,13,0,"Singular target",0,"",2,2,0,0]
PKMNACTION[344]=["Volt Tackle",120,100,2,5,0,"Singular target",0,"Roll 1-10. If 1: Target: PRZ. User: -X HP, where X is the damage dealt by this action multiplied by .33. This is recoil damage.",2,2,10,0]
PKMNACTION[345]=["Magical Leaf",60,0,1,10,0,"Singular target",0,"Regardless of accuracy roll, this action will hit target.",2,2,0,0]
PKMNACTION[346]=["Water Sport",0,0,3,18,3,"Entire field",0,"Applies Water Sport to target's party.",2,2,0,0]
PKMNACTION[347]=["Calm Mind",0,0,3,15,4,"User",0,"+1 SPATK, +1 SPDEF. User is no longer CFS, infatuated, or under the effect of Torment and/or Taunt.",2,2,0,0]
PKMNACTION[348]=["Leaf Blade",90,100,2,10,0,"Singular target",0,"This attack has a high critical hit ratio.",1,2,0,0]
PKMNACTION[349]=["Dragon Dance",0,0,3,4,4,"User",0,"+1 ATK, +1 SPD.",2,2,0,0]
PKMNACTION[350]=["Rock Blast",25,90,2,16,3,"Singular target",0,"Roll: 1-8. 1: hits five times | 2: four times | 3,4,5: three times | 6+: two times",2,2,8,0]
PKMNACTION[351]=["Shock Wave",60,0,1,5,0,"Singular target",0,"Regardless of accuracy roll, this action will hit target.",2,2,0,0]
PKMNACTION[352]=["Water Pulse",60,100,1,18,0,"Singular target",0,"Roll 1-10. If 1,2: Target: CFS.",2,2,10,0]
PKMNACTION[353]=["Doom Desire",140,100,1,17,0,"Singular target",0,"User designates target. Damage is calculated normally, but the type of this action is typeless and this action is never critical. Damage is not applied until after the end of the next round. Damage does not change from original calculation.",2,2,0,0]
PKMNACTION[354]=["Psycho Boost",140,90,1,15,0,"Singular target",0,"User: -2 SPATK",2,2,0,0]
PKMNACTION[355]=["Roost",0,0,3,8,8,"User",0,"+20 HP. If User:HP this way, until the end of the round, user is no longer airborne and loses its Flying-type. If user's only type is Flying, user becomes Normal-type.",2,2,0,0]
PKMNACTION[356]=["Gravity",0,0,3,15,7,"Entire field",0,"Applies Gravity for current round and following round.",2,2,0,0]
PKMNACTION[357]=["Miracle Eye",0,0,3,15,7,"Singular target",0,"Target: EVA is now reset to +/- 0. Double Team clones disappear. Psychic-type actions now deal normal effectiveness if target is Dark-type. Effect lasts for 4 actions.",2,2,0,0]
PKMNACTION[358]=["Wake-Up Slap",70,100,2,6,0,"Singular target",0,"If target is SLP, damage dealt by this action is doubled and target is no longer SLP.",2,2,0,0]
PKMNACTION[359]=["Hammer Arm",100,90,2,6,0,"Singular target",0,"User: -1 SPD.",2,2,0,0]
PKMNACTION[360]=["Gyro Ball",1,100,2,17,0,"Singular target",0,"This action's BP is equal to 1 + (25 * target's SPD / user's SPD).",2,2,0,"GB"]
PKMNACTION[361]=["Healing Wish",0,0,3,15,0,"User",0,"User: Faints. When a Pok√©mon at user's position becomes active during this round, it recovers all HP and is cured of all status problems. (New Pok√©mon become active immediately during this turn.) Fails if user's party has no non-active Pok√©mon (doesn't cause fainting).",2,2,0,0]
PKMNACTION[362]=["Brine",65,100,1,18,0,"Singular target",0,"If target's HP is 50 or lower, this attack's damage is multiplied by 2.",2,2,0,0]
PKMNACTION[363]=["Natural Gift",1,100,2,13,0,"Singular target",0,"This attack's BP and type is dependant on the berry held.  The berry will be used up by the attack but the user will not gain any of the berry's effects.  This does not trigger the use of Belch.",2,2,0,0]
PKMNACTION[364]=["Feint",30,100,2,13,0,"Singular target",2,"This attack ignores the effects of Protect and/or Detect.  Feint will also lift the effects of Protect, Detect, Quick Guard, and Wide Guard.",2,2,0,0]
PKMNACTION[365]=["Pluck",60,100,2,8,0,"Singular target",0,"If the opponent is holding a berry, that berry will be consumed and the user will gain its effects.",2,2,0,0]
PKMNACTION[366]=["Tailwind",0,0,3,8,4,"Users's Field",0,"For three rounds, including the current round, all Pok√©mon on the user's side gain +3 SPD. During effect, this action fails for user's party.",2,2,0,0]
PKMNACTION[367]=["Acupressure",0,0,3,13,3,"User or Ally",0,"Roll 1-7. If 1, Target: +2 ATK. 2: +2 DEF, 3: +2 SPD,4: +2 SPATK,5: +2 SPDEF,6: +2 ACC,7: +2 EVA",2,2,8,0]
PKMNACTION[368]=["Metal Burst",1,100,2,17,"damage dealt to target / 3","see description",0,"The last Pok√©mon to deal damage to this Pok√©mon during this round is dealt damage equal to 1.5 times damage dealt by target to user. Can not be used in the same conditional as Mirror Coat or Counter.",2,2,0,0]
PKMNACTION[369]=["U-turn",70,100,2,2,0,"Singular target",0,"Damage is dealt, then user switches places with a party member, provided user has at least 1 HP after action.",2,2,0,0]
PKMNACTION[370]=["Close Combat",120,100,2,6,0,"Singular target",0,"User: -1 DEF, -1 SPDEF.",2,2,0,0]
PKMNACTION[371]=["Payback",50,100,2,3,0,"Singular target",0,"BP is 100 if user strikes last this round, or if target switched this round.",2,2,0,0]
PKMNACTION[372]=["Assurance",60,100,2,3,0,"Singular target",0,"BP is 100 if target lost HP this round.",2,2,0,0]
PKMNACTION[373]=["Embargo",0,100,3,3,8,"Singular target",0,"Target: This Pokemon is now under the field effect of Magic Room during its next two actions.",2,2,0,0]
PKMNACTION[374]=["Fling",1,100,2,3,0,"Singular target",0,"Only consumable items may be thrown.  Berries give this move a BP of 10, while Potions give is a BP of 30.  The effects of the items will trigger on the opponent.  This move will fail if the user is not holding an item, and using a berry in this way will not trigger Belch.",2,2,0,0]
PKMNACTION[375]=["Psycho Shift",0,100,3,15,6,"Singular target",0,"Target gains user's status problem. If target gains a status problem this way, user is cured of its status problem.",2,2,0,0]
PKMNACTION[376]=["Trump Card",1,0,1,13,0,"Singular target",0,"BP = 100 - User's Energy level.",2,2,0,"TC"]
PKMNACTION[377]=["Heal Block",0,100,3,15,5,"All opposing Pok√©mon",0,"Effect lasts for two rounds, including the current round. During effect, attempts by target to use Heal Order, Milk Drink, Moonlight, Morning Sun, Recover, Rest, Roost, Slack Off, Softboiled, Swallow, Synthesis, and Wish will fail. During effect, if a move or an effect of a move (other than Pain Split) would cause the target to gain HP, it gains no HP instead. (Liquid Ooze still works.) Effect ends when target is switched.",2,2,0,0]
PKMNACTION[378]=["Wring Out",1,100,1,13,0,"Singular target",0,"This action's BP is equal to 1 + (110 * target's HP / 100).",2,2,0,"CG"]
PKMNACTION[379]=["Power Trick",0,0,3,15,6,"User",0,"Switches user's Attack and Defense stats. If user is replaced with Baton Pass and user used this action an odd number of times since it became active, the new Pokemon's Attack and Defense stats are switched.",2,2,0,0]
PKMNACTION[380]=["Gastro Acid",0,100,3,14,7,"Singular target",0,"During effect, effects due to target's ability are not applied. Effect ends when target is switched. Fails if target's ability is Multitype.",2,2,0,0]
PKMNACTION[381]=["Lucky Chant",0,0,3,13,7,"Users's Field",0,"For two rounds, including the current round, no actions against any active Pok√©mon on the user's side can be critical hits. During effect, this action fails for user's party.",2,2,0,0]
PKMNACTION[382]=["Me First",1,0,3,13,0,"Singular target",0,"If user strikes before target this round, then the action planned to use next action by target will also be user by the user. Damage dealt by user will be multiplied by 1.5.",2,2,0,0]
PKMNACTION[383]=["Copycat",0,0,3,13,0,"User",0,"User: Uses the same action target used during their last action. Energy is used equal to the energy required for action to normally occur.",2,2,0,0]
PKMNACTION[384]=["Power Swap",0,0,3,15,6,"Singular target",0,"Simultaneously, user adopts target's current Attack and Special Attack stat stages, and target adopts user's current Attack and Special Attack stat stages.",2,2,0,0]
PKMNACTION[385]=["Guard Swap",0,0,3,15,6,"Singular target",0,"Simultaneously, user adopts target's current Defense and Special Defense stat stages, and target adopts user's current Defense and Special Defense stat stages.",2,2,0,0]
PKMNACTION[386]=["Punishment",1,100,2,3,0,"Singular target",0,"This action's BP is equal to 60+(20*X), where X is the total of all of target's current stat stages that are greater than 0. Maximum 200.",2,2,0,"PU"]
PKMNACTION[387]=["Last Resort",140,100,2,13,0,"Singular target",0,"Fails unless user has less than 10 HP AND 10 Energy remaining. Can only be used once per time user became active.",2,2,0,0]
PKMNACTION[388]=["Worry Seed",0,100,3,10,8,"Singular target",0,"Changes target's ability to Insomnia. Fails if target's ability is Multitype or Truant.",2,2,0,0]
PKMNACTION[389]=["Sucker Punch",80,100,2,3,0,"Singular target",1,"Fails if: target did not choose a damaging move for use this round, or if target struck before the user this round.",2,2,0,0]
PKMNACTION[390]=["Toxic Spikes",0,0,3,14,3,"Opponent's Field",0,"Applies Toxic Spikes to target's party.",2,2,0,0]
PKMNACTION[391]=["Heart Swap",0,0,3,15,6,"Singular target",0,"Simultaneously, user adopts target's current stat stages, and target adopts user's current stat stages.",2,2,0,0]
PKMNACTION[392]=["Aqua Ring",0,0,3,18,6,"User",0,"During effect, User: +6 HP at the end of every round. Effect ends when user is switched.",2,2,0,0]
PKMNACTION[393]=["Magnet Rise",0,0,3,5,6,"User",0,"For two rounds, including the current round, user is immune to Ground-type actions (overridden by Ingrain's effect), and user is unaffected by Spikes and Toxic Spikes (not overridden by Ingrain's effect), and user can switch and flee despite Arena Trap, as though it had Levitate (even if effects due to the user's ability are not applied). Effect ends when user is switched. Fails if Ingrain is in effect for the user. Fails if user has Levitate.",2,2,0,0]
PKMNACTION[394]=["Flare Blitz",120,100,2,7,0,"Singular target",0,"Roll 1-10. If 1: Target: BRN. If user is frozen and it chose this move for use, it becomes defrosted before this action is used. User: -X HP, where X is the damage dealt by this action multiplied by .33. This is recoil damage.",2,2,10,0]
PKMNACTION[395]=["Force Palm",60,100,2,6,0,"Singular target",0,"Roll 1-10. If 1,2,3: Target: PRZ.",2,2,10,0]
PKMNACTION[396]=["Aura Sphere",80,0,1,6,0,"Singular target",0,"Regardless of accuracy roll, this action will hit target.",2,2,0,0]
PKMNACTION[397]=["Rock Polish",0,0,3,16,3,"User",0,"User: +2 SPD",2,2,0,0]
PKMNACTION[398]=["Poison Jab",80,100,2,14,0,"Singular target",0,"Roll 1-10. If 1,2,3: Target: PSN.",2,2,10,0]
PKMNACTION[399]=["Dark Pulse",80,100,1,3,0,"Singular target",0,"Roll 1-10. If 1,2: Target will flinch next action.",2,2,10,0]
PKMNACTION[400]=["Night Slash",70,100,2,3,0,"Singular target",0,"This attack has a high critical hit ratio.",1,2,0,0]
PKMNACTION[401]=["Aqua Tail",90,90,2,18,0,"Singular target",0,"",2,2,0,0]
PKMNACTION[402]=["Seed Bomb",80,100,2,10,0,"Singular target",0,"",2,2,0,0]
PKMNACTION[403]=["Air Slash",75,95,1,8,0,"Singular target",0,"Roll 1-10. If 1,2,3: Target will flinch next action.",2,2,10,0]
PKMNACTION[404]=["X-Scissor",80,100,2,2,0,"Singular target",0,"",2,2,0,0]
PKMNACTION[405]=["Bug Buzz",90,100,1,2,0,"Singular target",0,"Roll 1-10. If 1: Target: -1 SPDEF.",2,2,10,0]
PKMNACTION[406]=["Dragon Pulse",85,100,1,4,0,"Singular target",0,"",2,2,0,0]
PKMNACTION[407]=["Dragon Rush",100,75,2,4,0,"Singular target",0,"Roll 1-10. If 1,2: Target will flinch next action.",2,2,10,0]
PKMNACTION[408]=["Power Gem",80,100,1,16,0,"Singular target",0,"",2,2,0,0]
PKMNACTION[409]=["Drain Punch",75,100,2,6,0,"Singular target",0,"User: +X HP and +X Energy, where X is the damage dealt by this attack multiplied by .5.",2,2,0,0]
PKMNACTION[410]=["Vacuum Wave",40,100,1,6,0,"Singular target",1,"",2,2,0,0]
PKMNACTION[411]=["Focus Blast",120,70,1,6,0,"Singular target",0,"Roll 1-10. If 1: Target: -1 SPDEF.",2,2,10,0]
PKMNACTION[412]=["Energy Ball",90,100,1,10,0,"Singular target",0,"Roll 1-10. If 1: Target: -1 SPDEF.",2,2,10,0]
PKMNACTION[413]=["Brave Bird",120,100,2,8,0,"Singular target",0,"User: -X HP, where X is the damage dealt by this action multiplied by .33. This is recoil damage.",2,2,0,0]
PKMNACTION[414]=["Earth Power",90,100,1,11,0,"Singular target",0,"Roll 1-10. If 1: Target: -1 SPDEF.",2,2,10,0]
PKMNACTION[415]=["Switcheroo",0,100,3,3,0,"Singular target",0,"This attack will always fail and has no effect.",2,2,0,0]
PKMNACTION[416]=["Giga Impact",150,90,2,13,0,"Singular target",0,"User: The energy used for the next action will be multiplied by 2.",2,2,0,0]
PKMNACTION[417]=["Nasty Plot",0,0,3,3,3,"User",0,"User: +2 SPATK",2,2,0,0]
PKMNACTION[418]=["Bullet Punch",40,100,2,17,0,"Singular target",1,"",2,2,0,0]
PKMNACTION[419]=["Avalanche",60,100,2,12,0,"Singular target",-4,"If user was damaged by target last action, BP is 120.",2,2,0,0]
PKMNACTION[420]=["Ice Shard",40,100,2,12,0,"Singular target",1,"",2,2,0,0]
PKMNACTION[421]=["Shadow Claw",70,100,2,9,0,"Singular target",0,"This attack has a high critical hit ratio.",1,2,0,0]
PKMNACTION[422]=["Thunder Fang",65,95,2,5,0,"Singular target",0,"Roll 1-10. If 1: Target: PRZ. Roll 1-10 again. If 1: Target will flinch next action.",2,2,10,0]
PKMNACTION[423]=["Ice Fang",65,95,2,12,0,"Singular target",0,"Roll 1-10. If 1: Target: FRZ. Roll 1-10 again. If 1: Target will flinch next action.",2,2,10,0]
PKMNACTION[424]=["Fire Fang",65,95,2,7,0,"Singular target",0,"Roll 1-10. If 1: Target: BRN. Roll 1-10 again. If 1: Target will flinch next action. This action ignores Wonder Guard.",2,2,10,0]
PKMNACTION[425]=["Shadow Sneak",40,100,2,9,0,"Singular target",1,"",2,2,0,0]
PKMNACTION[426]=["Mud Bomb",65,85,1,11,0,"Singular target",0,"Roll 1-10. If 1,2,3: Target: -1 ACC.",2,2,10,0]
PKMNACTION[427]=["Psycho Cut",70,100,2,15,0,"Singular target",0,"This attack has a high critical hit ratio.",1,2,0,0]
PKMNACTION[428]=["Zen Headbutt",80,90,2,15,0,"Singular target",0,"Roll 1-10. If 1,2: Target will flinch next action.",2,2,10,0]
PKMNACTION[429]=["Mirror Shot",65,85,1,17,0,"Singular target",0,"Roll 1-10. If 1,2,3: Target: -1 ACC.",2,2,10,0]
PKMNACTION[430]=["Flash Cannon",80,100,1,17,0,"Singular target",0,"Roll 1-10. If 1: Target: -1 SPDEF.",2,2,10,0]
PKMNACTION[431]=["Rock Climb",90,85,2,13,0,"Singular target",0,"Roll 1-10. If 1,2: Target: CFS.",2,2,10,0]
PKMNACTION[432]=["Defog",0,0,3,8,2,"Opponent's Field",0,"Target: Ends Reflect, Light Screen, Safeguard, Mist, Spikes, Toxic Spikes, Stealth Rock and Sticky Web, and ends Fog on both sides of the field.",2,2,0,0]
PKMNACTION[433]=["Trick Room",0,0,3,15,7,"Entire field",-7,"Applies Trick Room for current round and following round.",2,2,0,0]
PKMNACTION[434]=["Draco Meteor",130,90,1,4,0,"Singular target",0,"User: -2 SPATK",2,2,0,0]
PKMNACTION[435]=["Discharge",80,100,1,5,0,"All Pok√©mon in Battle except User",0,"Roll 1-10. If 1,2,3: Target: PRZ.",2,2,10,0]
PKMNACTION[436]=["Lava Plume",80,100,1,7,0,"All Pok√©mon in Battle except User",0,"Roll 1-10. If 1,2,3: Target: BRN.",2,2,10,0]
PKMNACTION[437]=["Leaf Storm",130,90,1,10,0,"Singular target",0,"User: -2 SPATK",2,2,0,0]
PKMNACTION[438]=["Power Whip",120,85,2,10,0,"Singular target",0,"",2,2,0,0]
PKMNACTION[439]=["Rock Wrecker",150,90,2,16,0,"Singular target",0,"User: The energy used for the next action will be multiplied by 2.",2,2,0,0]
PKMNACTION[440]=["Cross Poison",70,100,2,14,0,"Singular target",0,"This attack has a high critical hit ratio., Roll 1-10. 1: Target: PSN",1,2,10,0]
PKMNACTION[441]=["Gunk Shot",120,80,2,14,0,"Singular target",0,"Roll 1-10. If 1,2,3: Target: PSN.",2,2,10,0]
PKMNACTION[442]=["Iron Head",80,100,2,17,0,"Singular target",0,"Roll 1-10. If 1,2,3: Target will flinch next action.",2,2,10,0]
PKMNACTION[443]=["Magnet Bomb",60,0,2,17,0,"Singular target",0,"Regardless of accuracy roll, this action will hit target.",2,2,0,0]
PKMNACTION[444]=["Stone Edge",100,80,2,16,0,"Singular target",0,"This attack has a high critical hit ratio.",1,2,0,0]
PKMNACTION[445]=["Captivate",0,100,3,13,3,"All opposing Pok√©mon",0,"Target: -2 SPATK. Fails if target and user share a gender or if target or user are genderless.",2,2,0,0]
PKMNACTION[446]=["Stealth Rock",0,0,3,16,4,"Opponent's Field",0,"Applies Stealth Rock to target's party.",2,2,0,0]
PKMNACTION[447]=["Grass Knot",1,100,1,10,0,"Singular target",0,"This action's BP is 20 if the weight of the target's original species is 10 kilograms (kg) or less [or less than 10 kg], else 40 if 25 kg or less, else 60 if 50 kg or less, else 80 if 100 kg or less, else 100 if 200 kg or less, else 120.",2,2,0,"LK"]
PKMNACTION[448]=["Chatter",65,100,1,8,0,"Singular target",0,"If user is Chatot, Target: CFS.",2,2,10,0]
PKMNACTION[449]=["Judgment",100,100,1,13,0,"Singular target",0,"User: This attack matches the user's type if the user's ability is Multitype.",2,2,0,0]
PKMNACTION[450]=["Bug Bite",60,100,2,2,0,"Singular target",0,"If the opponent is holding a berry, that berry will be consumed and the user will gain its effects.",2,2,0,0]
PKMNACTION[451]=["Charge Beam",50,90,1,5,0,"Singular target",0,"Roll 1-10. If 1,2,3,4,5,6,7: User: +1 SPATK.",2,2,10,0]
PKMNACTION[452]=["Wood Hammer",120,100,2,10,0,"Singular target",0,"User: -X HP, where X is the damage dealt by this action multiplied by .33. This is recoil damage.",2,2,0,0]
PKMNACTION[453]=["Aqua Jet",40,100,2,18,0,"Singular target",1,"",2,2,0,0]
PKMNACTION[454]=["Attack Order",90,100,2,2,0,"Singular target",0,"This attack has a high critical hit ratio.",1,2,0,0]
PKMNACTION[455]=["Defend Order",0,0,3,2,4,"User",0,"User: +1 DEF, +1 SPDEF.",2,2,0,0]
PKMNACTION[456]=["Heal Order",0,0,3,2,7,"User",0,"User: +20 HP",2,2,0,0]
PKMNACTION[457]=["Head Smash",150,80,2,16,0,"Singular target",0,"User: -X HP, where X is the damage dealt by this action multiplied by .25. This is recoil damage.",2,2,0,0]
PKMNACTION[458]=["Double Hit",35,90,2,13,0,"Singular target",0,"Hits twice. Each hit is calculated seperately.",2,2,0,0]
PKMNACTION[459]=["Roar of Time",150,90,1,4,0,"Singular target",0,"User: The energy used for the next action will be multiplied by 2.",2,2,0,0]
PKMNACTION[460]=["Spacial Rend",100,95,1,4,0,"Singular target",0,"This attack has a high critical hit ratio.",1,2,0,0]
PKMNACTION[461]=["Lunar Dance",0,0,3,15,0,"User",0,"User: Faints. When a Pok√©mon at user's position becomes active during this round, it recovers all HP and is cured of all status problems. (New Pok√©mon become active immediately during this turn.) Fails if user's party has no non-active Pok√©mon (doesn't cause fainting).",2,2,0,0]
PKMNACTION[462]=["Crush Grip",1,100,2,13,0,"Singular target",0,"This action's BP is equal to 1 + (110 * target's HP / 100).",2,2,0,"CG"]
PKMNACTION[463]=["Magma Storm",100,75,1,7,0,"Singular target",0,"Roll: 1-8. 1: hits five rounds | 2: four rounds | 3,4,5: three rounds | 6+: two rounds. At the end of every round, target loses 6 HP. Target can not leave the field through switching or fleeing while the user and target are both still on the field. This effect does not apply to Ghost-type Pokemon.",2,2,8,0]
PKMNACTION[464]=["Dark Void",0,80,3,3,7,"All opposing Pok√©mon",0,"Target: SLP.",2,2,0,0]
PKMNACTION[465]=["Seed Flare",120,85,1,10,0,"Singular target",0,"Roll 1-5. If 1,2: decrease target's SPDEF by 2 stages.",2,2,5,0]
PKMNACTION[466]=["Ominous Wind",60,100,1,9,0,"Singular target",0,"Roll 1-10. If 1: User: +1 ATK, +1 DEF, +1 SPD, +1 SPATK, +1 SPDEF.",2,2,10,0]
PKMNACTION[467]=["Shadow Force",120,100,2,9,0,"Singular target",0,"User: disappears during the action this is executed. User can not be detected and/or hit by any means. On the following action, user deals for damage. This action ignores Protect and Detect.",2,2,0,0]
PKMNACTION[468]=["Hone Claws",0,0,3,3,4,"User",0,"User: +1 ATK, +1 ACC.",2,2,0,0]
PKMNACTION[469]=["Wide Guard",0,0,3,16,8,"Users's Field",3,"For the remainder of this round, user and allies are protected from harm of any kind from an action that would damage more than one target. Attempts to use this after Protect, Wide Guard, Detect, Quick Guard or Endure have successfully been used will fail.",2,2,0,0]
PKMNACTION[470]=["Guard Split",0,0,3,15,5,"Singular target",0,"User's DEF becomes (user's DEF + target's DEF)/2. User's SPDEF becomes (user's SPDEF + target's SPDEF)/2. DEF and SDEF values are calculated as that Pok√©mon's value when first entering battle (ignores Swords Dance, Leer, but considers vitamins)",2,2,0,0]
PKMNACTION[471]=["Power Split",0,0,3,15,5,"Singular target",0,"User's ATK becomes (user's ATK + target's ATK)/2. User's SPATK becomes (user's SPATK + target's SPATK)/2. ATK and SPATK values are calculated as that Pok√©mon's value when first entering battle (ignores Swords Dance, Leer, but considers vitamins)",2,2,0,0]
PKMNACTION[472]=["Wonder Room",0,0,3,15,10,"Entire field",-7,"Applies Wonder Room for current round and following round",2,2,0,0]
PKMNACTION[473]=["Psyshock",80,100,1,15,0,"Singular target",0,"Damage calculation uses user's SPATK and target's DEF.",2,2,0,"PS"]
PKMNACTION[474]=["Venoshock",65,100,1,14,0,"Singular target",0,"If Target is PSN or TXC, damage dealt by this attack is multiplied by 2.",2,2,0,0]
PKMNACTION[475]=["Autotomize",0,0,3,17,3,"User",0,"User: +2 SPD, Weight is multiplied by .5",2,2,0,0]
PKMNACTION[476]=["Rage Powder",0,0,3,2,4,"User",3,"User is now the target of all actions for this round and the next round. This action fails if the existing target is a Grass-type Pokemon.",2,2,0,0]
PKMNACTION[477]=["Telekinesis",0,0,3,15,6,"Singular target",0,"For the next action, actions against target with have 100 ACC (except OHKO moves). Target cannot be hit by Ground-type actions. If Gravity is used, this effect is canceled. This move fails during Gravity.",2,2,0,0]
PKMNACTION[478]=["Magic Room",0,0,3,15,13,"Entire field",-7,"Applies Magic Room for current round and following round.",2,2,0,0]
PKMNACTION[479]=["Smack Down",50,100,2,16,0,"Singular target",0,"For the remainder of this round, airborne targets are no longer airborne.",2,2,0,0]
PKMNACTION[480]=["Storm Throw",60,100,2,6,0,"Singular target",0,"Unless critical hits are ignored, this action is always critical.",2,1,0,0]
PKMNACTION[481]=["Flame Burst",70,100,1,7,0,"Singular target",0,"TRIPLE: Hits all targets.",2,2,0,0]
PKMNACTION[482]=["Sludge Wave",95,100,1,14,0,"All Pok√©mon in Battle except User",0,"Roll 1-10. If 1: Target: PSN.",2,2,10,0]
PKMNACTION[483]=["Quiver Dance",0,0,3,2,6,"User",0,"User: +1 ATK, +1 SPD, +1 SPATK.",2,2,0,0]
PKMNACTION[484]=["Heavy Slam",1,100,2,17,0,"Singular target",0,"BP = (User's Weight / Target's Weight) * 20. BP cannot exceed 120.",2,2,0,"HC"]
PKMNACTION[485]=["Synchronoise",120,100,1,15,0,"All Pok√©mon in Battle except User",0,"Deals damage any Pok√©mon that shares a type with user, aside from user.",2,2,0,0]
PKMNACTION[486]=["Electro Ball",1,100,1,5,0,"Singular target",0,"BP = (User's SPD / Target's SPD) * 40. BP cannot exceed 150.",2,2,0,"EB"]
PKMNACTION[487]=["Soak",0,100,3,18,8,"Singular target",0,"Target: Type(s) changes to be Water-type.",2,2,0,0]
PKMNACTION[488]=["Flame Charge",50,100,2,7,0,"Singular target",0,"User: +1 SPD.",2,2,0,0]
PKMNACTION[489]=["Coil",0,0,3,14,6,"User",0,"User: +1 ATK, +1 DEF, +1 ACC.",2,2,0,0]
PKMNACTION[490]=["Low Sweep",65,100,2,6,2,"Singular target",0,"Target: -1 SPD",2,2,0,0]
PKMNACTION[491]=["Acid Spray",40,100,1,14,0,"Singular target",0,"Target: -2 SPDEF.",2,2,0,0]
PKMNACTION[492]=["Foul Play",95,100,2,3,0,"Singular target",0,"User: For the duration of this action, ATK equals that of the target.",2,2,0,0]
PKMNACTION[493]=["Simple Beam",0,100,3,13,8,"Singular target",0,"Target: Ability changes to Simple.",2,2,0,0]
PKMNACTION[494]=["Entrainment",0,100,3,13,8,"Singular target",0,"Target: Ability changes to match the User.",2,2,0,0]
PKMNACTION[495]=["After You",0,0,3,13,5,"Singular target",0,"Target's next action occurs directly after the user's.",2,2,0,0]
PKMNACTION[496]=["Round",60,100,1,13,0,"Singular target",0,"BP is 120 if ally (not user) already used this action during this round. After this move is used, any other Pok√©mon using it this turn will immediately do so (in the order they would otherwise act), regardless of Speed or priority. Pok√©mon using other moves will then continue to act as usual.",2,2,0,0]
PKMNACTION[497]=["Echoed Voice",40,100,1,13,0,"Singular target",0,"If an ally used this action during this round or during last round, BP is multiplied by 2. BP cannot exceed 200 in this way.",2,2,0,0]
PKMNACTION[498]=["Chip Away",70,100,2,13,0,"Singular target",0,"For the duration of this action, all stats are reset to their values when the Pok√©mon first entered battle.",2,2,0,0]
PKMNACTION[499]=["Clear Smog",50,0,1,14,6,"Singular target",0,"Resets all stat changes.",2,2,0,0]
PKMNACTION[500]=["Stored Power",20,100,1,15,0,"Singular target",0,"This action's BP is equal to 20+(20*X), where X is the total of all of user's current stat stages that are greater than 0. Maximum 200.",2,2,0,"SP"]
PKMNACTION[501]=["Quick Guard",0,0,3,6,8,"Users's Field",3,"For the remainder of this round, user and allies are protected from harm of any kind from an action with a priority greater than 0. Attempts to use this after Protect, Wide Guard, Detect, Quick Guard or Endure have successfully been used will fail.",2,2,0,0]
PKMNACTION[502]=["Ally Switch",0,0,3,15,4,"User",1,"TRIPLE/ROTATION: Switch position with an Ally.",2,2,0,0]
PKMNACTION[503]=["Scald",80,100,1,18,0,"Singular target",0,"Roll 1-10. If 1,2,3: Target: BRN.",2,2,10,0]
PKMNACTION[504]=["Shell Smash",0,0,3,13,9,"User",0,"User: +2 ATK, +2 SPATK, +2 SPD, -1 DEF, -1 SPDEF.",2,2,0,0]
PKMNACTION[505]=["Heal Pulse",0,0,3,15,7,"Singular target",0,"Target: +20 HP. User cannot choose self as target.",2,2,0,0]
PKMNACTION[506]=["Hex",65,100,1,9,0,"Singular target",0,"Target: If target has any status ailment of any kind, the damage dealt by this attack is multiplied by 2.",2,2,0,0]
PKMNACTION[507]=["Sky Drop",60,100,2,8,0,"Singular target",0,"During first action, user picks up target and flies into the air. All actions involving target and user, unless otherwise overrode, will fail. During second action, user will drop target, inflicting damage.",2,2,0,0]
PKMNACTION[508]=["Shift Gear",0,0,3,17,5,"User",0,"User: +1 ATK, +2 SPD.",2,2,0,0]
PKMNACTION[509]=["Circle Throw",60,90,2,6,0,"Singular target",-6,"Target is sent back to party and replaced with another Pok√©mon from party. Fails if: no other Pok√©mon in party, target has Suction Cups, a Substitute in play, or target has used Ingrain.",2,2,0,0]
PKMNACTION[510]=["Incinerate",60,100,1,7,0,"All opposing Pok√©mon",0,"If the target is holding a berry, the berry is destroyed.",2,2,0,0]
PKMNACTION[511]=["Quash",0,100,3,3,5,"Singular target",0,"Forces Target to move last during this round.",2,2,0,0]
PKMNACTION[512]=["Acrobatics",55,100,2,8,0,"Singular target",0,"TRIPLE: Allows the user to hit the opposite target in a Triple Battle.  Additionally, if the user has consumed/had an item used on them in the battle, the BP of this attack doubles to 110, but will return to normal should the user reacquire their item or gain a new one.",2,2,0,0]
PKMNACTION[513]=["Reflect Type",0,0,3,13,7,"Singular target",0,"Target: Ability changes to match the User.",2,2,0,0]
PKMNACTION[514]=["Retaliate",70,100,2,13,0,"Singular target",0,"User: If a party member fainted during this round or last round, this attack's BP is 140.",2,2,0,0]
PKMNACTION[515]=["Final Gambit",1,100,1,6,0,"Singular target",0,"Target: Dealt X - Y damage. User: -X HP. X is the amount of HP User has +1. Y is the amount of Energy currently possessed by the Target.",2,2,0,0]
PKMNACTION[516]=["Bestow",0,0,3,13,0,"Singular target",0,"",2,2,0,0]
PKMNACTION[517]=["Inferno",100,50,1,7,0,"Singular target",0,"Target: BRN.",2,2,0,0]
PKMNACTION[518]=["Water Pledge",80,100,1,18,0,"Singular target",0,"If an ally used Grass Pledge during this round, all opposing Pok√©mon -3 SPD for the next two rounds (including this one).",2,2,0,0]
PKMNACTION[519]=["Fire Pledge",80,100,1,7,0,"Singular target",0,"If an ally used Water Pledge during this round, for the remainder of this round and the next, if the effect of an ally's attack fails, roll again once. The second roll will always overwrite the first.",2,2,0,0]
PKMNACTION[520]=["Grass Pledge",80,100,1,10,0,"Singular target",0,"If an ally used Fire Pledge during this round, all opposing Pok√©mon will lose 8 HP at the end of every round for the next two rounds (including this one). This will not damage Fire-type Pokemon.",2,2,0,0]
PKMNACTION[521]=["Volt Switch",70,100,1,5,0,"Singular target",0,"Damage is dealt, then user switches places with a party member, provided user has at least 1 HP after action.",2,2,0,0]
PKMNACTION[522]=["Struggle Bug",30,100,1,2,0,"All opposing Pok√©mon",0,"Target: -1 SPATK.",2,2,0,0]
PKMNACTION[523]=["Bulldoze",60,100,2,11,0,"All Pok√©mon in Battle except User",0,"Target: -1 SPD",2,2,0,0]
PKMNACTION[524]=["Frost Breath",60,90,1,12,0,"Singular target",0,"Unless critical hits are ignored, this action is always critical.",2,1,0,0]
PKMNACTION[525]=["Dragon Tail",60,90,2,4,0,"Singular target",-6,"Target is sent back to party and replaced with another Pok√©mon from party. Fails if: no other Pok√©mon in party, target has Suction Cups, a Substitute in play, or target has used Ingrain.",2,2,0,0]
PKMNACTION[526]=["Work Up",0,0,3,13,4,"User",0,"User: +1 ATK, +1 SPATK.",2,2,0,0]
PKMNACTION[527]=["Electroweb",55,95,1,5,2,"All opposing Pok√©mon",0,"Target: -1 SPD",2,2,0,0]
PKMNACTION[528]=["Wild Charge",90,100,2,5,0,"Singular target",0,"User: -X HP, where X is the damage dealt by this action multiplied by .25. This is recoil damage.",2,2,0,0]
PKMNACTION[529]=["Drill Run",80,95,2,11,0,"Singular target",0,"This attack has a high critical hit ratio.",1,2,0,0]
PKMNACTION[530]=["Dual Chop",40,90,2,4,0,"Singular target",0,"Hits twice. Each hit is calculated separately.",2,2,0,0]
PKMNACTION[531]=["Heart Stamp",60,100,2,15,0,"Singular target",0,"Roll 1-10. If 1,2,3: Target will flinch next action.",2,2,10,0]
PKMNACTION[532]=["Horn Leech",75,100,2,10,0,"Singular target",0,"User: +X HP and +X Energy, where X is the damage dealt by this attack multiplied by .5.",2,2,0,0]
PKMNACTION[533]=["Sacred Sword",90,100,2,6,0,"Singular target",0,"For the duration of this action, all stats are reset to their values when the Pok√©mon first entered battle.",2,2,0,0]
PKMNACTION[534]=["Razor Shell",75,95,2,18,0,"Singular target",0,"Roll 1-2. If 1: Target: -1 DEF.",2,2,2,0]
PKMNACTION[535]=["Heat Crash",1,100,2,7,0,"Singular target",0,"BP = (User's Weight / Target's Weight) * 20. BP cannot exceed 120.",2,2,0,"HC"]
PKMNACTION[536]=["Leaf Tornado",65,90,1,10,0,"Singular target",0,"Roll 1-2. If 1: Target: -1 ACC.",2,2,2,0]
PKMNACTION[537]=["Steamroller",65,100,2,2,0,"Singular target",0,"Roll 1-10. If 1,2,3: Target will flinch next action.",2,2,10,0]
PKMNACTION[538]=["Cotton Guard",0,0,3,10,4,"User",0,"User: +3 DEF.",2,2,0,0]
PKMNACTION[539]=["Night Daze",85,95,1,3,0,"Singular target",0,"Roll 1-5. If 1,2: Target: -1 ACC.",2,2,5,0]
PKMNACTION[540]=["Psystrike",100,100,1,15,0,"Singular target",0,"Damage calculation uses user's SPATK and target's DEF.",2,2,0,"PS"]
PKMNACTION[541]=["Tail Slap",25,85,2,13,3,"Singular target",0,"Roll: 1-8. 1: hits five times | 2: four times | 3,4,5: three times | 6+: two times",2,2,8,0]
PKMNACTION[542]=["Hurricane",110,70,1,8,0,"Singular target",0,"Roll 1-10. If 1,2,3: Target: CFS. This action can hit Pok√©mon airborne. When raining, this action has 100 ACC. When sun is brightly shining, this action has 50 ACC.",2,2,10,0]
PKMNACTION[543]=["Head Charge",120,100,2,13,0,"Singular target",0,"User: -X HP, where X is the damage dealt by this action multiplied by .25. This is recoil damage.",2,2,0,0]
PKMNACTION[544]=["Gear Grind",50,85,2,17,0,"Singular target",0,"Hits twice. Each hit is calculated seperately.",2,2,0,0]
PKMNACTION[545]=["Searing Shot",100,100,1,7,0,"All Pok√©mon in Battle except User",0,"Roll 1-10. If 1,2,3: Target: BRN.",2,2,10,0]
PKMNACTION[546]=["Techno Blast",120,100,1,13,0,"Singular target",0,"User: declares a type from Fire, Ice, Electric, Normal and Water. Techno Buster, for the rest of the battle, is that type.",2,2,0,0]
PKMNACTION[547]=["Relic Song",75,100,1,13,0,"All opposing Pok√©mon",0,"Roll 1-10. If 1: Target: SLP. If user is Meloetta-A, changes to Meloetta-P. If user is Meloetta-P, changes to Meloetta-A.",2,2,10,0]
PKMNACTION[548]=["Secret Sword",85,100,1,6,0,"Singular target",0,"Damage calculation uses user's SPATK and target's DEF.",2,2,0,"PS"]
PKMNACTION[549]=["Glaciate",65,95,1,12,0,"All opposing Pok√©mon",0,"Target: -1 SPD.",2,2,0,0]
PKMNACTION[550]=["Bolt Strike",130,85,2,5,0,"Singular target",0,"Roll 1-5. If 1: Target: PRZ.",2,2,5,0]
PKMNACTION[551]=["Blue Flare",130,85,1,7,0,"Singular target",0,"Roll 1-10. If 1,2: Target: BRN.",2,2,10,0]
PKMNACTION[552]=["Fiery Dance",80,100,1,7,0,"Singular target",0,"Roll 1-2. If 1: User: +1 SPATK.",2,2,2,0]
PKMNACTION[553]=["Freeze Shock",140,90,2,12,0,"Singular target",0,"Roll 1-10. If 1,2,3: Target: PRZ.",2,2,10,0]
PKMNACTION[554]=["Ice Burn",140,90,1,12,0,"Singular target",0,"Roll 1-10. If 1,2,3: Target: BRN.",2,2,10,0]
PKMNACTION[555]=["Snarl",55,95,1,3,0,"All opposing Pok√©mon",0,"Target: -1 SPATK.",2,2,0,0]
PKMNACTION[556]=["Icicle Crash",85,90,2,12,0,"Singular target",0,"Roll 1-10. If 1,2,3: Target will flinch next action.",2,2,10,0]
PKMNACTION[557]=["V-Create",180,95,2,7,0,"Singular target",0,"User: -1 DEF, -1 SPATK, -1 SPDEF.",2,2,0,0]
PKMNACTION[558]=["Fusion Flare",100,100,1,7,0,"Singular target",0,"If user's ally used Cross Thunder this round, BP is 200.",2,2,0,0]
PKMNACTION[559]=["Fusion Bolt",100,100,2,5,0,"Singular target",0,"If user's ally used Cross Flame this round, BP is 200.",2,2,0,0]
PKMNACTION[560]=["Flying Press",80,95,2,6,0,"Singular target",0,"This action is also treated as Flying type.",2,2,0,0]
PKMNACTION[561]=["Mat Block",0,0,3,6,8,"User and Allies",0,"User and Allies are protected from all damage and effects from Physical and Special attacks during the opponents next action. Fails if: this action is not the first action since the user beame active.",2,2,0,0]
PKMNACTION[562]=["Belch",120,90,1,14,0,"Singular target",0,"User: Must consume a berry before first time use. Berry must be declared when action is first made, or this action fails. Berry is then removed from Trainer's inventory.",2,2,0,0]
PKMNACTION[563]=["Rototiller",0,0,3,11,6,"All Pokemon including User",0,"Grass type Pokemon on field: +1 Atk, +1 Sp. Atk.",2,2,0,0]
PKMNACTION[564]=["Sticky Web",0,0,3,2,4,"Field",0,"Applies Sticky Web to target's party.",2,2,0,0]
PKMNACTION[565]=["Fell Stinger",30,100,2,2,0,"Singular target",0,"If Target's HP becomes 0 after this attack is used: User +2 Atk",2,2,0,0]
PKMNACTION[566]=["Phantom Force",90,100,2,9,0,"Singular target",0,"User: disappears during the action this is executed. User can not be detected and/or hit by any means. On the following action, user deals for damage. This action ignores Protect and Detect.",2,2,0,0]
PKMNACTION[567]=["Trick-or-Treat",0,100,3,9,6,"Singular target",0,"Target: Grants the target the secondary typing of Ghost. If user already has a secondary type, this move replaces it. Effect lasts until target leaves the field.",2,2,0,0]
PKMNACTION[568]=["Noble Roar",0,100,3,13,6,"Singular target",0,"Target: -1 Atk, -1 Sp. Atk",2,2,0,0]
PKMNACTION[569]=["Ion Deluge",0,0,3,5,7,"Field",0,"For the next 2 actions, all Normal type attacks become Electric type.",2,2,0,0]
PKMNACTION[570]=["Parabolic Charge",50,100,1,5,0,"All Pokemon except User",0,"User: +X HP and +X Energy, where X is the damage dealt by this attack multiplied by .5. If multiple Pokemon are hit, X = combined total damage multiplied by .5",2,2,0,0]
PKMNACTION[571]=["Forest's Curse",0,100,3,10,8,"Singular target",0,"Target: Grants the target the secondary typing of Grass. If user already has a secondary type, this move replaces it. Effect lasts until target leaves the field.",2,2,0,0]
PKMNACTION[572]=["Petal Blizzard",90,100,2,10,0,"All Pokemon except User",0,"",2,2,0,0]
PKMNACTION[573]=["Freeze-Dry",70,100,1,12,0,"Singular target",0,"",2,2,0,0]
PKMNACTION[574]=["Disarming Voice",40,0,1,19,0,"All opposing Pok√©mon",0,"Regardless of accuracy rolls, this action will hit the target.",2,2,0,0]
PKMNACTION[575]=["Parting Shot",0,100,3,3,8,"Singular target",0,"Target: -1 Atk, -1 Sp. Atk, then user switches places with a party member, provided user has at least 1 HP after action.",2,2,0,0]
PKMNACTION[576]=["Topsy-Turvy",0,100,3,3,6,"Singular target",0,"Target: After this action, all moves or abilities that would normally increase a stat with this Pokemon will decrease it, and ones that would normally decrease a stat will increase it. Effects last until target is switched out. ",2,2,0,0]
PKMNACTION[577]=["Draining Kiss",50,100,1,19,0,"Singular target",0,"User: +X HP and +X Energy, where X is the damage dealt by this attack multiplied by .6",2,2,0,0]
PKMNACTION[578]=["Crafty Shield",0,0,3,19,6,"User and Allies",3,"User and Allies are protected from all Status ailments during the opponents next action.",2,2,0,0]
PKMNACTION[579]=["Flower Shield",0,0,3,19,7,"All Pok√©mon in Battle including User",0,"If target and/or user is Grass type: +1 Def",2,2,0,0]
PKMNACTION[580]=["Grassy Terrain",0,0,3,10,8,"Field",0,"Terrain becomes grassy. For the next 5 actions, all Pokemon on the ground gain +3% HP, +3% Eng.",2,2,0,0]
PKMNACTION[581]=["Misty Terrain",0,0,3,19,8,"Field",0,"Terrain becomes Misty. For the next 5 actions, all Pokemon on the ground are protected from status conditions, and damage done by Dragon type moves is multiplied by .5.",2,2,0,0]
PKMNACTION[582]=["Electrify",0,0,3,5,6,"Singular target",0,"Target's next action becomes Electric Type, regardless of the move's category.",2,2,0,0]
PKMNACTION[583]=["Play Rough",90,90,2,19,0,"Singular target",0,"Roll 1-10. If 1: Target -1 Atk",2,2,10,0]
PKMNACTION[584]=["Fairy Wind",40,0,1,19,0,"Singular target",0,"",2,2,0,0]
PKMNACTION[585]=["Moonblast",95,100,1,19,0,"Singular target",0,"Roll 1-10. If 1, target -1 Sp. Atk.",2,2,10,0]
PKMNACTION[586]=["Boomburst",140,100,1,13,0,"All Pokemon except user",0,"",2,2,0,0]
PKMNACTION[587]=["Fairy Lock",0,0,3,19,8,"All Pokemon in battle including User",0,"Until the end of the next action, Pokemon cannot leave the field. ",2,2,0,0]
PKMNACTION[588]=["King's Shield",0,0,3,17,8,"Self",4,"During the action following this action, user is protected from harm of any kind from an action. Attempts to use this after Protect, Wide Guard, Detect, Quick Guard or Endure have successfully been used will fail. Pokemon that make contact with this Pokemon after this action: -2 Atk.",2,2,0,0]
PKMNACTION[589]=["Play Nice",0,0,3,13,2,"Singular target",0,"Target: -1 Atk",2,2,0,0]
PKMNACTION[590]=["Confide",0,0,3,13,5,"Singular target",0,"This move goes through Protect, Detect, and Spiky Shield.",2,2,0,0]
//PKMNACTION[591]=["???",???,???,???,???,,"",,"",2,2,0,0]
//PKMNACTION[592]=["???",???,???,???,???,,"",,"",2,2,0,0]
//PKMNACTION[593]=["???",???,???,???,???,,"",,"",2,2,0,0]
PKMNACTION[594]=["Water Shuriken",15,100,2,18,0,"Singular target",1,"Roll: 1-8. 1: hits five times | 2: four times | 3,4,5: three times | 6+: two times. ",2,2,8,0]
PKMNACTION[595]=["Mystical Fire",65,100,1,7,0,"Singular target",0,"Target: -1 Sp. Atk",2,2,0,0]
PKMNACTION[596]=["Spiky Shield",0,0,3,10,8,"Self ",4,"Actions that cause harm against the user after this action is used will fail. Targets that make contact with this Pokemon: -10% HP.",2,2,0,0]
PKMNACTION[597]=["Aromatic Mist",0,100,3,19,6,"Singular target",0,"Target: +1 Sp. Def. Target must be an ally.",2,2,0,0]
PKMNACTION[598]=["Eerie Impulse",0,100,3,5,3,"Singular target",0,"Target: -2 Sp. Atk",2,2,0,0]
PKMNACTION[599]=["Venom Drench",0,100,3,14,6,"Singular target",0,"If Target is PSN or TXC: -1 Atk, -1 Sp. Atk, -1 Spd",2,2,0,0]
PKMNACTION[600]=["Powder",0,100,3,2,6,"Singular target",1,"If Target uses a Fire type move after this action: Target -15 HP. Fire type attack then fails. This action fails if the existing target is a Grass-type Pokemon.",2,2,0,0]
PKMNACTION[601]=["Geomancy",0,0,3,19,0,"Singular target",0,"User: +2 Sp. Atk, +2 Sp. Def, +2 Spd",2,2,0,0]
PKMNACTION[602]=["Magnetic Flux",0,0,3,5,6,"Self and Allies",0,"All Pokemon on user's side of the field including the user: If these Pokemon have Plus or Minus as an ability: +1 Def and +1 Sp. Def.",2,2,0,0]
PKMNACTION[603]=["Happy Hour",0,0,3,13,5,"Self",0,"The trainer of this Pokemon gains an extra $5 at the end of the battle.",2,2,0,0]
PKMNACTION[604]=["Electric Terrain",0,0,3,5,8,"Field",0,"Terrain becomes Electrified. For the next 5 actions, all Pokemon on the ground are unable to become SLP.",2,2,0,0]
PKMNACTION[605]=["Dazzling Gleam",80,100,1,19,0,"All opposing Pok√©mon",0,"",2,2,0,0]
PKMNACTION[606]=["Celebrate",0,0,3,13,0,"",0,"",2,2,0,0]
//PKMNACTION[607]=["???",???,???,???,???,,"",,"",2,2,0,0]
PKMNACTION[608]=["Baby-Doll Eyes",0,100,3,19,6,"Single target",1,"Target: -1 Atk",2,2,0,0]
PKMNACTION[609]=["Nuzzle",20,100,2,5,0,"Singular target",0,"Target is now PRZ.",2,2,0,0]
//PKMNACTION[610]=["???",???,???,???,???,,"",,"",2,2,0,0]
PKMNACTION[611]=["Infestation",20,100,1,2,0,"Singular target",0,"Roll 1-5.If 1, 2 or 3, target is Trapped for 4 rounds. If 4, or 5, target is trapped for 5 rounds. At the end of each round, target -6% HP",2,2,5,0]
PKMNACTION[612]=["Power-Up Punch",40,100,2,6,0,"Singular target",0,"User: +1 Atk",2,2,0,0]
PKMNACTION[613]=["Oblivion Wing",80,100,1,8,0,"Singular target",0,"User: +X HP and +X Energy, where X is the damage dealt by this attack multiplied by .6",2,2,0,0]
//PKMNACTION[614]=["???",???,???,???,???,,"",,"",2,2,0,0]
//PKMNACTION[615]=["???",???,???,???,???,,"",,"",2,2,0,0]
PKMNACTION[616]=["Land's Wrath",90,100,2,11,0,"All opposing Pok√©mon",0,"",2,2,0,0]
PKMNACTION[10000]=["Phase Shift",0,0,3,9,6,"User",0,"Changes this Pok√©mon's state to ethereal. When ethereal, this Pok√©mon cannot be hit with physical actions, nor can they use physical actions in this form. Any attempts to damage an ethereal Pok√©mon with a physical action will simply pass through them, with an energy reduction - the same applies for an ethereal Pok√©mon using a physical action. For every action this Pok√©mon is ethereal (regardless of whose action), they lose 1 Energy. If this Pok√©mon is targeted by Foresight and/or Odor Sleuth, this Pok√©mon is no longer ethereal. If this Pok√©mon uses Phase Shift after it has been used, then this Pok√©mon is no longer ethereal. Only Ghost Types can use this move, and if used by a Pok√©mon that does not share that type, the action fails with an energy reduction.",2,2,0,0]

    //These load the chosen attack into the calculator.

    
    document.calculator.NAME.value = PKMNACTION[atk_val][0];
    document.calculator.BP.value = PKMNACTION[atk_val][1];
    document.calculator.ACC.value = PKMNACTION[atk_val][2];
    document.calculator.PA.value = PKMNACTION[atk_val][3];
    document.calculator.actiontype1.value = PKMNACTION[atk_val][4];
    document.calculator.M.value = PKMNACTION[atk_val][5];
    document.calculator.IPT.value = PKMNACTION[atk_val][6];
    document.calculator.PRI.value = PKMNACTION[atk_val][7];
    document.calculator.DESC.value = PKMNACTION[atk_val][8];
    document.calculator.crit_hc.value = PKMNACTION[atk_val][9];    
    document.calculator.crit_st.value = PKMNACTION[atk_val][10];
    document.calculator.max_roll.value = PKMNACTION[atk_val][11];
    document.calculator.SM.value = PKMNACTION[atk_val][12];

    //Flying Press is attack 560. When that attack is loaded, it gets its second type.
    if (atk_val == 560){document.calculator.actiontype2.value = 8;}
    if (atk_val != 560){document.calculator.actiontype2.value = 1;}

}

function battle() {

    //This function carries out damage, energy and ACC calculations
    var battle_Pokemon =[];
    var battle_Type1 =[];
    var battle_Type2 =[];
    var battle_ATK =[];
    var battle_DEF =[];
    var battle_SPATK =[];
    var battle_SPDEF =[];
    var battle_SPD =[];
    var battle_EXP =[];
    var battle_KG =[];
    var battle_ACC =[];
    var battle_HP =[];
    var battle_NRG =[];
    var battle_stat_mod =[];
    var Compatibilities = [];

//    var battle_stats = [];

    //Allows the user to designate a user and target from the six Pok√©mon available
    var user = document.calculator.user.value;
    var target = document.calculator.target.value;
    //Assigns type to the selected action
    var actiontype1 = document.calculator.actiontype1.value;
    var actiontype2 = document.calculator.actiontype2.value;

    // The if user == statements load the selected Pokemon into the first half of the battle arrays. while target == loads into the 2nd half
    if (user == 1) {
        battle_Type1[1] = document.calculator.Type1_1.value;
        battle_Type2[1] = document.calculator.Type2_1.value;
        battle_ATK[1] = document.calculator.modATK_1.value;
        battle_DEF[1] = document.calculator.modDEF_1.value;
        battle_SPATK[1] = document.calculator.modSPATK_1.value;
        battle_SPDEF[1] = document.calculator.modSPDEF_1.value;
        battle_SPD[1] = document.calculator.modSPD_1.value;
        battle_EXP[1] = document.calculator.modEXP_1.value;
        battle_KG[1] = document.calculator.KG_1.value * parseFloat(document.calculator.modKG_1.value);
        battle_ACC[1] = document.calculator.ACC_1.value;
        battle_HP[1] = document.calculator.HP_1.value;
        battle_NRG[1] = document.calculator.NRG_1.value;
        battle_stat_mod[1] = document.calculator.stat_1.value;
    }

    if (user == 2) {
        battle_Type1[1] = document.calculator.Type1_2.value;
        battle_Type2[1] = document.calculator.Type2_2.value;
        battle_ATK[1] = document.calculator.modATK_2.value;
        battle_DEF[1] = document.calculator.modDEF_2.value;
        battle_SPATK[1] = document.calculator.modSPATK_2.value;
        battle_SPDEF[1] = document.calculator.modSPDEF_2.value;
        battle_SPD[1] = document.calculator.modSPD_2.value;
        battle_EXP[1] = document.calculator.modEXP_2.value;
        battle_KG[1] = document.calculator.KG_2.value * parseFloat(document.calculator.modKG_2.value);
        battle_ACC[1] = document.calculator.ACC_2.value;
        battle_HP[1] = document.calculator.HP_2.value;
        battle_NRG[1] = document.calculator.NRG_2.value;
        battle_stat_mod[1] = document.calculator.stat_2.value;
    }
    if (user == 3) {
        battle_Type1[1] = document.calculator.Type1_3.value;
        battle_Type2[1] = document.calculator.Type2_3.value;
        battle_ATK[1] = document.calculator.modATK_3.value;
        battle_DEF[1] = document.calculator.modDEF_3.value;
        battle_SPATK[1] = document.calculator.modSPATK_3.value;
        battle_SPDEF[1] = document.calculator.modSPDEF_3.value;
        battle_SPD[1] = document.calculator.modSPD_3.value;
        battle_EXP[1] = document.calculator.modEXP_3.value;
        battle_KG[1] = document.calculator.KG_3.value * parseFloat(document.calculator.modKG_3.value);
        battle_ACC[1] = document.calculator.ACC_3.value;
        battle_HP[1] = document.calculator.HP_3.value;
        battle_NRG[1] = document.calculator.NRG_3.value;
        battle_stat_mod[1] = document.calculator.stat_3.value;
    }
    if (user == 4) {
        battle_Type1[1] = document.calculator.Type1_4.value;
        battle_Type2[1] = document.calculator.Type2_4.value;
        battle_ATK[1] = document.calculator.modATK_4.value;
        battle_DEF[1] = document.calculator.modDEF_4.value;
        battle_SPATK[1] = document.calculator.modSPATK_4.value;
        battle_SPDEF[1] = document.calculator.modSPDEF_4.value;
        battle_SPD[1] = document.calculator.modSPD_4.value;
        battle_EXP[1] = document.calculator.modEXP_4.value;
        battle_KG[1] = document.calculator.KG_4.value * parseFloat(document.calculator.modKG_4.value);
        battle_ACC[1] = document.calculator.ACC_4.value;
        battle_HP[1] = document.calculator.HP_4.value;
        battle_NRG[1] = document.calculator.NRG_4.value;
        battle_stat_mod[1] = document.calculator.stat_4.value;
    }
    if (user == 5) {
        battle_Type1[1] = document.calculator.Type1_5.value;
        battle_Type2[1] = document.calculator.Type2_5.value;
        battle_ATK[1] = document.calculator.modATK_5.value;
        battle_DEF[1] = document.calculator.modDEF_5.value;
        battle_SPATK[1] = document.calculator.modSPATK_5.value;
        battle_SPDEF[1] = document.calculator.modSPDEF_5.value;
        battle_SPD[1] = document.calculator.modSPD_5.value;
        battle_EXP[1] = document.calculator.modEXP_5.value;
        battle_KG[1] = document.calculator.KG_5.value * parseFloat(document.calculator.modKG_5.value);
        battle_ACC[1] = document.calculator.ACC_5.value;
        battle_HP[1] = document.calculator.HP_5.value;
        battle_NRG[1] = document.calculator.NRG_5.value;
        battle_stat_mod[1] = document.calculator.stat_5.value;
    }
    if (user == 6) {
        battle_Type1[1] = document.calculator.Type1_6.value;
        battle_Type2[1] = document.calculator.Type2_6.value;
        battle_ATK[1] = document.calculator.modATK_6.value;
        battle_DEF[1] = document.calculator.modDEF_6.value;
        battle_SPATK[1] = document.calculator.modSPATK_6.value;
        battle_SPDEF[1] = document.calculator.modSPDEF_6.value;
        battle_SPD[1] = document.calculator.modSPD_6.value;
        battle_EXP[1] = document.calculator.modEXP_6.value;
        battle_KG[1] = document.calculator.KG_6.value * parseFloat(document.calculator.modKG_6.value);
        battle_ACC[1] = document.calculator.ACC_6.value;
        battle_HP[1] = document.calculator.HP_6.value;
        battle_NRG[1] = document.calculator.NRG_6.value;
        battle_stat_mod[1] = document.calculator.stat_6.value;
    }
    if (target == 1) {
        battle_Type1[2] = document.calculator.Type1_1.value;
        battle_Type2[2] = document.calculator.Type2_1.value;
        battle_ATK[2] = document.calculator.modATK_1.value;
        battle_DEF[2] = document.calculator.modDEF_1.value;
        battle_SPATK[2] = document.calculator.modSPATK_1.value;
        battle_SPDEF[2] = document.calculator.modSPDEF_1.value;
        battle_SPD[2] = document.calculator.modSPD_1.value;
        battle_EXP[2] = document.calculator.modEXP_1.value;
        battle_KG[2] = document.calculator.KG_1.value * parseFloat(document.calculator.modKG_1.value);
        battle_ACC[2] = document.calculator.EVA_1.value;
        battle_HP[2] = document.calculator.HP_1.value;
        battle_NRG[2] = document.calculator.NRG_1.value;
        battle_stat_mod[2] = document.calculator.stat_1.value;
    }

    if (target == 2) {
        battle_Type1[2] = document.calculator.Type1_2.value;
        battle_Type2[2] = document.calculator.Type2_2.value;
        battle_ATK[2] = document.calculator.modATK_2.value;
        battle_DEF[2] = document.calculator.modDEF_2.value;
        battle_SPATK[2] = document.calculator.modSPATK_2.value;
        battle_SPDEF[2] = document.calculator.modSPDEF_2.value;
        battle_SPD[2] = document.calculator.modSPD_2.value;
        battle_EXP[2] = document.calculator.modEXP_2.value;
        battle_KG[2] = document.calculator.KG_2.value * parseFloat(document.calculator.modKG_2.value);
        battle_ACC[2] = document.calculator.EVA_2.value;
        battle_HP[2] = document.calculator.HP_2.value;
        battle_NRG[2] = document.calculator.NRG_2.value;
        battle_stat_mod[2] = document.calculator.stat_2.value;
    }
    if (target == 3) {
        battle_Type1[2] = document.calculator.Type1_3.value;
        battle_Type2[2] = document.calculator.Type2_3.value;
        battle_ATK[2] = document.calculator.modATK_3.value;
        battle_DEF[2] = document.calculator.modDEF_3.value;
        battle_SPATK[2] = document.calculator.modSPATK_3.value;
        battle_SPDEF[2] = document.calculator.modSPDEF_3.value;
        battle_SPD[2] = document.calculator.modSPD_3.value;
        battle_EXP[2] = document.calculator.modEXP_3.value;
        battle_KG[2] = document.calculator.KG_3.value * parseFloat(document.calculator.modKG_3.value);
        battle_ACC[2] = document.calculator.EVA_3.value;
        battle_HP[2] = document.calculator.HP_3.value;
        battle_NRG[2] = document.calculator.NRG_3.value;
        battle_stat_mod[2] = document.calculator.stat_3.value;
    }
    if (target == 4) {
        battle_Type1[2] = document.calculator.Type1_4.value;
        battle_Type2[2] = document.calculator.Type2_4.value;
        battle_ATK[2] = document.calculator.modATK_4.value;
        battle_DEF[2] = document.calculator.modDEF_4.value;
        battle_SPATK[2] = document.calculator.modSPATK_4.value;
        battle_SPDEF[2] = document.calculator.modSPDEF_4.value;
        battle_SPD[2] = document.calculator.modSPD_4.value;
        battle_EXP[2] = document.calculator.modEXP_4.value;
        battle_KG[2] = document.calculator.KG_4.value * parseFloat(document.calculator.modKG_4.value);
        battle_ACC[2] = document.calculator.EVA_4.value;
        battle_HP[2] = document.calculator.HP_4.value;
        battle_NRG[2] = document.calculator.NRG_4.value;
        battle_stat_mod[2] = document.calculator.stat_4.value;
    }
    if (target == 5) {
        battle_Type1[2] = document.calculator.Type1_5.value;
        battle_Type2[2] = document.calculator.Type2_5.value;
        battle_ATK[2] = document.calculator.modATK_5.value;
        battle_DEF[2] = document.calculator.modDEF_5.value;
        battle_SPATK[2] = document.calculator.modSPATK_5.value;
        battle_SPDEF[2] = document.calculator.modSPDEF_5.value;
        battle_SPD[2] = document.calculator.modSPD_5.value;
        battle_EXP[2] = document.calculator.modEXP_5.value;
        battle_KG[2] = document.calculator.KG_5.value * parseFloat(document.calculator.modKG_5.value);
        battle_ACC[2] = document.calculator.EVA_5.value;
        battle_HP[2] = document.calculator.HP_5.value;
        battle_NRG[2] = document.calculator.NRG_5.value;
        battle_stat_mod[2] = document.calculator.stat_5.value;
    }
    if (target == 6) {
        battle_Type1[2] = document.calculator.Type1_6.value;
        battle_Type2[2] = document.calculator.Type2_6.value;
        battle_ATK[2] = document.calculator.modATK_6.value;
        battle_DEF[2] = document.calculator.modDEF_6.value;
        battle_SPATK[2] = document.calculator.modSPATK_6.value;
        battle_SPDEF[2] = document.calculator.modSPDEF_6.value;
        battle_SPD[2] = document.calculator.modSPD_6.value;
        battle_EXP[2] = document.calculator.modEXP_6.value;
        battle_KG[2] = document.calculator.KG_6.value * parseFloat(document.calculator.modKG_6.value);
        battle_ACC[2] = document.calculator.EVA_6.value;
        battle_HP[2] = document.calculator.HP_6.value;
        battle_NRG[2] = document.calculator.NRG_6.value;
        battle_stat_mod[2] = document.calculator.stat_6.value;
    }
    //The following are all BP calculators for attacks with variable BP.
    //Low Kick and Grass Knot
    if (document.calculator.SM.value == "LK") {
        if (parseFloat(battle_KG[2]) < 11) {document.calculator.BP.value = 20;
        } if (parseFloat(battle_KG[2]) > 10) {document.calculator.BP.value = 40;
        } if (parseFloat(battle_KG[2]) > 25) {document.calculator.BP.value = 60;
        } if (parseFloat(battle_KG[2]) > 50) {document.calculator.BP.value = 80;
        } if (parseFloat(battle_KG[2]) > 100) {document.calculator.BP.value = 100;
        } if (parseFloat(battle_KG[2]) > 200) {document.calculator.BP.value = 120;
        }

        //Crush Grip and Wring Out
    }
    if (document.calculator.SM.value == "CG") {
        document.calculator.BP.value = (1 + ((110 * parseFloat(battle_HP[2])) / 100));
    }
    //Flail and Reversal
    if (document.calculator.SM.value == "FR") {
        if (parseFloat(battle_HP[1]) < 2) {document.calculator.BP.value = 200;
        } else if (parseFloat(battle_HP[1]) < 21) {document.calculator.BP.value = 150;
        } else if (parseFloat(battle_HP[1]) < 41) {document.calculator.BP.value = 100;
        } else if (parseFloat(battle_HP[1]) < 61) {document.calculator.BP.value = 80;
        } else if (parseFloat(battle_HP[1]) < 81) {document.calculator.BP.value = 40;
        } else if (parseFloat(battle_HP[1]) > 81) {document.calculator.BP.value = 20;
        }
    }
    //Heat Crash and Heavy Slam
    if (document.calculator.SM.value == "HC") {
        if (parseFloat(battle_SPD[2]) < 2) {document.calculator.BP.value = 200;
        } else if (parseFloat(battle_SPD[2]) < 21) {document.calculator.BP.value = 150;
        } else if (parseFloat(battle_SPD[2]) < 41) {document.calculator.BP.value = 100;
        } else if (parseFloat(battle_SPD[2]) < 61) {document.calculator.BP.value = 80;
        } else if (parseFloat(battle_SPD[2]) < 81) {document.calculator.BP.value = 40;
        } else if (parseFloat(battle_SPD[2]) > 81) {document.calculator.BP.value = 20;
        }
        
        document.calculator.BP.value = (parseFloat(battle_KG[1]) / parseFloat(battle_KG[2])) * 20
        if (document.calculator.BP.value > 120){document.calculator.BP.value = 120;}
    }
    //Super Fang
    if (document.calculator.SM.value == "SF") {
        document.calculator.BP.value = parseFloat(battle_HP[2]);
    }
    //Seismic Toss and Night Shade
    if (document.calculator.SM.value == "ST") {
        document.calculator.BP.value = parseFloat(battle_EXP[1]) * 10;
    }
    //Punishment
    if (document.calculator.SM.value == "PU") {
        if (60 + 20 * parseFloat(battle_stat_mod[2]) > 200) {document.calculator.BP.value = 200;
        }
        document.calculator.BP.value = 60 + (20 * parseFloat(battle_stat_mod[2]));
    }
    //Gyro Ball
    if (document.calculator.SM.value == "GB") {
        document.calculator.BP.value = (1 + ((25 * parseFloat(battle_SPD[2])) / parseFloat(battle_SPD[1])));
    }
    //Electro Ball
    if (document.calculator.SM.value == "EB") {
        if ((parseFloat(battle_SPD[1]) / parseFloat(battle_SPD[2])) > 4) {document.calculator.BP.value = 150;
        } else if ((parseFloat(battle_SPD[1]) / parseFloat(battle_SPD[2])) <= 4) {document.calculator.BP.value = 120;
        } else if ((parseFloat(battle_SPD[1]) / parseFloat(battle_SPD[2])) <= 3) {document.calculator.BP.value = 80;
        } else if ((parseFloat(battle_SPD[1]) / parseFloat(battle_SPD[2])) <= 2) {document.calculator.BP.value = 60;
        }
    }
    //Trump Card
    if (document.calculator.SM.value == "TC") {
        document.calculator.BP.value = 100 - parseFloat(battle_NRG[1]);
    }
    //Spit Up
    if (document.calculator.SM.value == "SU") {
        document.calculator.BP.value = document.calculator.SC.value * 33;
    }
    //Stored Power
    if (document.calculator.SM.value == "SP") {
        document.calculator.BP.value = 20 + (20 * parseFloat(battle_stat_mod[1]));
        if (20 + (20 * parseFloat(battle_stat_mod[1])) > 200) {document.calculator.BP.value = 200;
        }
    }

    //Stores values input by user for use in damage calculation
    var BP = document.calculator.BP.value;
    var ACC = document.calculator.ACC.value;
    var M = document.calculator.M.value;

    //Allows for critical rolls
    //Criticals only roll when all associated boxes are completed.
    
        //Rolls from 1-10000 to allow for two decimal places
        var roll = Math.floor(Math.random()*10001);

    //This is the default roll for critical hits
        var crit_roll = 625;

        var crit_level = 0;

    //These are only used when the critical hit level has been modified. When it has been modified, the roll value changes.
        if (document.calculator.crit_hc.value == 1) {crit_level = crit_level + 1;}
        if (document.calculator.crit_sl.value == 1) {crit_level = crit_level + 1;}
        if (document.calculator.crit_fe.value == 1) {crit_level = crit_level + 2;}

        if (crit_level == 1) {crit_roll = 1250;}
        if (crit_level== 2) {crit_roll = 5000;}
        if (crit_level > 2) {crit_roll = 10000;}
 
        if (document.calculator.crit_st.value == 1) {
            crit_roll = 10000;
        }
        if (document.calculator.crit_st.value == 3) {
            crit_roll = 0;
        }

        //If the roll is the appropriate value, then the value is set to critical.
        if (roll < crit_roll + 1) {
            var C = 1.5;
        }
        if (roll > crit_roll + 1) {
             var C=1;}

    //The following arrays judge type compatitibilites. The rows are the defending type, the columns are the attacking type. Deal with it. Then the type multipliers are stored in the array.


    var Compatibilities = [];
//								None	Bug	Dark	Dragon	Electric	Fighting	Fire	Flying	Ghost	Grass	Ground	Ice	Normal	Poison	Psychic	Rock	Steel	Water	Fairy	
/*None*/	Compatibilities[1]=[0,1.0,	1.0,1.0,	1.0,	1.0,		1.0,		1.0,	1.0,	1.0,	1.0,	1.0,	1.0,1.0,	1.0,	1.0,	1.0,	1.0,	1.0,	1.0]//None
/*Bug*/		Compatibilities[2]=[0,1.0,	1.0,1.0,	1.0,	1.0,		0.5,		2.0,	2.0,	1.0,	0.5,	0.5,	1.0,1.0,	1.0,	1.0,	2.0,	1.0,	1.0,	1.0]//Bug
/*Dark*/	Compatibilities[3]=[0,1.0,	2.0,0.5,	1.0,	1.0,		2.0,		1.0,	1.0,	0.5,	1.0,	1.0,	1.0,1.0,	1.0, 	0.0,	1.0,	1.0,	1.0,	2.0]//Dark
/*Dragon*/	Compatibilities[4]=[0,1.0,	1.0,1.0,	2.0,	0.5,		1.0,		0.5,	1.0,	1.0,	0.5,	1.0,	2.0,1.0,	1.0,	1.0,	1.0,	1.0,	0.5,	2.0]//Dragon
/*Electric*/Compatibilities[5]=[0,1.0,	1.0,1.0,	1.0,	0.5,		1.0,		1.0,	0.5,	1.0,	1.0,	2.0,	1.0,1.0,	1.0,	1.0,	1.0,	0.5,	1.0,	1.0]//Electric
/*Fighting*/Compatibilities[6]=[0,1.0,	0.5,0.5,	1.0,	1.0,		1.0,		1.0,	2.0,	1.0,	1.0,	1.0,	1.0,1.0,	1.0,	2.0,	0.5,	1.0,	1.0,	1.0]//Fighting
/*Fire*/	Compatibilities[7]=[0,1.0,	0.5,1.0,	1.0,	1.0,		1.0,		0.5,	1.0,	1.0,	0.5,	2.0,	0.5,1.0,	1.0,	1.0,	2.0,	0.5,	2.0,	0.5]//Fire
/*Flying*/	Compatibilities[8]=[0,1.0,	0.5,1.0,	1.0,	2.0,		0.5,		1.0,	1.0,	1.0,	0.5, 	0.0,	2.0,1.0,	1.0,	1.0,	2.0,	1.0,	1.0,	1.0]//Flying
/*Ghost*/	Compatibilities[9]=[0,1.0,	0.5,2.0,	1.0,	1.0, 		0.0,		1.0,	1.0,	2.0,	1.0,	1.0,	1.0,1.0,	0.5,	1.0,	1.0,	1.0,	1.0,	2.0]//Ghost
/*Grass*/	Compatibilities[10]=[0,1.0,	2.0,1.0,	1.0,	0.5,		1.0,		2.0,	2.0,	1.0,	0.5,	0.5,	2.0,1.0,	2.0,	1.0,	1.0,	1.0,	0.5,	1.0]//Grass
/*Ground*/	Compatibilities[11]=[0,1.0,	1.0,1.0,	1.0, 	0.0,		1.0,		1.0,	1.0,	1.0,	2.0,	1.0,	2.0,1.0,	0.5,	1.0,	0.5,	1.0,	2.0,	1.0]//Ground
/*Ice*/		Compatibilities[12]=[0,1.0,	1.0,1.0,	1.0,	1.0,		2.0,		2.0,	1.0,	1.0,	1.0,	1.0,	0.5,1.0,	1.0,	1.0,	2.0,	2.0,	1.0,	1.0]//Ice
/*Normal*/	Compatibilities[13]=[0,1.0,	1.0,1.0,	1.0,	1.0,		2.0,		1.0,	1.0, 	0.0,	1.0,	1.0,	1.0,1.0,	1.0,	1.0,	1.0,	1.0,	1.0,	1.0]//Normal
/*Poison*/	Compatibilities[14]=[0,1.0,	0.5,1.0,	1.0,	1.0,		0.5,		1.0,	1.0,	1.0,	0.5,	2.0,	1.0,1.0,	0.5,	2.0,	1.0,	1.0,	1.0,	1.0]//Poison
/*Psychic*/	Compatibilities[15]=[0,1.0,	2.0,2.0,	1.0,	1.0,		0.5,		1.0,	1.0,	2.0,	1.0,	1.0,	1.0,1.0,	1.0,	0.5,	1.0,	1.0,	1.0,	0.5]//Psychic
/*Rock*/	Compatibilities[16]=[0,1.0,	1.0,1.0,	1.0,	1.0,		2.0,		0.5,	0.5,	1.0,	2.0,	2.0,	1.0,0.5,	0.5,	1.0,	1.0,	2.0,	2.0,	1.0]//Rock
/*Steel*/	Compatibilities[17]=[0,1.0,	0.5,1.0,	0.5,	1.0,		2.0,		2.0,	0.5,	1.0,	0.5,	2.0,	0.5,0.5, 	0.0,	0.5,	0.5,	0.5,	1.0,	0.5]//Steel
/*Water*/	Compatibilities[18]=[0,1.0,	1.0,1.0,	1.0,	2.0,		1.0,		0.5,	1.0,	1.0,	2.0,	1.0,	0.5,1.0,	1.0,	1.0,	1.0,	0.5,	0.5,	1.0]//Water
/*Fairy*/	Compatibilities[19]=[0,1.0,	0.5,0.5, 	0.0,	1.0,		0.5,		1.0,	1.0,	1.0,	1.0,	1.0,	1.0,1.0,	2.0,	1.0,	1.0,	2.0,	1.0,	1.0]//Fairy

    //TT judges the final multiplier of both attacking types and both defending types*/

	var TT = Compatibilities[battle_Type1[2]][actiontype1] * Compatibilities[battle_Type2[2]][actiontype1] * Compatibilities[battle_Type1[2]][actiontype2] * Compatibilities[battle_Type2[2]][actiontype2];

    //For whatever reason, it doesn't like when I say TT < 0.25, so I just set the initial value of T for that multiplier, and have it overwritten in the if statements
    var T = 0.1;
    if (TT > 4.0) {T = 1.9;}
    if (TT == 4.0) {T = 1.5;}
    if (TT == 2.0) {T = 1.2;}
    if (TT == 1.0) {T = 1;}
    if (TT == 0.5) {T = 0.8;}
    if (TT == 0.25) {T = 0.5;}
    if (TT == 0.0) {T = 0;}


    //S judges STAB. If either attack type matches either of the user's type, then STAB is granted. NRGS is STAB for Energy purposes
    var S = 1;
    
    
    if (battle_Type2[1] == 1) {
        if (battle_Type1[1] == actiontype1 || battle_Type1[1] == actiontype2) {
            S = 1.2;
        }
    }
if (battle_Type2[1] != 1) {
if (battle_Type1[1] == actiontype1 || battle_Type2[1] == actiontype1 || battle_Type1[1] == actiontype2 || battle_Type2[1] == actiontype2) {
S = 1.2;
}
}

    var NRGS = 1.5;
    if (battle_Type2[1] == 1) {
        if (battle_Type1[1] == actiontype1 || battle_Type1[1] == actiontype2) {
            NRGS=1;}
    }
if (battle_Type2[1] != 1) {
if (battle_Type1[1] == actiontype1 || battle_Type2[1] == actiontype1 || battle_Type1[1] == actiontype2 || battle_Type2[1] == actiontype2) {
NRGS = 1;
}
}
    var PA = document.calculator.PA.value; //judges physical or special attack
    var AvD; //this is offense weighed against defense
    var X;

    //calculating X and calculating AvD
    if (PA == 2) {
        AvD = (1 + ((battle_ATK[1] - battle_DEF[2]) / 10));
        if (battle_DEF[2] == 1) {
            X = 5;
        }
        if (battle_DEF[2] == 2) {
            X = 5;
        }
        if (battle_DEF[2] == 3) {
            X = 5;
        }
        if (battle_DEF[2] == 4) {
            X = 7;
        }
        if (battle_DEF[2] == 5) {
            X = 7;
        }
        if (battle_DEF[2] == 6) {
            X = 7;
        }
        if (battle_DEF[2] == 7) {
            X = 10;
        }
        if (battle_DEF[2] == 8) {
            X = 10;
        }
        if (battle_DEF[2] == 9) {
            X = 10;
        }
        if (battle_DEF[2] == 10) {
            X = 10;
        }
        if (battle_DEF[2] == 11) {
            X = 12;
        }
        if (battle_DEF[2] == 12) {
            X = 12;
        }
        if (battle_DEF[2] == 13) {
            X = 12;
        }
        if (battle_DEF[2] == 14) {
            X = 12;
        }
        if (battle_DEF[2] == 15) {
            X = 12;
        }
        if (battle_DEF[2] == 16) {
            X = 15;
        }
        if (battle_DEF[2] == 17) {
            X = 15;
        }
        if (battle_DEF[2] == 18) {
            X = 15;
        }
        if (battle_DEF[2] == 19) {
            X = 15;
        }
        if (battle_DEF[2] == 20) {
            X = 15;
        }
        if (battle_DEF[2] == 21) {
            X = 17;
        }
        if (battle_DEF[2] == 22) {
            X = 17;
        }
        if (battle_DEF[2] == 23) {
            X = 17;
        }
        if (battle_DEF[2] == 24) {
            X = 17;
        }
        if (battle_DEF[2] == 25) {
            X = 17;
        }
        if (battle_DEF[2] == 26) {
            X = 20;
        }
        if (battle_DEF[2] == 27) {
            X = 20;
        }
        if (battle_DEF[2] == 28) {
            X = 20;
        }
        if (battle_DEF[2] == 29) {
            X = 20;
        }
        if (battle_DEF[2] == 30) {
            X = 20;
        }
    } else {
        AvD = (1 + ((battle_SPATK[1] - battle_SPDEF[2]) / 10));
        if (battle_SPDEF[2] == 1) {
            X = 5;
        }
        if (battle_SPDEF[2] == 2) {
            X = 5;
        }
        if (battle_SPDEF[2] == 3) {
            X = 5;
        }
        if (battle_SPDEF[2] == 4) {
            X = 7;
        }
        if (battle_SPDEF[2] == 5) {
            X = 7;
        }
        if (battle_SPDEF[2] == 6) {
            X = 7;
        }
        if (battle_SPDEF[2] == 7) {
            X = 10;
        }
        if (battle_SPDEF[2] == 8) {
            X = 10;
        }
        if (battle_SPDEF[2] == 9) {
            X = 10;
        }
        if (battle_SPDEF[2] == 10) {
            X = 10;
        }
        if (battle_SPDEF[2] == 11) {
            X = 12;
        }
        if (battle_SPDEF[2] == 12) {
            X = 12;
        }
        if (battle_SPDEF[2] == 13) {
            X = 12;
        }
        if (battle_SPDEF[2] == 14) {
            X = 12;
        }
        if (battle_SPDEF[2] == 15) {
            X = 12;
        }
        if (battle_SPDEF[2] == 16) {
            X = 15;
        }
        if (battle_SPDEF[2] == 17) {
            X = 15;
        }
        if (battle_SPDEF[2] == 18) {
            X = 15;
        }
        if (battle_SPDEF[2] == 19) {
            X = 15;
        }
        if (battle_SPDEF[2] == 20) {
            X = 15;
        }
        if (battle_SPDEF[2] == 21) {
            X = 17;
        }
        if (battle_SPDEF[2] == 22) {
            X = 17;
        }
        if (battle_SPDEF[2] == 23) {
            X = 17;
        }
        if (battle_SPDEF[2] == 24) {
            X = 17;
        }
        if (battle_SPDEF[2] == 25) {
            X = 17;
        }
        if (battle_SPDEF[2] == 26) {
            X = 20;
        }
        if (battle_SPDEF[2] == 27) {
            X = 20;
        }
        if (battle_SPDEF[2] == 28) {
            X = 20;
        }
        if (battle_SPDEF[2] == 29) {
            X = 20;
        }
        if (battle_SPDEF[2] == 30) {
            X = 20;
        }
    }
    //Psystrike, Psyschock, and Sacred Sword all use the user's SPATK and the target's DEF. This if statement covers that scenario.
    if (document.calculator.SM.value == "PS") {
        AvD = (1 + ((battle_SPATK[1] - battle_DEF[2]) / 10));
        if (battle_DEF[2] == 1) {
            X = 5;
        }
        if (battle_DEF[2] == 2) {
            X = 5;
        }
        if (battle_DEF[2] == 3) {
            X = 5;
        }
        if (battle_DEF[2] == 4) {
            X = 7;
        }
        if (battle_DEF[2] == 5) {
            X = 7;
        }
        if (battle_DEF[2] == 6) {
            X = 7;
        }
        if (battle_DEF[2] == 7) {
            X = 10;
        }
        if (battle_DEF[2] == 8) {
            X = 10;
        }
        if (battle_DEF[2] == 9) {
            X = 10;
        }
        if (battle_DEF[2] == 10) {
            X = 10;
        }
        if (battle_DEF[2] == 11) {
            X = 12;
        }
        if (battle_DEF[2] == 12) {
            X = 12;
        }
        if (battle_DEF[2] == 13) {
            X = 12;
        }
        if (battle_DEF[2] == 14) {
            X = 12;
        }
        if (battle_DEF[2] == 15) {
            X = 12;
        }
        if (battle_DEF[2] == 16) {
            X = 15;
        }
        if (battle_DEF[2] == 17) {
            X = 15;
        }
        if (battle_DEF[2] == 18) {
            X = 15;
        }
        if (battle_DEF[2] == 19) {
            X = 15;
        }
        if (battle_DEF[2] == 20) {
            X = 15;
        }
        if (battle_DEF[2] == 21) {
            X = 17;
        }
        if (battle_DEF[2] == 22) {
            X = 17;
        }
        if (battle_DEF[2] == 23) {
            X = 17;
        }
        if (battle_DEF[2] == 24) {
            X = 17;
        }
        if (battle_DEF[2] == 25) {
            X = 17;
        }
        if (battle_DEF[2] == 26) {
            X = 20;
        }
        if (battle_DEF[2] == 27) {
            X = 20;
        }
        if (battle_DEF[2] == 28) {
            X = 20;
        }
        if (battle_DEF[2] == 29) {
            X = 20;
        }
        if (battle_DEF[2] == 30) {
            X = 20;
        }
    }
    //making sure AvD doesn't get lower than .1, which allows at least SOME damage to be dealt in all instances except when type effectiveness is 0.
    if (AvD < 0.1) {
        AvD = 0.1;
    }
// overides - the following statements allow the user to override the generated values for whatever reason
if (document.calculator.stab_force.value == 1){
S = 1.2;
NRGS = 1;
}
if (document.calculator.stab_force.value == 3){
S = 1;
NRGS = 1.5;
}
if (document.calculator.matchup_force.value > 0){
T = document.calculator.matchup_force.value;
}
if (document.calculator.x_force.value > 0){
X = document.calculator.x_force.value;
}

    //damage formula
    if (BP > -1 && C > 0 && T > -1 && AvD > 0) {
        document.calculator.damage.value = Math.ceil(((((BP / X) * C) * T) * S) * AvD);
        //If the type effectiveness is zero, then no damage is dealt
    }
if (BP > -1 && parseFloat(battle_EXP[1]) > 0 && M > -1) {
        //energy formula
        document.calculator.energy.value = Math.ceil(Math.pow((BP * (0.05) * NRGS), (1 + ((10 - parseFloat(battle_EXP[1])) / 10))) + parseFloat(M));
    }
//Energy usage needs to be at least 1.
if (document.calculator.energy.value == 0) {
document.calculator.energy.value = 1;
}
//Sonicboom and Dragon Rage always deal 5 damage and cost 1 energy.
if (document.calculator.attacks.value == 49 || document.calculator.attacks.value == 82) {
document.calculator.energy.value = 1;
document.calculator.damage.value = 5;
}
    if (ACC > 0 && parseFloat(battle_ACC[1]) > 0 && parseFloat(battle_ACC[2]) > 0) {
        //acc formula
        var percentage = Math.ceil(ACC * parseFloat(battle_ACC[1]) * parseFloat(battle_ACC[2]));

        var proll = Math.floor(Math.random()*101);

        var hit = "Yes";
        if (proll > percentage) {
            hit = "No";
document.calculator.damage.value = 0;
        }
        document.calculator.percentage.value = hit;
    }

    //Allows for rolls for things like Burn, lowering stats, et cetera
    var other_roll = " ";
    var max_roll = document.calculator.max_roll.value;

    var aroll = Math.floor(Math.random()*11);
    
    if (max_roll > 0) {
        aroll = Math.floor(Math.random()*11);
        while (aroll > max_roll || aroll < 1){aroll = Math.floor(Math.random()*11);}
        //Magnitude
        if (document.calculator.max_roll.value > 99){aroll = Math.floor(Math.random()*101);}
        other_roll = "\nEffect: Rolled from 1 to " + max_roll + ". Result was " + aroll + ".";
        document.calculator.aroll.value = aroll;
    }
    
    //Magnitude
    if (document.calculator.max_roll.value > 99){
        if (aroll < 101){BP = 90}
        if (aroll < 81){BP = 70}
        if (aroll < 51){BP = 50}
        if (aroll < 31){BP = 110}
        if (aroll < 21){BP = 30}
        if (aroll < 11){BP = 150}
        if (aroll < 6){BP = 10}
    }
    
     //This prints information for the "Show Work" option.
    document.calculator.descdmg.value = document.calculator.NAME.value + ": ["+document.calculator.IPT.value+"] "+document.calculator.DESC.value+" (Priority: "+document.calculator.PRI.value+")"+

"\n\n"+

"DAMAGE: "+document.calculator.damage.value+ " (" + "BP: " + BP + " | " + "X: " + X + " | " + "C: " + C + " | " + "T: " + T + " | " + "S: " + S + " | " + "AvD: " + AvD +

")\nENERGY: "+document.calculator.energy.value+" (" + "BP: " + BP + " | " + "S: " + NRGS + " | " + "EXP: " + (battle_EXP[1]) + " | " + "M: " + M + ")\n" +

    "ACCURACY: "+percentage+" (HIT: "+hit+") (User's Accuracy: " + parseFloat(battle_ACC[1]) + " | " + "Target's Evasion: " + parseFloat(battle_ACC[2]) + ")\n\n" +

"Critical hit rolled a " + roll + ", where rolling " + crit_roll + " or less resulted in a critical hit.\n" +

    "Accuracy rolled a " + proll + " where rolling more than " + percentage + " resulted in this action missing the target." + other_roll;
}

function capture(){


    //Grabs the desired target
    var target = document.calculator.captarget.value;

if (target == 1) {
var SPD = document.calculator.SPD_1.value;
var battle_HP = document.calculator.HP_1.value;
var caprate = (document.calculator.CR_1.value);
var habitat = document.calculator.Zone_1.value;
var pkmn = document.calculator.pokemon_1.value;
var KG = document.calculator.KG_1.value * parseFloat(document.calculator.modKG_1.value);
}
if (target == 2) {
var battle_HP = document.calculator.HP_2.value;
var caprate = document.calculator.CR_2.value;
var habitat = document.calculator.Zone_2.value;
var pkmn = document.calculator.pokemon_2.value;
var KG = document.calculator.KG_2.value * parseFloat(document.calculator.modKG_2.value);
var SPD = document.calculator.SPD_2.value;
}
if (target == 3) {
var battle_HP = document.calculator.HP_3.value;
var caprate = document.calculator.CR_3.value;
var habitat = document.calculator.Zone_3.value;
var pkmn = document.calculator.pokemon_3.value;
var KG = document.calculator.KG_3.value * parseFloat(document.calculator.modKG_3.value);
var SPD = document.calculator.SPD_3.value;
}
if (target == 4) {
var battle_HP = document.calculator.HP_4.value;
var caprate = document.calculator.CR_4.value;
var habitat = document.calculator.Zone_4.value;
var pkmn = document.calculator.pokemon_4.value;
var KG = document.calculator.KG_4.value * parseFloat(document.calculator.modKG_4.value);
var SPD = document.calculator.SPD_4.value;
}
if (target == 5) {
var battle_HP = document.calculator.HP_5.value;
var caprate = document.calculator.CR_5.value;
var habitat = document.calculator.Zone_5.value;
var pkmn = document.calculator.pokemon_5.value;
var KG = document.calculator.KG_5.value * parseFloat(document.calculator.modKG_5.value);
var SPD = document.calculator.SPD_5.value;
}
if (target == 6) {
var battle_HP = document.calculator.HP_6.value;
var caprate = document.calculator.CR_6.value;
var habitat = document.calculator.Zone_6.value;
var pkmn = document.calculator.pokemon_6.value;
var KG = document.calculator.KG_6.value * parseFloat(document.calculator.modKG_6.value);
var SPD = document.calculator.SPD_6.value;
}

//Checks for Honey
var constant = 40;
var honey = "";
if (document.calculator.honey.value == 2){
constant = 50;
honey = " (Honey is in effect.)"
}

//Measures the ball that is used

if (document.calculator.BALL.value < 11){
var BALL = document.calculator.BALL.value;
}

//Zone Ball
if (document.calculator.BALL.value > 10){
var BALL = 0;
if (document.calculator.BALL.value == habitat){
var BALL = 20;
}
}
//Moon Ball
if (document.calculator.BALL.value == 20){
var BALL = 0;
if (pkmn == 35|| pkmn == 36|| pkmn == 300|| pkmn == 301|| pkmn == 39|| pkmn == 40|| pkmn == 517|| pkmn == 518|| pkmn == 518|| pkmn == 29|| pkmn == 30|| pkmn == 31|| pkmn == 32|| pkmn == 33|| pkmn == 34|| pkmn == 174|| pkmn == 173){

var BALL = 20;
}
}

//Love Ball
if (document.calculator.BALL.value == 21){
var BALL = 0;
if (document.calculator.usersex.value == 2){
var BALL = 20;
}
}

//Fast Ball
if (document.calculator.BALL.value == 22){
var BALL = 0;
if (SPD > 99){
var BALL = 20;
}
}

//Repeat Ball
if (document.calculator.BALL.value == 23){
var BALL = 0;
if (document.calculator.repeat.value == 2){
var BALL = 20;
}
}

//Timer Ball
if (document.calculator.BALL.value == 24){
var BALL = (document.calculator.turn.value * 2)
}

//Heavy Ball
if (document.calculator.BALL.value == 25){
if (KG < 205){
var BALL = -10;
}
if (KG > 204){
var BALL = 10;
}
if (KG > 308){
var BALL = 15;
}
if (KG > 409){
var BALL = 20;
}
}

//Fixes anything over or undefined
if (BALL > 20){
BALL = 20;
}

//Checks if Pok√©mon has a status condition
    var STATUS = 0;

if (document.calculator.ic.value == 2){STATUS = 5};
if (document.calculator.pbp.value == 2){STATUS = 10};
if (document.calculator.fs.value == 2){STATUS = 15};

//Modifier changes depending on the CaptureRate
var X;

if (caprate==10){X=3};
if (caprate==11){X=3};
if (caprate==12){X=3};
if (caprate==13){X=3};
if (caprate==14){X=2};
if (caprate==15){X=2};
if (caprate==16){X=1};
if (caprate==17){X=1};
if (caprate==18){X=1};
if (caprate==19){X=0.8};
if (caprate==20){X=0.8};
if (caprate==21){X=0.8};
if (caprate==22){X=0.8};
if (caprate==23){X=0.75};
if (caprate==24){X=0.75};
if (caprate==25){X=0.75};
if (caprate==26){X=0.75};
if (caprate==27){X=0.6};
if (caprate==28){X=0.6};
if (caprate==29){X=0.6};
if (caprate==30){X=0.6};
if (caprate==31){X=0.5};
if (caprate==32){X=0.5};
if (caprate==33){X=0.5};
if (caprate==34){X=0.25};
if (caprate==35){X=0.25};
if (caprate==36){X=0.25};
if (caprate==37){X=0.25};
if (caprate==38){X=0.1};
if (caprate==39){X=0.1};
if (caprate==40){X=0.1};
if (caprate==41){X=0.1};

    //Rolls from 1-100
    var catch_roll = Math.floor(Math.random()*101)
    //Performs the capture formula
var catch_percentage = 0;
    var catch_percentage = Math.round(parseInt(BALL)+(parseFloat(X)*(100-parseInt(battle_HP)))+parseInt(STATUS)-parseInt(caprate)+constant);
    //Works like Shiny - assumes the worst unless an if statement says otherwise
    var result = "Capture failed!\n";

    if (catch_percentage > catch_roll) {
        result = "Capture success!\n";
    }

document.calculator.descdmg.value = "CAPTURE FORMULA\n" + "Capture Rate: " + caprate + " | " + "X: " + X + " | " + "HP: " +battle_HP+ " | " + "Ball: " + BALL + " | " + "Status: "+STATUS+honey+"\n\nBALL + ( X * ( 100 - HP ) ) + STATUS + HONEY - CaptureRate = "+BALL+" + ( "+X+" * ( 100 - "+battle_HP+ ") ) + "+STATUS+" + "+constant+" - "+caprate+" = "+catch_percentage+"\n\n"+result+"\nThe capture roll was " + catch_roll + ", where anything less than " + catch_percentage + " would result in a capture.\n";
}